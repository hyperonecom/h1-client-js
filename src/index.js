/**
 * HyperOne API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.0.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccessrightsUserRole', 'model/Agent', 'model/AgentCreate', 'model/AgentCreateCredential', 'model/AgentPatchCredentialcertificateId', 'model/AgentPostAccessrights', 'model/AgentPostCredentialcertificate', 'model/AgentResource', 'model/AgentResourceEvent', 'model/AgentServices', 'model/AgentUpdate', 'model/Container', 'model/ContainerCreate', 'model/ContainerCreateExpose', 'model/ContainerCreateRegistry', 'model/ContainerCreateVolumes', 'model/ContainerExpose', 'model/ContainerPostAccessrights', 'model/ContainerProcess', 'model/ContainerServices', 'model/ContainerUpdate', 'model/ContainerVolumes', 'model/CredentialCertificate', 'model/CredentialPassword', 'model/Disk', 'model/DiskActionClone', 'model/DiskActionResize', 'model/DiskActionTransfer', 'model/DiskCreate', 'model/DiskMetadata', 'model/DiskMetadataSource', 'model/DiskPostAccessrights', 'model/DiskServices', 'model/DiskUpdate', 'model/Event', 'model/EventResource', 'model/Firewall', 'model/FirewallActionAttach', 'model/FirewallActionTransfer', 'model/FirewallCreate', 'model/FirewallPostAccessrights', 'model/FirewallPostEgress', 'model/FirewallPostIngress', 'model/FirewallServices', 'model/FirewallUpdate', 'model/Hdd', 'model/HddDisk', 'model/Image', 'model/ImageActionTransfer', 'model/ImageAttachedOn', 'model/ImageCreate', 'model/ImageDisk', 'model/ImageDisks', 'model/ImagePostAccessrights', 'model/ImageServices', 'model/ImageUpdate', 'model/ImageVm', 'model/InlineResponse200', 'model/InlineResponse400', 'model/Ip', 'model/IpActionAssociate', 'model/IpActionTransfer', 'model/IpAssociated', 'model/IpCreate', 'model/IpPostAccessrights', 'model/IpServices', 'model/IpUpdate', 'model/Iso', 'model/IsoActionTransfer', 'model/IsoCreate', 'model/IsoPostAccessrights', 'model/IsoServices', 'model/IsoUpdate', 'model/LogArchive', 'model/LogArchiveActionTransfer', 'model/LogArchiveCreate', 'model/LogArchiveCreateCredential', 'model/LogArchivePatchCredentialpasswordId', 'model/LogArchivePostAccessrights', 'model/LogArchivePostCredentialpassword', 'model/LogArchiveServices', 'model/LogArchiveUpdate', 'model/Netadp', 'model/NetadpAssigned', 'model/NetadpPostAccessrights', 'model/NetadpServices', 'model/Netgw', 'model/NetgwActionAttach', 'model/NetgwActionAttachPrivate', 'model/NetgwCreate', 'model/NetgwCreatePublic', 'model/NetgwPostAccessrights', 'model/NetgwServices', 'model/NetgwUpdate', 'model/Network', 'model/NetworkCreate', 'model/NetworkDns', 'model/NetworkPostAccessrights', 'model/NetworkPostIp', 'model/NetworkServices', 'model/NetworkUpdate', 'model/Organisation', 'model/OrganisationActionPaymentAssign', 'model/OrganisationActionTransferAccept', 'model/OrganisationBilling', 'model/OrganisationBillingAddress', 'model/OrganisationCreate', 'model/OrganisationCreateAccessRights', 'model/OrganisationCreateBilling', 'model/OrganisationCreateBillingAddress', 'model/OrganisationLimit', 'model/OrganisationLimitOrganisation', 'model/OrganisationPostAccessrights', 'model/OrganisationTransfer', 'model/OrganisationUpdate', 'model/OrganisationUpdateBilling', 'model/OrganisationUpdateBillingAddress', 'model/Payment', 'model/Project', 'model/ProjectAccess', 'model/ProjectAccessRights', 'model/ProjectBilling', 'model/ProjectCompliance', 'model/ProjectCreate', 'model/ProjectCreateAccessRights', 'model/ProjectDuplicate', 'model/ProjectInvoices', 'model/ProjectLimit', 'model/ProjectLimitAgent', 'model/ProjectLimitDisk', 'model/ProjectLimitDomain', 'model/ProjectLimitImage', 'model/ProjectLimitIso', 'model/ProjectLimitNetwork', 'model/ProjectLimitReservation', 'model/ProjectLimitSnapshot', 'model/ProjectLimitVault', 'model/ProjectLimitVm', 'model/ProjectLimitVolume', 'model/ProjectPatchCredentialStorecertificateId', 'model/ProjectPostAccessrights', 'model/ProjectPostCredentialStorecertificate', 'model/ProjectRoles', 'model/ProjectServices', 'model/ProjectThreshold', 'model/ProjectThresholdCredits', 'model/ProjectTransfer', 'model/ProjectUpdate', 'model/Replica', 'model/ReplicaActionImage', 'model/ReplicaCreate', 'model/ReplicaPostAccessrights', 'model/ReplicaServices', 'model/Reservation', 'model/ReservationActionAssign', 'model/ReservationCreate', 'model/ReservationPostAccessrights', 'model/ReservationServices', 'model/ReservationUpdate', 'model/Service', 'model/ServiceBilling', 'model/ServiceBillingPrice', 'model/ServiceBillingReservations', 'model/Snapshot', 'model/SnapshotCreate', 'model/SnapshotPostAccessrights', 'model/SnapshotServices', 'model/SnapshotUpdate', 'model/User', 'model/UserCredential', 'model/UserCredentialPassword', 'model/UserLastLogin', 'model/UserLimit', 'model/UserNetworkAcl', 'model/UserPasswordReset', 'model/UserPatchCredentialcertificateId', 'model/UserPatchCredentialpasswordId', 'model/UserPostCredentialcertificate', 'model/UserPostCredentialpassword', 'model/Vault', 'model/VaultActionResize', 'model/VaultActionSnapshot', 'model/VaultCreate', 'model/VaultCreateCredential', 'model/VaultCreateCredentialCertificate', 'model/VaultCreateCredentialPassword', 'model/VaultDelete', 'model/VaultPatchCredentialcertificateId', 'model/VaultPatchCredentialpasswordId', 'model/VaultPostAccessrights', 'model/VaultPostCredentialcertificate', 'model/VaultPostCredentialpassword', 'model/VaultServices', 'model/VaultUpdate', 'model/Vm', 'model/VmActionFlavour', 'model/VmActionImage', 'model/VmActionPasswordReset', 'model/VmActionRename', 'model/VmCreate', 'model/VmCreateDisk', 'model/VmCreateNetadp', 'model/VmCreatePassword', 'model/VmData', 'model/VmDelete', 'model/VmPostAccessrights', 'model/VmPostHdd', 'model/VmPostNetadp', 'model/VmServices', 'model/VmSourceImage', 'model/VmUpdate', 'model/Volume', 'model/VolumeCreate', 'model/VolumePostAccessrights', 'model/VolumeServices', 'model/VolumeUpdate', 'model/Website', 'model/WebsiteCreate', 'model/WebsitePatchCredentialcertificateId', 'model/WebsitePatchCredentialpasswordId', 'model/WebsitePostAccessrights', 'model/WebsitePostCredentialcertificate', 'model/WebsitePostCredentialpassword', 'model/WebsiteServices', 'model/WebsiteUpdate', 'api/AgentApi', 'api/ContainerApi', 'api/DiskApi', 'api/FirewallApi', 'api/ImageApi', 'api/IpApi', 'api/IsoApi', 'api/LogArchiveApi', 'api/NetadpApi', 'api/NetgwApi', 'api/NetworkApi', 'api/OrganisationApi', 'api/ProjectApi', 'api/ReplicaApi', 'api/ReservationApi', 'api/ServiceApi', 'api/SnapshotApi', 'api/UserApi', 'api/VaultApi', 'api/VmApi', 'api/VolumeApi', 'api/WebsiteApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AccessrightsUserRole'), require('./model/Agent'), require('./model/AgentCreate'), require('./model/AgentCreateCredential'), require('./model/AgentPatchCredentialcertificateId'), require('./model/AgentPostAccessrights'), require('./model/AgentPostCredentialcertificate'), require('./model/AgentResource'), require('./model/AgentResourceEvent'), require('./model/AgentServices'), require('./model/AgentUpdate'), require('./model/Container'), require('./model/ContainerCreate'), require('./model/ContainerCreateExpose'), require('./model/ContainerCreateRegistry'), require('./model/ContainerCreateVolumes'), require('./model/ContainerExpose'), require('./model/ContainerPostAccessrights'), require('./model/ContainerProcess'), require('./model/ContainerServices'), require('./model/ContainerUpdate'), require('./model/ContainerVolumes'), require('./model/CredentialCertificate'), require('./model/CredentialPassword'), require('./model/Disk'), require('./model/DiskActionClone'), require('./model/DiskActionResize'), require('./model/DiskActionTransfer'), require('./model/DiskCreate'), require('./model/DiskMetadata'), require('./model/DiskMetadataSource'), require('./model/DiskPostAccessrights'), require('./model/DiskServices'), require('./model/DiskUpdate'), require('./model/Event'), require('./model/EventResource'), require('./model/Firewall'), require('./model/FirewallActionAttach'), require('./model/FirewallActionTransfer'), require('./model/FirewallCreate'), require('./model/FirewallPostAccessrights'), require('./model/FirewallPostEgress'), require('./model/FirewallPostIngress'), require('./model/FirewallServices'), require('./model/FirewallUpdate'), require('./model/Hdd'), require('./model/HddDisk'), require('./model/Image'), require('./model/ImageActionTransfer'), require('./model/ImageAttachedOn'), require('./model/ImageCreate'), require('./model/ImageDisk'), require('./model/ImageDisks'), require('./model/ImagePostAccessrights'), require('./model/ImageServices'), require('./model/ImageUpdate'), require('./model/ImageVm'), require('./model/InlineResponse200'), require('./model/InlineResponse400'), require('./model/Ip'), require('./model/IpActionAssociate'), require('./model/IpActionTransfer'), require('./model/IpAssociated'), require('./model/IpCreate'), require('./model/IpPostAccessrights'), require('./model/IpServices'), require('./model/IpUpdate'), require('./model/Iso'), require('./model/IsoActionTransfer'), require('./model/IsoCreate'), require('./model/IsoPostAccessrights'), require('./model/IsoServices'), require('./model/IsoUpdate'), require('./model/LogArchive'), require('./model/LogArchiveActionTransfer'), require('./model/LogArchiveCreate'), require('./model/LogArchiveCreateCredential'), require('./model/LogArchivePatchCredentialpasswordId'), require('./model/LogArchivePostAccessrights'), require('./model/LogArchivePostCredentialpassword'), require('./model/LogArchiveServices'), require('./model/LogArchiveUpdate'), require('./model/Netadp'), require('./model/NetadpAssigned'), require('./model/NetadpPostAccessrights'), require('./model/NetadpServices'), require('./model/Netgw'), require('./model/NetgwActionAttach'), require('./model/NetgwActionAttachPrivate'), require('./model/NetgwCreate'), require('./model/NetgwCreatePublic'), require('./model/NetgwPostAccessrights'), require('./model/NetgwServices'), require('./model/NetgwUpdate'), require('./model/Network'), require('./model/NetworkCreate'), require('./model/NetworkDns'), require('./model/NetworkPostAccessrights'), require('./model/NetworkPostIp'), require('./model/NetworkServices'), require('./model/NetworkUpdate'), require('./model/Organisation'), require('./model/OrganisationActionPaymentAssign'), require('./model/OrganisationActionTransferAccept'), require('./model/OrganisationBilling'), require('./model/OrganisationBillingAddress'), require('./model/OrganisationCreate'), require('./model/OrganisationCreateAccessRights'), require('./model/OrganisationCreateBilling'), require('./model/OrganisationCreateBillingAddress'), require('./model/OrganisationLimit'), require('./model/OrganisationLimitOrganisation'), require('./model/OrganisationPostAccessrights'), require('./model/OrganisationTransfer'), require('./model/OrganisationUpdate'), require('./model/OrganisationUpdateBilling'), require('./model/OrganisationUpdateBillingAddress'), require('./model/Payment'), require('./model/Project'), require('./model/ProjectAccess'), require('./model/ProjectAccessRights'), require('./model/ProjectBilling'), require('./model/ProjectCompliance'), require('./model/ProjectCreate'), require('./model/ProjectCreateAccessRights'), require('./model/ProjectDuplicate'), require('./model/ProjectInvoices'), require('./model/ProjectLimit'), require('./model/ProjectLimitAgent'), require('./model/ProjectLimitDisk'), require('./model/ProjectLimitDomain'), require('./model/ProjectLimitImage'), require('./model/ProjectLimitIso'), require('./model/ProjectLimitNetwork'), require('./model/ProjectLimitReservation'), require('./model/ProjectLimitSnapshot'), require('./model/ProjectLimitVault'), require('./model/ProjectLimitVm'), require('./model/ProjectLimitVolume'), require('./model/ProjectPatchCredentialStorecertificateId'), require('./model/ProjectPostAccessrights'), require('./model/ProjectPostCredentialStorecertificate'), require('./model/ProjectRoles'), require('./model/ProjectServices'), require('./model/ProjectThreshold'), require('./model/ProjectThresholdCredits'), require('./model/ProjectTransfer'), require('./model/ProjectUpdate'), require('./model/Replica'), require('./model/ReplicaActionImage'), require('./model/ReplicaCreate'), require('./model/ReplicaPostAccessrights'), require('./model/ReplicaServices'), require('./model/Reservation'), require('./model/ReservationActionAssign'), require('./model/ReservationCreate'), require('./model/ReservationPostAccessrights'), require('./model/ReservationServices'), require('./model/ReservationUpdate'), require('./model/Service'), require('./model/ServiceBilling'), require('./model/ServiceBillingPrice'), require('./model/ServiceBillingReservations'), require('./model/Snapshot'), require('./model/SnapshotCreate'), require('./model/SnapshotPostAccessrights'), require('./model/SnapshotServices'), require('./model/SnapshotUpdate'), require('./model/User'), require('./model/UserCredential'), require('./model/UserCredentialPassword'), require('./model/UserLastLogin'), require('./model/UserLimit'), require('./model/UserNetworkAcl'), require('./model/UserPasswordReset'), require('./model/UserPatchCredentialcertificateId'), require('./model/UserPatchCredentialpasswordId'), require('./model/UserPostCredentialcertificate'), require('./model/UserPostCredentialpassword'), require('./model/Vault'), require('./model/VaultActionResize'), require('./model/VaultActionSnapshot'), require('./model/VaultCreate'), require('./model/VaultCreateCredential'), require('./model/VaultCreateCredentialCertificate'), require('./model/VaultCreateCredentialPassword'), require('./model/VaultDelete'), require('./model/VaultPatchCredentialcertificateId'), require('./model/VaultPatchCredentialpasswordId'), require('./model/VaultPostAccessrights'), require('./model/VaultPostCredentialcertificate'), require('./model/VaultPostCredentialpassword'), require('./model/VaultServices'), require('./model/VaultUpdate'), require('./model/Vm'), require('./model/VmActionFlavour'), require('./model/VmActionImage'), require('./model/VmActionPasswordReset'), require('./model/VmActionRename'), require('./model/VmCreate'), require('./model/VmCreateDisk'), require('./model/VmCreateNetadp'), require('./model/VmCreatePassword'), require('./model/VmData'), require('./model/VmDelete'), require('./model/VmPostAccessrights'), require('./model/VmPostHdd'), require('./model/VmPostNetadp'), require('./model/VmServices'), require('./model/VmSourceImage'), require('./model/VmUpdate'), require('./model/Volume'), require('./model/VolumeCreate'), require('./model/VolumePostAccessrights'), require('./model/VolumeServices'), require('./model/VolumeUpdate'), require('./model/Website'), require('./model/WebsiteCreate'), require('./model/WebsitePatchCredentialcertificateId'), require('./model/WebsitePatchCredentialpasswordId'), require('./model/WebsitePostAccessrights'), require('./model/WebsitePostCredentialcertificate'), require('./model/WebsitePostCredentialpassword'), require('./model/WebsiteServices'), require('./model/WebsiteUpdate'), require('./api/AgentApi'), require('./api/ContainerApi'), require('./api/DiskApi'), require('./api/FirewallApi'), require('./api/ImageApi'), require('./api/IpApi'), require('./api/IsoApi'), require('./api/LogArchiveApi'), require('./api/NetadpApi'), require('./api/NetgwApi'), require('./api/NetworkApi'), require('./api/OrganisationApi'), require('./api/ProjectApi'), require('./api/ReplicaApi'), require('./api/ReservationApi'), require('./api/ServiceApi'), require('./api/SnapshotApi'), require('./api/UserApi'), require('./api/VaultApi'), require('./api/VmApi'), require('./api/VolumeApi'), require('./api/WebsiteApi'));
  }
}(function(ApiClient, AccessrightsUserRole, Agent, AgentCreate, AgentCreateCredential, AgentPatchCredentialcertificateId, AgentPostAccessrights, AgentPostCredentialcertificate, AgentResource, AgentResourceEvent, AgentServices, AgentUpdate, Container, ContainerCreate, ContainerCreateExpose, ContainerCreateRegistry, ContainerCreateVolumes, ContainerExpose, ContainerPostAccessrights, ContainerProcess, ContainerServices, ContainerUpdate, ContainerVolumes, CredentialCertificate, CredentialPassword, Disk, DiskActionClone, DiskActionResize, DiskActionTransfer, DiskCreate, DiskMetadata, DiskMetadataSource, DiskPostAccessrights, DiskServices, DiskUpdate, Event, EventResource, Firewall, FirewallActionAttach, FirewallActionTransfer, FirewallCreate, FirewallPostAccessrights, FirewallPostEgress, FirewallPostIngress, FirewallServices, FirewallUpdate, Hdd, HddDisk, Image, ImageActionTransfer, ImageAttachedOn, ImageCreate, ImageDisk, ImageDisks, ImagePostAccessrights, ImageServices, ImageUpdate, ImageVm, InlineResponse200, InlineResponse400, Ip, IpActionAssociate, IpActionTransfer, IpAssociated, IpCreate, IpPostAccessrights, IpServices, IpUpdate, Iso, IsoActionTransfer, IsoCreate, IsoPostAccessrights, IsoServices, IsoUpdate, LogArchive, LogArchiveActionTransfer, LogArchiveCreate, LogArchiveCreateCredential, LogArchivePatchCredentialpasswordId, LogArchivePostAccessrights, LogArchivePostCredentialpassword, LogArchiveServices, LogArchiveUpdate, Netadp, NetadpAssigned, NetadpPostAccessrights, NetadpServices, Netgw, NetgwActionAttach, NetgwActionAttachPrivate, NetgwCreate, NetgwCreatePublic, NetgwPostAccessrights, NetgwServices, NetgwUpdate, Network, NetworkCreate, NetworkDns, NetworkPostAccessrights, NetworkPostIp, NetworkServices, NetworkUpdate, Organisation, OrganisationActionPaymentAssign, OrganisationActionTransferAccept, OrganisationBilling, OrganisationBillingAddress, OrganisationCreate, OrganisationCreateAccessRights, OrganisationCreateBilling, OrganisationCreateBillingAddress, OrganisationLimit, OrganisationLimitOrganisation, OrganisationPostAccessrights, OrganisationTransfer, OrganisationUpdate, OrganisationUpdateBilling, OrganisationUpdateBillingAddress, Payment, Project, ProjectAccess, ProjectAccessRights, ProjectBilling, ProjectCompliance, ProjectCreate, ProjectCreateAccessRights, ProjectDuplicate, ProjectInvoices, ProjectLimit, ProjectLimitAgent, ProjectLimitDisk, ProjectLimitDomain, ProjectLimitImage, ProjectLimitIso, ProjectLimitNetwork, ProjectLimitReservation, ProjectLimitSnapshot, ProjectLimitVault, ProjectLimitVm, ProjectLimitVolume, ProjectPatchCredentialStorecertificateId, ProjectPostAccessrights, ProjectPostCredentialStorecertificate, ProjectRoles, ProjectServices, ProjectThreshold, ProjectThresholdCredits, ProjectTransfer, ProjectUpdate, Replica, ReplicaActionImage, ReplicaCreate, ReplicaPostAccessrights, ReplicaServices, Reservation, ReservationActionAssign, ReservationCreate, ReservationPostAccessrights, ReservationServices, ReservationUpdate, Service, ServiceBilling, ServiceBillingPrice, ServiceBillingReservations, Snapshot, SnapshotCreate, SnapshotPostAccessrights, SnapshotServices, SnapshotUpdate, User, UserCredential, UserCredentialPassword, UserLastLogin, UserLimit, UserNetworkAcl, UserPasswordReset, UserPatchCredentialcertificateId, UserPatchCredentialpasswordId, UserPostCredentialcertificate, UserPostCredentialpassword, Vault, VaultActionResize, VaultActionSnapshot, VaultCreate, VaultCreateCredential, VaultCreateCredentialCertificate, VaultCreateCredentialPassword, VaultDelete, VaultPatchCredentialcertificateId, VaultPatchCredentialpasswordId, VaultPostAccessrights, VaultPostCredentialcertificate, VaultPostCredentialpassword, VaultServices, VaultUpdate, Vm, VmActionFlavour, VmActionImage, VmActionPasswordReset, VmActionRename, VmCreate, VmCreateDisk, VmCreateNetadp, VmCreatePassword, VmData, VmDelete, VmPostAccessrights, VmPostHdd, VmPostNetadp, VmServices, VmSourceImage, VmUpdate, Volume, VolumeCreate, VolumePostAccessrights, VolumeServices, VolumeUpdate, Website, WebsiteCreate, WebsitePatchCredentialcertificateId, WebsitePatchCredentialpasswordId, WebsitePostAccessrights, WebsitePostCredentialcertificate, WebsitePostCredentialpassword, WebsiteServices, WebsiteUpdate, AgentApi, ContainerApi, DiskApi, FirewallApi, ImageApi, IpApi, IsoApi, LogArchiveApi, NetadpApi, NetgwApi, NetworkApi, OrganisationApi, ProjectApi, ReplicaApi, ReservationApi, ServiceApi, SnapshotApi, UserApi, VaultApi, VmApi, VolumeApi, WebsiteApi) {
  'use strict';

  /**
   * JS API client generated by OpenAPI Generator.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var HyperOneApi = require('index'); // See note below*.
   * var xxxSvc = new HyperOneApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new HyperOneApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new HyperOneApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new HyperOneApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 0.0.2
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AccessrightsUserRole model constructor.
     * @property {module:model/AccessrightsUserRole}
     */
    AccessrightsUserRole: AccessrightsUserRole,
    /**
     * The Agent model constructor.
     * @property {module:model/Agent}
     */
    Agent: Agent,
    /**
     * The AgentCreate model constructor.
     * @property {module:model/AgentCreate}
     */
    AgentCreate: AgentCreate,
    /**
     * The AgentCreateCredential model constructor.
     * @property {module:model/AgentCreateCredential}
     */
    AgentCreateCredential: AgentCreateCredential,
    /**
     * The AgentPatchCredentialcertificateId model constructor.
     * @property {module:model/AgentPatchCredentialcertificateId}
     */
    AgentPatchCredentialcertificateId: AgentPatchCredentialcertificateId,
    /**
     * The AgentPostAccessrights model constructor.
     * @property {module:model/AgentPostAccessrights}
     */
    AgentPostAccessrights: AgentPostAccessrights,
    /**
     * The AgentPostCredentialcertificate model constructor.
     * @property {module:model/AgentPostCredentialcertificate}
     */
    AgentPostCredentialcertificate: AgentPostCredentialcertificate,
    /**
     * The AgentResource model constructor.
     * @property {module:model/AgentResource}
     */
    AgentResource: AgentResource,
    /**
     * The AgentResourceEvent model constructor.
     * @property {module:model/AgentResourceEvent}
     */
    AgentResourceEvent: AgentResourceEvent,
    /**
     * The AgentServices model constructor.
     * @property {module:model/AgentServices}
     */
    AgentServices: AgentServices,
    /**
     * The AgentUpdate model constructor.
     * @property {module:model/AgentUpdate}
     */
    AgentUpdate: AgentUpdate,
    /**
     * The Container model constructor.
     * @property {module:model/Container}
     */
    Container: Container,
    /**
     * The ContainerCreate model constructor.
     * @property {module:model/ContainerCreate}
     */
    ContainerCreate: ContainerCreate,
    /**
     * The ContainerCreateExpose model constructor.
     * @property {module:model/ContainerCreateExpose}
     */
    ContainerCreateExpose: ContainerCreateExpose,
    /**
     * The ContainerCreateRegistry model constructor.
     * @property {module:model/ContainerCreateRegistry}
     */
    ContainerCreateRegistry: ContainerCreateRegistry,
    /**
     * The ContainerCreateVolumes model constructor.
     * @property {module:model/ContainerCreateVolumes}
     */
    ContainerCreateVolumes: ContainerCreateVolumes,
    /**
     * The ContainerExpose model constructor.
     * @property {module:model/ContainerExpose}
     */
    ContainerExpose: ContainerExpose,
    /**
     * The ContainerPostAccessrights model constructor.
     * @property {module:model/ContainerPostAccessrights}
     */
    ContainerPostAccessrights: ContainerPostAccessrights,
    /**
     * The ContainerProcess model constructor.
     * @property {module:model/ContainerProcess}
     */
    ContainerProcess: ContainerProcess,
    /**
     * The ContainerServices model constructor.
     * @property {module:model/ContainerServices}
     */
    ContainerServices: ContainerServices,
    /**
     * The ContainerUpdate model constructor.
     * @property {module:model/ContainerUpdate}
     */
    ContainerUpdate: ContainerUpdate,
    /**
     * The ContainerVolumes model constructor.
     * @property {module:model/ContainerVolumes}
     */
    ContainerVolumes: ContainerVolumes,
    /**
     * The CredentialCertificate model constructor.
     * @property {module:model/CredentialCertificate}
     */
    CredentialCertificate: CredentialCertificate,
    /**
     * The CredentialPassword model constructor.
     * @property {module:model/CredentialPassword}
     */
    CredentialPassword: CredentialPassword,
    /**
     * The Disk model constructor.
     * @property {module:model/Disk}
     */
    Disk: Disk,
    /**
     * The DiskActionClone model constructor.
     * @property {module:model/DiskActionClone}
     */
    DiskActionClone: DiskActionClone,
    /**
     * The DiskActionResize model constructor.
     * @property {module:model/DiskActionResize}
     */
    DiskActionResize: DiskActionResize,
    /**
     * The DiskActionTransfer model constructor.
     * @property {module:model/DiskActionTransfer}
     */
    DiskActionTransfer: DiskActionTransfer,
    /**
     * The DiskCreate model constructor.
     * @property {module:model/DiskCreate}
     */
    DiskCreate: DiskCreate,
    /**
     * The DiskMetadata model constructor.
     * @property {module:model/DiskMetadata}
     */
    DiskMetadata: DiskMetadata,
    /**
     * The DiskMetadataSource model constructor.
     * @property {module:model/DiskMetadataSource}
     */
    DiskMetadataSource: DiskMetadataSource,
    /**
     * The DiskPostAccessrights model constructor.
     * @property {module:model/DiskPostAccessrights}
     */
    DiskPostAccessrights: DiskPostAccessrights,
    /**
     * The DiskServices model constructor.
     * @property {module:model/DiskServices}
     */
    DiskServices: DiskServices,
    /**
     * The DiskUpdate model constructor.
     * @property {module:model/DiskUpdate}
     */
    DiskUpdate: DiskUpdate,
    /**
     * The Event model constructor.
     * @property {module:model/Event}
     */
    Event: Event,
    /**
     * The EventResource model constructor.
     * @property {module:model/EventResource}
     */
    EventResource: EventResource,
    /**
     * The Firewall model constructor.
     * @property {module:model/Firewall}
     */
    Firewall: Firewall,
    /**
     * The FirewallActionAttach model constructor.
     * @property {module:model/FirewallActionAttach}
     */
    FirewallActionAttach: FirewallActionAttach,
    /**
     * The FirewallActionTransfer model constructor.
     * @property {module:model/FirewallActionTransfer}
     */
    FirewallActionTransfer: FirewallActionTransfer,
    /**
     * The FirewallCreate model constructor.
     * @property {module:model/FirewallCreate}
     */
    FirewallCreate: FirewallCreate,
    /**
     * The FirewallPostAccessrights model constructor.
     * @property {module:model/FirewallPostAccessrights}
     */
    FirewallPostAccessrights: FirewallPostAccessrights,
    /**
     * The FirewallPostEgress model constructor.
     * @property {module:model/FirewallPostEgress}
     */
    FirewallPostEgress: FirewallPostEgress,
    /**
     * The FirewallPostIngress model constructor.
     * @property {module:model/FirewallPostIngress}
     */
    FirewallPostIngress: FirewallPostIngress,
    /**
     * The FirewallServices model constructor.
     * @property {module:model/FirewallServices}
     */
    FirewallServices: FirewallServices,
    /**
     * The FirewallUpdate model constructor.
     * @property {module:model/FirewallUpdate}
     */
    FirewallUpdate: FirewallUpdate,
    /**
     * The Hdd model constructor.
     * @property {module:model/Hdd}
     */
    Hdd: Hdd,
    /**
     * The HddDisk model constructor.
     * @property {module:model/HddDisk}
     */
    HddDisk: HddDisk,
    /**
     * The Image model constructor.
     * @property {module:model/Image}
     */
    Image: Image,
    /**
     * The ImageActionTransfer model constructor.
     * @property {module:model/ImageActionTransfer}
     */
    ImageActionTransfer: ImageActionTransfer,
    /**
     * The ImageAttachedOn model constructor.
     * @property {module:model/ImageAttachedOn}
     */
    ImageAttachedOn: ImageAttachedOn,
    /**
     * The ImageCreate model constructor.
     * @property {module:model/ImageCreate}
     */
    ImageCreate: ImageCreate,
    /**
     * The ImageDisk model constructor.
     * @property {module:model/ImageDisk}
     */
    ImageDisk: ImageDisk,
    /**
     * The ImageDisks model constructor.
     * @property {module:model/ImageDisks}
     */
    ImageDisks: ImageDisks,
    /**
     * The ImagePostAccessrights model constructor.
     * @property {module:model/ImagePostAccessrights}
     */
    ImagePostAccessrights: ImagePostAccessrights,
    /**
     * The ImageServices model constructor.
     * @property {module:model/ImageServices}
     */
    ImageServices: ImageServices,
    /**
     * The ImageUpdate model constructor.
     * @property {module:model/ImageUpdate}
     */
    ImageUpdate: ImageUpdate,
    /**
     * The ImageVm model constructor.
     * @property {module:model/ImageVm}
     */
    ImageVm: ImageVm,
    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200: InlineResponse200,
    /**
     * The InlineResponse400 model constructor.
     * @property {module:model/InlineResponse400}
     */
    InlineResponse400: InlineResponse400,
    /**
     * The Ip model constructor.
     * @property {module:model/Ip}
     */
    Ip: Ip,
    /**
     * The IpActionAssociate model constructor.
     * @property {module:model/IpActionAssociate}
     */
    IpActionAssociate: IpActionAssociate,
    /**
     * The IpActionTransfer model constructor.
     * @property {module:model/IpActionTransfer}
     */
    IpActionTransfer: IpActionTransfer,
    /**
     * The IpAssociated model constructor.
     * @property {module:model/IpAssociated}
     */
    IpAssociated: IpAssociated,
    /**
     * The IpCreate model constructor.
     * @property {module:model/IpCreate}
     */
    IpCreate: IpCreate,
    /**
     * The IpPostAccessrights model constructor.
     * @property {module:model/IpPostAccessrights}
     */
    IpPostAccessrights: IpPostAccessrights,
    /**
     * The IpServices model constructor.
     * @property {module:model/IpServices}
     */
    IpServices: IpServices,
    /**
     * The IpUpdate model constructor.
     * @property {module:model/IpUpdate}
     */
    IpUpdate: IpUpdate,
    /**
     * The Iso model constructor.
     * @property {module:model/Iso}
     */
    Iso: Iso,
    /**
     * The IsoActionTransfer model constructor.
     * @property {module:model/IsoActionTransfer}
     */
    IsoActionTransfer: IsoActionTransfer,
    /**
     * The IsoCreate model constructor.
     * @property {module:model/IsoCreate}
     */
    IsoCreate: IsoCreate,
    /**
     * The IsoPostAccessrights model constructor.
     * @property {module:model/IsoPostAccessrights}
     */
    IsoPostAccessrights: IsoPostAccessrights,
    /**
     * The IsoServices model constructor.
     * @property {module:model/IsoServices}
     */
    IsoServices: IsoServices,
    /**
     * The IsoUpdate model constructor.
     * @property {module:model/IsoUpdate}
     */
    IsoUpdate: IsoUpdate,
    /**
     * The LogArchive model constructor.
     * @property {module:model/LogArchive}
     */
    LogArchive: LogArchive,
    /**
     * The LogArchiveActionTransfer model constructor.
     * @property {module:model/LogArchiveActionTransfer}
     */
    LogArchiveActionTransfer: LogArchiveActionTransfer,
    /**
     * The LogArchiveCreate model constructor.
     * @property {module:model/LogArchiveCreate}
     */
    LogArchiveCreate: LogArchiveCreate,
    /**
     * The LogArchiveCreateCredential model constructor.
     * @property {module:model/LogArchiveCreateCredential}
     */
    LogArchiveCreateCredential: LogArchiveCreateCredential,
    /**
     * The LogArchivePatchCredentialpasswordId model constructor.
     * @property {module:model/LogArchivePatchCredentialpasswordId}
     */
    LogArchivePatchCredentialpasswordId: LogArchivePatchCredentialpasswordId,
    /**
     * The LogArchivePostAccessrights model constructor.
     * @property {module:model/LogArchivePostAccessrights}
     */
    LogArchivePostAccessrights: LogArchivePostAccessrights,
    /**
     * The LogArchivePostCredentialpassword model constructor.
     * @property {module:model/LogArchivePostCredentialpassword}
     */
    LogArchivePostCredentialpassword: LogArchivePostCredentialpassword,
    /**
     * The LogArchiveServices model constructor.
     * @property {module:model/LogArchiveServices}
     */
    LogArchiveServices: LogArchiveServices,
    /**
     * The LogArchiveUpdate model constructor.
     * @property {module:model/LogArchiveUpdate}
     */
    LogArchiveUpdate: LogArchiveUpdate,
    /**
     * The Netadp model constructor.
     * @property {module:model/Netadp}
     */
    Netadp: Netadp,
    /**
     * The NetadpAssigned model constructor.
     * @property {module:model/NetadpAssigned}
     */
    NetadpAssigned: NetadpAssigned,
    /**
     * The NetadpPostAccessrights model constructor.
     * @property {module:model/NetadpPostAccessrights}
     */
    NetadpPostAccessrights: NetadpPostAccessrights,
    /**
     * The NetadpServices model constructor.
     * @property {module:model/NetadpServices}
     */
    NetadpServices: NetadpServices,
    /**
     * The Netgw model constructor.
     * @property {module:model/Netgw}
     */
    Netgw: Netgw,
    /**
     * The NetgwActionAttach model constructor.
     * @property {module:model/NetgwActionAttach}
     */
    NetgwActionAttach: NetgwActionAttach,
    /**
     * The NetgwActionAttachPrivate model constructor.
     * @property {module:model/NetgwActionAttachPrivate}
     */
    NetgwActionAttachPrivate: NetgwActionAttachPrivate,
    /**
     * The NetgwCreate model constructor.
     * @property {module:model/NetgwCreate}
     */
    NetgwCreate: NetgwCreate,
    /**
     * The NetgwCreatePublic model constructor.
     * @property {module:model/NetgwCreatePublic}
     */
    NetgwCreatePublic: NetgwCreatePublic,
    /**
     * The NetgwPostAccessrights model constructor.
     * @property {module:model/NetgwPostAccessrights}
     */
    NetgwPostAccessrights: NetgwPostAccessrights,
    /**
     * The NetgwServices model constructor.
     * @property {module:model/NetgwServices}
     */
    NetgwServices: NetgwServices,
    /**
     * The NetgwUpdate model constructor.
     * @property {module:model/NetgwUpdate}
     */
    NetgwUpdate: NetgwUpdate,
    /**
     * The Network model constructor.
     * @property {module:model/Network}
     */
    Network: Network,
    /**
     * The NetworkCreate model constructor.
     * @property {module:model/NetworkCreate}
     */
    NetworkCreate: NetworkCreate,
    /**
     * The NetworkDns model constructor.
     * @property {module:model/NetworkDns}
     */
    NetworkDns: NetworkDns,
    /**
     * The NetworkPostAccessrights model constructor.
     * @property {module:model/NetworkPostAccessrights}
     */
    NetworkPostAccessrights: NetworkPostAccessrights,
    /**
     * The NetworkPostIp model constructor.
     * @property {module:model/NetworkPostIp}
     */
    NetworkPostIp: NetworkPostIp,
    /**
     * The NetworkServices model constructor.
     * @property {module:model/NetworkServices}
     */
    NetworkServices: NetworkServices,
    /**
     * The NetworkUpdate model constructor.
     * @property {module:model/NetworkUpdate}
     */
    NetworkUpdate: NetworkUpdate,
    /**
     * The Organisation model constructor.
     * @property {module:model/Organisation}
     */
    Organisation: Organisation,
    /**
     * The OrganisationActionPaymentAssign model constructor.
     * @property {module:model/OrganisationActionPaymentAssign}
     */
    OrganisationActionPaymentAssign: OrganisationActionPaymentAssign,
    /**
     * The OrganisationActionTransferAccept model constructor.
     * @property {module:model/OrganisationActionTransferAccept}
     */
    OrganisationActionTransferAccept: OrganisationActionTransferAccept,
    /**
     * The OrganisationBilling model constructor.
     * @property {module:model/OrganisationBilling}
     */
    OrganisationBilling: OrganisationBilling,
    /**
     * The OrganisationBillingAddress model constructor.
     * @property {module:model/OrganisationBillingAddress}
     */
    OrganisationBillingAddress: OrganisationBillingAddress,
    /**
     * The OrganisationCreate model constructor.
     * @property {module:model/OrganisationCreate}
     */
    OrganisationCreate: OrganisationCreate,
    /**
     * The OrganisationCreateAccessRights model constructor.
     * @property {module:model/OrganisationCreateAccessRights}
     */
    OrganisationCreateAccessRights: OrganisationCreateAccessRights,
    /**
     * The OrganisationCreateBilling model constructor.
     * @property {module:model/OrganisationCreateBilling}
     */
    OrganisationCreateBilling: OrganisationCreateBilling,
    /**
     * The OrganisationCreateBillingAddress model constructor.
     * @property {module:model/OrganisationCreateBillingAddress}
     */
    OrganisationCreateBillingAddress: OrganisationCreateBillingAddress,
    /**
     * The OrganisationLimit model constructor.
     * @property {module:model/OrganisationLimit}
     */
    OrganisationLimit: OrganisationLimit,
    /**
     * The OrganisationLimitOrganisation model constructor.
     * @property {module:model/OrganisationLimitOrganisation}
     */
    OrganisationLimitOrganisation: OrganisationLimitOrganisation,
    /**
     * The OrganisationPostAccessrights model constructor.
     * @property {module:model/OrganisationPostAccessrights}
     */
    OrganisationPostAccessrights: OrganisationPostAccessrights,
    /**
     * The OrganisationTransfer model constructor.
     * @property {module:model/OrganisationTransfer}
     */
    OrganisationTransfer: OrganisationTransfer,
    /**
     * The OrganisationUpdate model constructor.
     * @property {module:model/OrganisationUpdate}
     */
    OrganisationUpdate: OrganisationUpdate,
    /**
     * The OrganisationUpdateBilling model constructor.
     * @property {module:model/OrganisationUpdateBilling}
     */
    OrganisationUpdateBilling: OrganisationUpdateBilling,
    /**
     * The OrganisationUpdateBillingAddress model constructor.
     * @property {module:model/OrganisationUpdateBillingAddress}
     */
    OrganisationUpdateBillingAddress: OrganisationUpdateBillingAddress,
    /**
     * The Payment model constructor.
     * @property {module:model/Payment}
     */
    Payment: Payment,
    /**
     * The Project model constructor.
     * @property {module:model/Project}
     */
    Project: Project,
    /**
     * The ProjectAccess model constructor.
     * @property {module:model/ProjectAccess}
     */
    ProjectAccess: ProjectAccess,
    /**
     * The ProjectAccessRights model constructor.
     * @property {module:model/ProjectAccessRights}
     */
    ProjectAccessRights: ProjectAccessRights,
    /**
     * The ProjectBilling model constructor.
     * @property {module:model/ProjectBilling}
     */
    ProjectBilling: ProjectBilling,
    /**
     * The ProjectCompliance model constructor.
     * @property {module:model/ProjectCompliance}
     */
    ProjectCompliance: ProjectCompliance,
    /**
     * The ProjectCreate model constructor.
     * @property {module:model/ProjectCreate}
     */
    ProjectCreate: ProjectCreate,
    /**
     * The ProjectCreateAccessRights model constructor.
     * @property {module:model/ProjectCreateAccessRights}
     */
    ProjectCreateAccessRights: ProjectCreateAccessRights,
    /**
     * The ProjectDuplicate model constructor.
     * @property {module:model/ProjectDuplicate}
     */
    ProjectDuplicate: ProjectDuplicate,
    /**
     * The ProjectInvoices model constructor.
     * @property {module:model/ProjectInvoices}
     */
    ProjectInvoices: ProjectInvoices,
    /**
     * The ProjectLimit model constructor.
     * @property {module:model/ProjectLimit}
     */
    ProjectLimit: ProjectLimit,
    /**
     * The ProjectLimitAgent model constructor.
     * @property {module:model/ProjectLimitAgent}
     */
    ProjectLimitAgent: ProjectLimitAgent,
    /**
     * The ProjectLimitDisk model constructor.
     * @property {module:model/ProjectLimitDisk}
     */
    ProjectLimitDisk: ProjectLimitDisk,
    /**
     * The ProjectLimitDomain model constructor.
     * @property {module:model/ProjectLimitDomain}
     */
    ProjectLimitDomain: ProjectLimitDomain,
    /**
     * The ProjectLimitImage model constructor.
     * @property {module:model/ProjectLimitImage}
     */
    ProjectLimitImage: ProjectLimitImage,
    /**
     * The ProjectLimitIso model constructor.
     * @property {module:model/ProjectLimitIso}
     */
    ProjectLimitIso: ProjectLimitIso,
    /**
     * The ProjectLimitNetwork model constructor.
     * @property {module:model/ProjectLimitNetwork}
     */
    ProjectLimitNetwork: ProjectLimitNetwork,
    /**
     * The ProjectLimitReservation model constructor.
     * @property {module:model/ProjectLimitReservation}
     */
    ProjectLimitReservation: ProjectLimitReservation,
    /**
     * The ProjectLimitSnapshot model constructor.
     * @property {module:model/ProjectLimitSnapshot}
     */
    ProjectLimitSnapshot: ProjectLimitSnapshot,
    /**
     * The ProjectLimitVault model constructor.
     * @property {module:model/ProjectLimitVault}
     */
    ProjectLimitVault: ProjectLimitVault,
    /**
     * The ProjectLimitVm model constructor.
     * @property {module:model/ProjectLimitVm}
     */
    ProjectLimitVm: ProjectLimitVm,
    /**
     * The ProjectLimitVolume model constructor.
     * @property {module:model/ProjectLimitVolume}
     */
    ProjectLimitVolume: ProjectLimitVolume,
    /**
     * The ProjectPatchCredentialStorecertificateId model constructor.
     * @property {module:model/ProjectPatchCredentialStorecertificateId}
     */
    ProjectPatchCredentialStorecertificateId: ProjectPatchCredentialStorecertificateId,
    /**
     * The ProjectPostAccessrights model constructor.
     * @property {module:model/ProjectPostAccessrights}
     */
    ProjectPostAccessrights: ProjectPostAccessrights,
    /**
     * The ProjectPostCredentialStorecertificate model constructor.
     * @property {module:model/ProjectPostCredentialStorecertificate}
     */
    ProjectPostCredentialStorecertificate: ProjectPostCredentialStorecertificate,
    /**
     * The ProjectRoles model constructor.
     * @property {module:model/ProjectRoles}
     */
    ProjectRoles: ProjectRoles,
    /**
     * The ProjectServices model constructor.
     * @property {module:model/ProjectServices}
     */
    ProjectServices: ProjectServices,
    /**
     * The ProjectThreshold model constructor.
     * @property {module:model/ProjectThreshold}
     */
    ProjectThreshold: ProjectThreshold,
    /**
     * The ProjectThresholdCredits model constructor.
     * @property {module:model/ProjectThresholdCredits}
     */
    ProjectThresholdCredits: ProjectThresholdCredits,
    /**
     * The ProjectTransfer model constructor.
     * @property {module:model/ProjectTransfer}
     */
    ProjectTransfer: ProjectTransfer,
    /**
     * The ProjectUpdate model constructor.
     * @property {module:model/ProjectUpdate}
     */
    ProjectUpdate: ProjectUpdate,
    /**
     * The Replica model constructor.
     * @property {module:model/Replica}
     */
    Replica: Replica,
    /**
     * The ReplicaActionImage model constructor.
     * @property {module:model/ReplicaActionImage}
     */
    ReplicaActionImage: ReplicaActionImage,
    /**
     * The ReplicaCreate model constructor.
     * @property {module:model/ReplicaCreate}
     */
    ReplicaCreate: ReplicaCreate,
    /**
     * The ReplicaPostAccessrights model constructor.
     * @property {module:model/ReplicaPostAccessrights}
     */
    ReplicaPostAccessrights: ReplicaPostAccessrights,
    /**
     * The ReplicaServices model constructor.
     * @property {module:model/ReplicaServices}
     */
    ReplicaServices: ReplicaServices,
    /**
     * The Reservation model constructor.
     * @property {module:model/Reservation}
     */
    Reservation: Reservation,
    /**
     * The ReservationActionAssign model constructor.
     * @property {module:model/ReservationActionAssign}
     */
    ReservationActionAssign: ReservationActionAssign,
    /**
     * The ReservationCreate model constructor.
     * @property {module:model/ReservationCreate}
     */
    ReservationCreate: ReservationCreate,
    /**
     * The ReservationPostAccessrights model constructor.
     * @property {module:model/ReservationPostAccessrights}
     */
    ReservationPostAccessrights: ReservationPostAccessrights,
    /**
     * The ReservationServices model constructor.
     * @property {module:model/ReservationServices}
     */
    ReservationServices: ReservationServices,
    /**
     * The ReservationUpdate model constructor.
     * @property {module:model/ReservationUpdate}
     */
    ReservationUpdate: ReservationUpdate,
    /**
     * The Service model constructor.
     * @property {module:model/Service}
     */
    Service: Service,
    /**
     * The ServiceBilling model constructor.
     * @property {module:model/ServiceBilling}
     */
    ServiceBilling: ServiceBilling,
    /**
     * The ServiceBillingPrice model constructor.
     * @property {module:model/ServiceBillingPrice}
     */
    ServiceBillingPrice: ServiceBillingPrice,
    /**
     * The ServiceBillingReservations model constructor.
     * @property {module:model/ServiceBillingReservations}
     */
    ServiceBillingReservations: ServiceBillingReservations,
    /**
     * The Snapshot model constructor.
     * @property {module:model/Snapshot}
     */
    Snapshot: Snapshot,
    /**
     * The SnapshotCreate model constructor.
     * @property {module:model/SnapshotCreate}
     */
    SnapshotCreate: SnapshotCreate,
    /**
     * The SnapshotPostAccessrights model constructor.
     * @property {module:model/SnapshotPostAccessrights}
     */
    SnapshotPostAccessrights: SnapshotPostAccessrights,
    /**
     * The SnapshotServices model constructor.
     * @property {module:model/SnapshotServices}
     */
    SnapshotServices: SnapshotServices,
    /**
     * The SnapshotUpdate model constructor.
     * @property {module:model/SnapshotUpdate}
     */
    SnapshotUpdate: SnapshotUpdate,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The UserCredential model constructor.
     * @property {module:model/UserCredential}
     */
    UserCredential: UserCredential,
    /**
     * The UserCredentialPassword model constructor.
     * @property {module:model/UserCredentialPassword}
     */
    UserCredentialPassword: UserCredentialPassword,
    /**
     * The UserLastLogin model constructor.
     * @property {module:model/UserLastLogin}
     */
    UserLastLogin: UserLastLogin,
    /**
     * The UserLimit model constructor.
     * @property {module:model/UserLimit}
     */
    UserLimit: UserLimit,
    /**
     * The UserNetworkAcl model constructor.
     * @property {module:model/UserNetworkAcl}
     */
    UserNetworkAcl: UserNetworkAcl,
    /**
     * The UserPasswordReset model constructor.
     * @property {module:model/UserPasswordReset}
     */
    UserPasswordReset: UserPasswordReset,
    /**
     * The UserPatchCredentialcertificateId model constructor.
     * @property {module:model/UserPatchCredentialcertificateId}
     */
    UserPatchCredentialcertificateId: UserPatchCredentialcertificateId,
    /**
     * The UserPatchCredentialpasswordId model constructor.
     * @property {module:model/UserPatchCredentialpasswordId}
     */
    UserPatchCredentialpasswordId: UserPatchCredentialpasswordId,
    /**
     * The UserPostCredentialcertificate model constructor.
     * @property {module:model/UserPostCredentialcertificate}
     */
    UserPostCredentialcertificate: UserPostCredentialcertificate,
    /**
     * The UserPostCredentialpassword model constructor.
     * @property {module:model/UserPostCredentialpassword}
     */
    UserPostCredentialpassword: UserPostCredentialpassword,
    /**
     * The Vault model constructor.
     * @property {module:model/Vault}
     */
    Vault: Vault,
    /**
     * The VaultActionResize model constructor.
     * @property {module:model/VaultActionResize}
     */
    VaultActionResize: VaultActionResize,
    /**
     * The VaultActionSnapshot model constructor.
     * @property {module:model/VaultActionSnapshot}
     */
    VaultActionSnapshot: VaultActionSnapshot,
    /**
     * The VaultCreate model constructor.
     * @property {module:model/VaultCreate}
     */
    VaultCreate: VaultCreate,
    /**
     * The VaultCreateCredential model constructor.
     * @property {module:model/VaultCreateCredential}
     */
    VaultCreateCredential: VaultCreateCredential,
    /**
     * The VaultCreateCredentialCertificate model constructor.
     * @property {module:model/VaultCreateCredentialCertificate}
     */
    VaultCreateCredentialCertificate: VaultCreateCredentialCertificate,
    /**
     * The VaultCreateCredentialPassword model constructor.
     * @property {module:model/VaultCreateCredentialPassword}
     */
    VaultCreateCredentialPassword: VaultCreateCredentialPassword,
    /**
     * The VaultDelete model constructor.
     * @property {module:model/VaultDelete}
     */
    VaultDelete: VaultDelete,
    /**
     * The VaultPatchCredentialcertificateId model constructor.
     * @property {module:model/VaultPatchCredentialcertificateId}
     */
    VaultPatchCredentialcertificateId: VaultPatchCredentialcertificateId,
    /**
     * The VaultPatchCredentialpasswordId model constructor.
     * @property {module:model/VaultPatchCredentialpasswordId}
     */
    VaultPatchCredentialpasswordId: VaultPatchCredentialpasswordId,
    /**
     * The VaultPostAccessrights model constructor.
     * @property {module:model/VaultPostAccessrights}
     */
    VaultPostAccessrights: VaultPostAccessrights,
    /**
     * The VaultPostCredentialcertificate model constructor.
     * @property {module:model/VaultPostCredentialcertificate}
     */
    VaultPostCredentialcertificate: VaultPostCredentialcertificate,
    /**
     * The VaultPostCredentialpassword model constructor.
     * @property {module:model/VaultPostCredentialpassword}
     */
    VaultPostCredentialpassword: VaultPostCredentialpassword,
    /**
     * The VaultServices model constructor.
     * @property {module:model/VaultServices}
     */
    VaultServices: VaultServices,
    /**
     * The VaultUpdate model constructor.
     * @property {module:model/VaultUpdate}
     */
    VaultUpdate: VaultUpdate,
    /**
     * The Vm model constructor.
     * @property {module:model/Vm}
     */
    Vm: Vm,
    /**
     * The VmActionFlavour model constructor.
     * @property {module:model/VmActionFlavour}
     */
    VmActionFlavour: VmActionFlavour,
    /**
     * The VmActionImage model constructor.
     * @property {module:model/VmActionImage}
     */
    VmActionImage: VmActionImage,
    /**
     * The VmActionPasswordReset model constructor.
     * @property {module:model/VmActionPasswordReset}
     */
    VmActionPasswordReset: VmActionPasswordReset,
    /**
     * The VmActionRename model constructor.
     * @property {module:model/VmActionRename}
     */
    VmActionRename: VmActionRename,
    /**
     * The VmCreate model constructor.
     * @property {module:model/VmCreate}
     */
    VmCreate: VmCreate,
    /**
     * The VmCreateDisk model constructor.
     * @property {module:model/VmCreateDisk}
     */
    VmCreateDisk: VmCreateDisk,
    /**
     * The VmCreateNetadp model constructor.
     * @property {module:model/VmCreateNetadp}
     */
    VmCreateNetadp: VmCreateNetadp,
    /**
     * The VmCreatePassword model constructor.
     * @property {module:model/VmCreatePassword}
     */
    VmCreatePassword: VmCreatePassword,
    /**
     * The VmData model constructor.
     * @property {module:model/VmData}
     */
    VmData: VmData,
    /**
     * The VmDelete model constructor.
     * @property {module:model/VmDelete}
     */
    VmDelete: VmDelete,
    /**
     * The VmPostAccessrights model constructor.
     * @property {module:model/VmPostAccessrights}
     */
    VmPostAccessrights: VmPostAccessrights,
    /**
     * The VmPostHdd model constructor.
     * @property {module:model/VmPostHdd}
     */
    VmPostHdd: VmPostHdd,
    /**
     * The VmPostNetadp model constructor.
     * @property {module:model/VmPostNetadp}
     */
    VmPostNetadp: VmPostNetadp,
    /**
     * The VmServices model constructor.
     * @property {module:model/VmServices}
     */
    VmServices: VmServices,
    /**
     * The VmSourceImage model constructor.
     * @property {module:model/VmSourceImage}
     */
    VmSourceImage: VmSourceImage,
    /**
     * The VmUpdate model constructor.
     * @property {module:model/VmUpdate}
     */
    VmUpdate: VmUpdate,
    /**
     * The Volume model constructor.
     * @property {module:model/Volume}
     */
    Volume: Volume,
    /**
     * The VolumeCreate model constructor.
     * @property {module:model/VolumeCreate}
     */
    VolumeCreate: VolumeCreate,
    /**
     * The VolumePostAccessrights model constructor.
     * @property {module:model/VolumePostAccessrights}
     */
    VolumePostAccessrights: VolumePostAccessrights,
    /**
     * The VolumeServices model constructor.
     * @property {module:model/VolumeServices}
     */
    VolumeServices: VolumeServices,
    /**
     * The VolumeUpdate model constructor.
     * @property {module:model/VolumeUpdate}
     */
    VolumeUpdate: VolumeUpdate,
    /**
     * The Website model constructor.
     * @property {module:model/Website}
     */
    Website: Website,
    /**
     * The WebsiteCreate model constructor.
     * @property {module:model/WebsiteCreate}
     */
    WebsiteCreate: WebsiteCreate,
    /**
     * The WebsitePatchCredentialcertificateId model constructor.
     * @property {module:model/WebsitePatchCredentialcertificateId}
     */
    WebsitePatchCredentialcertificateId: WebsitePatchCredentialcertificateId,
    /**
     * The WebsitePatchCredentialpasswordId model constructor.
     * @property {module:model/WebsitePatchCredentialpasswordId}
     */
    WebsitePatchCredentialpasswordId: WebsitePatchCredentialpasswordId,
    /**
     * The WebsitePostAccessrights model constructor.
     * @property {module:model/WebsitePostAccessrights}
     */
    WebsitePostAccessrights: WebsitePostAccessrights,
    /**
     * The WebsitePostCredentialcertificate model constructor.
     * @property {module:model/WebsitePostCredentialcertificate}
     */
    WebsitePostCredentialcertificate: WebsitePostCredentialcertificate,
    /**
     * The WebsitePostCredentialpassword model constructor.
     * @property {module:model/WebsitePostCredentialpassword}
     */
    WebsitePostCredentialpassword: WebsitePostCredentialpassword,
    /**
     * The WebsiteServices model constructor.
     * @property {module:model/WebsiteServices}
     */
    WebsiteServices: WebsiteServices,
    /**
     * The WebsiteUpdate model constructor.
     * @property {module:model/WebsiteUpdate}
     */
    WebsiteUpdate: WebsiteUpdate,
    /**
     * The AgentApi service constructor.
     * @property {module:api/AgentApi}
     */
    AgentApi: AgentApi,
    /**
     * The ContainerApi service constructor.
     * @property {module:api/ContainerApi}
     */
    ContainerApi: ContainerApi,
    /**
     * The DiskApi service constructor.
     * @property {module:api/DiskApi}
     */
    DiskApi: DiskApi,
    /**
     * The FirewallApi service constructor.
     * @property {module:api/FirewallApi}
     */
    FirewallApi: FirewallApi,
    /**
     * The ImageApi service constructor.
     * @property {module:api/ImageApi}
     */
    ImageApi: ImageApi,
    /**
     * The IpApi service constructor.
     * @property {module:api/IpApi}
     */
    IpApi: IpApi,
    /**
     * The IsoApi service constructor.
     * @property {module:api/IsoApi}
     */
    IsoApi: IsoApi,
    /**
     * The LogArchiveApi service constructor.
     * @property {module:api/LogArchiveApi}
     */
    LogArchiveApi: LogArchiveApi,
    /**
     * The NetadpApi service constructor.
     * @property {module:api/NetadpApi}
     */
    NetadpApi: NetadpApi,
    /**
     * The NetgwApi service constructor.
     * @property {module:api/NetgwApi}
     */
    NetgwApi: NetgwApi,
    /**
     * The NetworkApi service constructor.
     * @property {module:api/NetworkApi}
     */
    NetworkApi: NetworkApi,
    /**
     * The OrganisationApi service constructor.
     * @property {module:api/OrganisationApi}
     */
    OrganisationApi: OrganisationApi,
    /**
     * The ProjectApi service constructor.
     * @property {module:api/ProjectApi}
     */
    ProjectApi: ProjectApi,
    /**
     * The ReplicaApi service constructor.
     * @property {module:api/ReplicaApi}
     */
    ReplicaApi: ReplicaApi,
    /**
     * The ReservationApi service constructor.
     * @property {module:api/ReservationApi}
     */
    ReservationApi: ReservationApi,
    /**
     * The ServiceApi service constructor.
     * @property {module:api/ServiceApi}
     */
    ServiceApi: ServiceApi,
    /**
     * The SnapshotApi service constructor.
     * @property {module:api/SnapshotApi}
     */
    SnapshotApi: SnapshotApi,
    /**
     * The UserApi service constructor.
     * @property {module:api/UserApi}
     */
    UserApi: UserApi,
    /**
     * The VaultApi service constructor.
     * @property {module:api/VaultApi}
     */
    VaultApi: VaultApi,
    /**
     * The VmApi service constructor.
     * @property {module:api/VmApi}
     */
    VmApi: VmApi,
    /**
     * The VolumeApi service constructor.
     * @property {module:api/VolumeApi}
     */
    VolumeApi: VolumeApi,
    /**
     * The WebsiteApi service constructor.
     * @property {module:api/WebsiteApi}
     */
    WebsiteApi: WebsiteApi
  };

  return exports;
}));
