/**
 * HyperOne API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.2.3-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccessrightsUserRole', 'model/Agent', 'model/AgentActionTransfer', 'model/AgentActionUpdateEnabledServices', 'model/AgentCreate', 'model/AgentCreateCredential', 'model/AgentCreateCredentialCertificate', 'model/AgentPatchCredentialId', 'model/AgentPatchCredentialcertificateId', 'model/AgentPostAccessrights', 'model/AgentPostCredential', 'model/AgentPostCredentialcertificate', 'model/AgentResource', 'model/AgentResourceEvent', 'model/AgentServices', 'model/AgentUpdate', 'model/AuthToken', 'model/AuthTokenAccess', 'model/Billing', 'model/BillingCharges', 'model/BillingResource', 'model/BillingService', 'model/Container', 'model/ContainerCreate', 'model/ContainerCreateRegistry', 'model/ContainerExpose', 'model/ContainerPostAccessrights', 'model/ContainerServices', 'model/ContainerUpdate', 'model/ContainerVolumes', 'model/Credential', 'model/Database', 'model/DatabaseActionTransfer', 'model/DatabaseCreate', 'model/DatabasePatchCredentialId', 'model/DatabasePatchCredentialpasswordId', 'model/DatabasePostAccessrights', 'model/DatabasePostCredential', 'model/DatabasePostCredentialpassword', 'model/DatabaseServices', 'model/DatabaseUpdate', 'model/Disk', 'model/DiskActionClone', 'model/DiskActionResize', 'model/DiskActionTransfer', 'model/DiskCreate', 'model/DiskMetadata', 'model/DiskMetadataSource', 'model/DiskPostAccessrights', 'model/DiskServices', 'model/DiskUpdate', 'model/Event', 'model/EventResource', 'model/Firewall', 'model/FirewallActionAttach', 'model/FirewallActionTransfer', 'model/FirewallCreate', 'model/FirewallCreateIngress', 'model/FirewallPostAccessrights', 'model/FirewallPostEgress', 'model/FirewallPostIngress', 'model/FirewallServices', 'model/FirewallUpdate', 'model/Hdd', 'model/HddDisk', 'model/Image', 'model/ImageActionTransfer', 'model/ImageAttachedOn', 'model/ImageCreate', 'model/ImageDisk', 'model/ImageDisks', 'model/ImagePostAccessrights', 'model/ImageServices', 'model/ImageUpdate', 'model/InlineResponse200', 'model/InlineResponse2001', 'model/InlineResponse2002', 'model/InlineResponse2003', 'model/InlineResponse2004', 'model/InlineResponse2005', 'model/InlineResponse400', 'model/Invoice', 'model/InvoiceArray', 'model/InvoiceBuyer', 'model/InvoiceBuyerAddress', 'model/InvoiceDuplicate', 'model/InvoiceItems', 'model/InvoiceSeller', 'model/InvoiceSellerAddress', 'model/Ip', 'model/IpActionAssociate', 'model/IpActionTransfer', 'model/IpAssociated', 'model/IpCreate', 'model/IpPostAccessrights', 'model/IpServices', 'model/IpUpdate', 'model/Iso', 'model/IsoActionTransfer', 'model/IsoCreate', 'model/IsoPostAccessrights', 'model/IsoServices', 'model/IsoUpdate', 'model/Journal', 'model/JournalActionTransfer', 'model/JournalActionUpdateRetention', 'model/JournalCreate', 'model/JournalCreateCredential', 'model/JournalPatchCredentialId', 'model/JournalPatchCredentialpasswordId', 'model/JournalPostAccessrights', 'model/JournalPostCredential', 'model/JournalPostCredentialpassword', 'model/JournalServices', 'model/JournalUpdate', 'model/Netadp', 'model/NetadpActionFirewallAdd', 'model/NetadpAssigned', 'model/NetadpPostAccessrights', 'model/NetadpServices', 'model/Netgw', 'model/NetgwActionAttach', 'model/NetgwActionAttachPrivate', 'model/NetgwCreate', 'model/NetgwCreatePublic', 'model/NetgwPostAccessrights', 'model/NetgwServices', 'model/NetgwUpdate', 'model/Network', 'model/NetworkActionFirewallAdd', 'model/NetworkCreate', 'model/NetworkDns', 'model/NetworkPostAccessrights', 'model/NetworkPostIp', 'model/NetworkServices', 'model/NetworkUpdate', 'model/Organisation', 'model/OrganisationActionPaymentAssign', 'model/OrganisationActionTransferAccept', 'model/OrganisationBilling', 'model/OrganisationCreate', 'model/OrganisationCreateAccessRights', 'model/OrganisationCreateBilling', 'model/OrganisationCreateBillingAddress', 'model/OrganisationLimit', 'model/OrganisationLimitOrganisation', 'model/OrganisationPostAccessrights', 'model/OrganisationTransfer', 'model/OrganisationUpdate', 'model/OrganisationUpdateBilling', 'model/OrganisationUpdateBillingAddress', 'model/Payment', 'model/Proforma', 'model/ProformaSeller', 'model/Project', 'model/ProjectAccessRights', 'model/ProjectBilling', 'model/ProjectCompliance', 'model/ProjectCreate', 'model/ProjectCreateAccessRights', 'model/ProjectLimit', 'model/ProjectLimitAgent', 'model/ProjectLimitContainer', 'model/ProjectLimitDisk', 'model/ProjectLimitNetwork', 'model/ProjectLimitRegistry', 'model/ProjectLimitReservation', 'model/ProjectLimitSnapshot', 'model/ProjectLimitVault', 'model/ProjectLimitVm', 'model/ProjectLimitVolume', 'model/ProjectPatchCredentialStoreId', 'model/ProjectPatchCredentialStorecertificateId', 'model/ProjectPostAccessrights', 'model/ProjectPostCredentialStore', 'model/ProjectPostCredentialStorecertificate', 'model/ProjectRoles', 'model/ProjectServices', 'model/ProjectThreshold', 'model/ProjectThresholdCredits', 'model/ProjectTransfer', 'model/ProjectUpdate', 'model/Registry', 'model/RegistryActionTransfer', 'model/RegistryActionUpdateDomain', 'model/RegistryCreate', 'model/RegistryPatchCredentialId', 'model/RegistryPatchCredentialpasswordId', 'model/RegistryPostAccessrights', 'model/RegistryPostCredential', 'model/RegistryPostCredentialpassword', 'model/RegistryServices', 'model/RegistryUpdate', 'model/Replica', 'model/ReplicaActionImage', 'model/ReplicaCreate', 'model/ReplicaPostAccessrights', 'model/ReplicaServices', 'model/Reservation', 'model/ReservationActionAssign', 'model/ReservationCreate', 'model/ReservationPostAccessrights', 'model/ReservationServices', 'model/ReservationUpdate', 'model/Service', 'model/ServiceBilling', 'model/ServiceBillingPrice', 'model/ServiceBillingReservations', 'model/Snapshot', 'model/SnapshotCreate', 'model/SnapshotPostAccessrights', 'model/SnapshotServices', 'model/SnapshotUpdate', 'model/User', 'model/UserCredential', 'model/UserCredentialCertificate', 'model/UserLimit', 'model/UserNetworkAcl', 'model/UserPasswordReset', 'model/UserPatchCredentialId', 'model/UserPatchCredentialcertificateId', 'model/UserPatchCredentialpasswordId', 'model/UserPostCredential', 'model/UserPostCredentialcertificate', 'model/UserPostCredentialpassword', 'model/UserServices', 'model/UserUpdate', 'model/Vault', 'model/VaultActionResize', 'model/VaultActionSnapshot', 'model/VaultCreate', 'model/VaultDelete', 'model/VaultPatchCredentialId', 'model/VaultPatchCredentialcertificateId', 'model/VaultPatchCredentialpasswordId', 'model/VaultPostAccessrights', 'model/VaultPostCredential', 'model/VaultPostCredentialcertificate', 'model/VaultPostCredentialpassword', 'model/VaultServices', 'model/VaultUpdate', 'model/Vm', 'model/VmActionFlavour', 'model/VmActionImage', 'model/VmActionPasswordReset', 'model/VmActionRename', 'model/VmCreate', 'model/VmCreateDisk', 'model/VmCreateNetadp', 'model/VmCreatePassword', 'model/VmData', 'model/VmDelete', 'model/VmPostAccessrights', 'model/VmPostHdd', 'model/VmPostNetadp', 'model/VmServices', 'model/VmSourceImage', 'model/VmUpdate', 'model/Vmhost', 'model/VmhostPostAccessrights', 'model/VmhostServices', 'model/Volume', 'model/VolumeCreate', 'model/VolumePostAccessrights', 'model/VolumeServices', 'model/VolumeUpdate', 'model/Website', 'model/WebsiteActionTransfer', 'model/WebsiteActionUpdateDomain', 'model/WebsiteCreate', 'model/WebsiteCreateCredential', 'model/WebsiteCreateSource', 'model/WebsitePatchCredentialId', 'model/WebsitePatchCredentialcertificateId', 'model/WebsitePatchCredentialpasswordId', 'model/WebsitePostAccessrights', 'model/WebsitePostCredential', 'model/WebsitePostCredentialcertificate', 'model/WebsitePostCredentialpassword', 'model/WebsitePostSnapshot', 'model/WebsiteServices', 'model/WebsiteUpdate', 'model/Zone', 'model/ZoneCreate', 'model/ZoneCreateSource', 'model/ZonePatchRecordsetRecordsetId', 'model/ZonePostAccessrights', 'model/ZonePostRecordset', 'model/ZonePostRecordsetRecord', 'model/ZoneRecordset', 'model/ZoneRecordset0', 'model/ZoneRecordset0Record', 'model/ZoneRecordsetRecord', 'model/ZoneRrsets', 'model/ZoneServices', 'model/ZoneUpdate', 'h1-client/AgentApi', 'h1-client/ContainerApi', 'h1-client/DatabaseApi', 'h1-client/DiskApi', 'h1-client/FirewallApi', 'h1-client/ImageApi', 'h1-client/IpApi', 'h1-client/IsoApi', 'h1-client/JournalApi', 'h1-client/NetadpApi', 'h1-client/NetgwApi', 'h1-client/NetworkApi', 'h1-client/OrganisationApi', 'h1-client/ProjectApi', 'h1-client/RegistryApi', 'h1-client/ReplicaApi', 'h1-client/ReservationApi', 'h1-client/ServiceApi', 'h1-client/SnapshotApi', 'h1-client/UserApi', 'h1-client/VaultApi', 'h1-client/VmApi', 'h1-client/VmhostApi', 'h1-client/VolumeApi', 'h1-client/WebsiteApi', 'h1-client/ZoneApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AccessrightsUserRole'), require('./model/Agent'), require('./model/AgentActionTransfer'), require('./model/AgentActionUpdateEnabledServices'), require('./model/AgentCreate'), require('./model/AgentCreateCredential'), require('./model/AgentCreateCredentialCertificate'), require('./model/AgentPatchCredentialId'), require('./model/AgentPatchCredentialcertificateId'), require('./model/AgentPostAccessrights'), require('./model/AgentPostCredential'), require('./model/AgentPostCredentialcertificate'), require('./model/AgentResource'), require('./model/AgentResourceEvent'), require('./model/AgentServices'), require('./model/AgentUpdate'), require('./model/AuthToken'), require('./model/AuthTokenAccess'), require('./model/Billing'), require('./model/BillingCharges'), require('./model/BillingResource'), require('./model/BillingService'), require('./model/Container'), require('./model/ContainerCreate'), require('./model/ContainerCreateRegistry'), require('./model/ContainerExpose'), require('./model/ContainerPostAccessrights'), require('./model/ContainerServices'), require('./model/ContainerUpdate'), require('./model/ContainerVolumes'), require('./model/Credential'), require('./model/Database'), require('./model/DatabaseActionTransfer'), require('./model/DatabaseCreate'), require('./model/DatabasePatchCredentialId'), require('./model/DatabasePatchCredentialpasswordId'), require('./model/DatabasePostAccessrights'), require('./model/DatabasePostCredential'), require('./model/DatabasePostCredentialpassword'), require('./model/DatabaseServices'), require('./model/DatabaseUpdate'), require('./model/Disk'), require('./model/DiskActionClone'), require('./model/DiskActionResize'), require('./model/DiskActionTransfer'), require('./model/DiskCreate'), require('./model/DiskMetadata'), require('./model/DiskMetadataSource'), require('./model/DiskPostAccessrights'), require('./model/DiskServices'), require('./model/DiskUpdate'), require('./model/Event'), require('./model/EventResource'), require('./model/Firewall'), require('./model/FirewallActionAttach'), require('./model/FirewallActionTransfer'), require('./model/FirewallCreate'), require('./model/FirewallCreateIngress'), require('./model/FirewallPostAccessrights'), require('./model/FirewallPostEgress'), require('./model/FirewallPostIngress'), require('./model/FirewallServices'), require('./model/FirewallUpdate'), require('./model/Hdd'), require('./model/HddDisk'), require('./model/Image'), require('./model/ImageActionTransfer'), require('./model/ImageAttachedOn'), require('./model/ImageCreate'), require('./model/ImageDisk'), require('./model/ImageDisks'), require('./model/ImagePostAccessrights'), require('./model/ImageServices'), require('./model/ImageUpdate'), require('./model/InlineResponse200'), require('./model/InlineResponse2001'), require('./model/InlineResponse2002'), require('./model/InlineResponse2003'), require('./model/InlineResponse2004'), require('./model/InlineResponse2005'), require('./model/InlineResponse400'), require('./model/Invoice'), require('./model/InvoiceArray'), require('./model/InvoiceBuyer'), require('./model/InvoiceBuyerAddress'), require('./model/InvoiceDuplicate'), require('./model/InvoiceItems'), require('./model/InvoiceSeller'), require('./model/InvoiceSellerAddress'), require('./model/Ip'), require('./model/IpActionAssociate'), require('./model/IpActionTransfer'), require('./model/IpAssociated'), require('./model/IpCreate'), require('./model/IpPostAccessrights'), require('./model/IpServices'), require('./model/IpUpdate'), require('./model/Iso'), require('./model/IsoActionTransfer'), require('./model/IsoCreate'), require('./model/IsoPostAccessrights'), require('./model/IsoServices'), require('./model/IsoUpdate'), require('./model/Journal'), require('./model/JournalActionTransfer'), require('./model/JournalActionUpdateRetention'), require('./model/JournalCreate'), require('./model/JournalCreateCredential'), require('./model/JournalPatchCredentialId'), require('./model/JournalPatchCredentialpasswordId'), require('./model/JournalPostAccessrights'), require('./model/JournalPostCredential'), require('./model/JournalPostCredentialpassword'), require('./model/JournalServices'), require('./model/JournalUpdate'), require('./model/Netadp'), require('./model/NetadpActionFirewallAdd'), require('./model/NetadpAssigned'), require('./model/NetadpPostAccessrights'), require('./model/NetadpServices'), require('./model/Netgw'), require('./model/NetgwActionAttach'), require('./model/NetgwActionAttachPrivate'), require('./model/NetgwCreate'), require('./model/NetgwCreatePublic'), require('./model/NetgwPostAccessrights'), require('./model/NetgwServices'), require('./model/NetgwUpdate'), require('./model/Network'), require('./model/NetworkActionFirewallAdd'), require('./model/NetworkCreate'), require('./model/NetworkDns'), require('./model/NetworkPostAccessrights'), require('./model/NetworkPostIp'), require('./model/NetworkServices'), require('./model/NetworkUpdate'), require('./model/Organisation'), require('./model/OrganisationActionPaymentAssign'), require('./model/OrganisationActionTransferAccept'), require('./model/OrganisationBilling'), require('./model/OrganisationCreate'), require('./model/OrganisationCreateAccessRights'), require('./model/OrganisationCreateBilling'), require('./model/OrganisationCreateBillingAddress'), require('./model/OrganisationLimit'), require('./model/OrganisationLimitOrganisation'), require('./model/OrganisationPostAccessrights'), require('./model/OrganisationTransfer'), require('./model/OrganisationUpdate'), require('./model/OrganisationUpdateBilling'), require('./model/OrganisationUpdateBillingAddress'), require('./model/Payment'), require('./model/Proforma'), require('./model/ProformaSeller'), require('./model/Project'), require('./model/ProjectAccessRights'), require('./model/ProjectBilling'), require('./model/ProjectCompliance'), require('./model/ProjectCreate'), require('./model/ProjectCreateAccessRights'), require('./model/ProjectLimit'), require('./model/ProjectLimitAgent'), require('./model/ProjectLimitContainer'), require('./model/ProjectLimitDisk'), require('./model/ProjectLimitNetwork'), require('./model/ProjectLimitRegistry'), require('./model/ProjectLimitReservation'), require('./model/ProjectLimitSnapshot'), require('./model/ProjectLimitVault'), require('./model/ProjectLimitVm'), require('./model/ProjectLimitVolume'), require('./model/ProjectPatchCredentialStoreId'), require('./model/ProjectPatchCredentialStorecertificateId'), require('./model/ProjectPostAccessrights'), require('./model/ProjectPostCredentialStore'), require('./model/ProjectPostCredentialStorecertificate'), require('./model/ProjectRoles'), require('./model/ProjectServices'), require('./model/ProjectThreshold'), require('./model/ProjectThresholdCredits'), require('./model/ProjectTransfer'), require('./model/ProjectUpdate'), require('./model/Registry'), require('./model/RegistryActionTransfer'), require('./model/RegistryActionUpdateDomain'), require('./model/RegistryCreate'), require('./model/RegistryPatchCredentialId'), require('./model/RegistryPatchCredentialpasswordId'), require('./model/RegistryPostAccessrights'), require('./model/RegistryPostCredential'), require('./model/RegistryPostCredentialpassword'), require('./model/RegistryServices'), require('./model/RegistryUpdate'), require('./model/Replica'), require('./model/ReplicaActionImage'), require('./model/ReplicaCreate'), require('./model/ReplicaPostAccessrights'), require('./model/ReplicaServices'), require('./model/Reservation'), require('./model/ReservationActionAssign'), require('./model/ReservationCreate'), require('./model/ReservationPostAccessrights'), require('./model/ReservationServices'), require('./model/ReservationUpdate'), require('./model/Service'), require('./model/ServiceBilling'), require('./model/ServiceBillingPrice'), require('./model/ServiceBillingReservations'), require('./model/Snapshot'), require('./model/SnapshotCreate'), require('./model/SnapshotPostAccessrights'), require('./model/SnapshotServices'), require('./model/SnapshotUpdate'), require('./model/User'), require('./model/UserCredential'), require('./model/UserCredentialCertificate'), require('./model/UserLimit'), require('./model/UserNetworkAcl'), require('./model/UserPasswordReset'), require('./model/UserPatchCredentialId'), require('./model/UserPatchCredentialcertificateId'), require('./model/UserPatchCredentialpasswordId'), require('./model/UserPostCredential'), require('./model/UserPostCredentialcertificate'), require('./model/UserPostCredentialpassword'), require('./model/UserServices'), require('./model/UserUpdate'), require('./model/Vault'), require('./model/VaultActionResize'), require('./model/VaultActionSnapshot'), require('./model/VaultCreate'), require('./model/VaultDelete'), require('./model/VaultPatchCredentialId'), require('./model/VaultPatchCredentialcertificateId'), require('./model/VaultPatchCredentialpasswordId'), require('./model/VaultPostAccessrights'), require('./model/VaultPostCredential'), require('./model/VaultPostCredentialcertificate'), require('./model/VaultPostCredentialpassword'), require('./model/VaultServices'), require('./model/VaultUpdate'), require('./model/Vm'), require('./model/VmActionFlavour'), require('./model/VmActionImage'), require('./model/VmActionPasswordReset'), require('./model/VmActionRename'), require('./model/VmCreate'), require('./model/VmCreateDisk'), require('./model/VmCreateNetadp'), require('./model/VmCreatePassword'), require('./model/VmData'), require('./model/VmDelete'), require('./model/VmPostAccessrights'), require('./model/VmPostHdd'), require('./model/VmPostNetadp'), require('./model/VmServices'), require('./model/VmSourceImage'), require('./model/VmUpdate'), require('./model/Vmhost'), require('./model/VmhostPostAccessrights'), require('./model/VmhostServices'), require('./model/Volume'), require('./model/VolumeCreate'), require('./model/VolumePostAccessrights'), require('./model/VolumeServices'), require('./model/VolumeUpdate'), require('./model/Website'), require('./model/WebsiteActionTransfer'), require('./model/WebsiteActionUpdateDomain'), require('./model/WebsiteCreate'), require('./model/WebsiteCreateCredential'), require('./model/WebsiteCreateSource'), require('./model/WebsitePatchCredentialId'), require('./model/WebsitePatchCredentialcertificateId'), require('./model/WebsitePatchCredentialpasswordId'), require('./model/WebsitePostAccessrights'), require('./model/WebsitePostCredential'), require('./model/WebsitePostCredentialcertificate'), require('./model/WebsitePostCredentialpassword'), require('./model/WebsitePostSnapshot'), require('./model/WebsiteServices'), require('./model/WebsiteUpdate'), require('./model/Zone'), require('./model/ZoneCreate'), require('./model/ZoneCreateSource'), require('./model/ZonePatchRecordsetRecordsetId'), require('./model/ZonePostAccessrights'), require('./model/ZonePostRecordset'), require('./model/ZonePostRecordsetRecord'), require('./model/ZoneRecordset'), require('./model/ZoneRecordset0'), require('./model/ZoneRecordset0Record'), require('./model/ZoneRecordsetRecord'), require('./model/ZoneRrsets'), require('./model/ZoneServices'), require('./model/ZoneUpdate'), require('./h1-client/AgentApi'), require('./h1-client/ContainerApi'), require('./h1-client/DatabaseApi'), require('./h1-client/DiskApi'), require('./h1-client/FirewallApi'), require('./h1-client/ImageApi'), require('./h1-client/IpApi'), require('./h1-client/IsoApi'), require('./h1-client/JournalApi'), require('./h1-client/NetadpApi'), require('./h1-client/NetgwApi'), require('./h1-client/NetworkApi'), require('./h1-client/OrganisationApi'), require('./h1-client/ProjectApi'), require('./h1-client/RegistryApi'), require('./h1-client/ReplicaApi'), require('./h1-client/ReservationApi'), require('./h1-client/ServiceApi'), require('./h1-client/SnapshotApi'), require('./h1-client/UserApi'), require('./h1-client/VaultApi'), require('./h1-client/VmApi'), require('./h1-client/VmhostApi'), require('./h1-client/VolumeApi'), require('./h1-client/WebsiteApi'), require('./h1-client/ZoneApi'));
  }
}(function(ApiClient, AccessrightsUserRole, Agent, AgentActionTransfer, AgentActionUpdateEnabledServices, AgentCreate, AgentCreateCredential, AgentCreateCredentialCertificate, AgentPatchCredentialId, AgentPatchCredentialcertificateId, AgentPostAccessrights, AgentPostCredential, AgentPostCredentialcertificate, AgentResource, AgentResourceEvent, AgentServices, AgentUpdate, AuthToken, AuthTokenAccess, Billing, BillingCharges, BillingResource, BillingService, Container, ContainerCreate, ContainerCreateRegistry, ContainerExpose, ContainerPostAccessrights, ContainerServices, ContainerUpdate, ContainerVolumes, Credential, Database, DatabaseActionTransfer, DatabaseCreate, DatabasePatchCredentialId, DatabasePatchCredentialpasswordId, DatabasePostAccessrights, DatabasePostCredential, DatabasePostCredentialpassword, DatabaseServices, DatabaseUpdate, Disk, DiskActionClone, DiskActionResize, DiskActionTransfer, DiskCreate, DiskMetadata, DiskMetadataSource, DiskPostAccessrights, DiskServices, DiskUpdate, Event, EventResource, Firewall, FirewallActionAttach, FirewallActionTransfer, FirewallCreate, FirewallCreateIngress, FirewallPostAccessrights, FirewallPostEgress, FirewallPostIngress, FirewallServices, FirewallUpdate, Hdd, HddDisk, Image, ImageActionTransfer, ImageAttachedOn, ImageCreate, ImageDisk, ImageDisks, ImagePostAccessrights, ImageServices, ImageUpdate, InlineResponse200, InlineResponse2001, InlineResponse2002, InlineResponse2003, InlineResponse2004, InlineResponse2005, InlineResponse400, Invoice, InvoiceArray, InvoiceBuyer, InvoiceBuyerAddress, InvoiceDuplicate, InvoiceItems, InvoiceSeller, InvoiceSellerAddress, Ip, IpActionAssociate, IpActionTransfer, IpAssociated, IpCreate, IpPostAccessrights, IpServices, IpUpdate, Iso, IsoActionTransfer, IsoCreate, IsoPostAccessrights, IsoServices, IsoUpdate, Journal, JournalActionTransfer, JournalActionUpdateRetention, JournalCreate, JournalCreateCredential, JournalPatchCredentialId, JournalPatchCredentialpasswordId, JournalPostAccessrights, JournalPostCredential, JournalPostCredentialpassword, JournalServices, JournalUpdate, Netadp, NetadpActionFirewallAdd, NetadpAssigned, NetadpPostAccessrights, NetadpServices, Netgw, NetgwActionAttach, NetgwActionAttachPrivate, NetgwCreate, NetgwCreatePublic, NetgwPostAccessrights, NetgwServices, NetgwUpdate, Network, NetworkActionFirewallAdd, NetworkCreate, NetworkDns, NetworkPostAccessrights, NetworkPostIp, NetworkServices, NetworkUpdate, Organisation, OrganisationActionPaymentAssign, OrganisationActionTransferAccept, OrganisationBilling, OrganisationCreate, OrganisationCreateAccessRights, OrganisationCreateBilling, OrganisationCreateBillingAddress, OrganisationLimit, OrganisationLimitOrganisation, OrganisationPostAccessrights, OrganisationTransfer, OrganisationUpdate, OrganisationUpdateBilling, OrganisationUpdateBillingAddress, Payment, Proforma, ProformaSeller, Project, ProjectAccessRights, ProjectBilling, ProjectCompliance, ProjectCreate, ProjectCreateAccessRights, ProjectLimit, ProjectLimitAgent, ProjectLimitContainer, ProjectLimitDisk, ProjectLimitNetwork, ProjectLimitRegistry, ProjectLimitReservation, ProjectLimitSnapshot, ProjectLimitVault, ProjectLimitVm, ProjectLimitVolume, ProjectPatchCredentialStoreId, ProjectPatchCredentialStorecertificateId, ProjectPostAccessrights, ProjectPostCredentialStore, ProjectPostCredentialStorecertificate, ProjectRoles, ProjectServices, ProjectThreshold, ProjectThresholdCredits, ProjectTransfer, ProjectUpdate, Registry, RegistryActionTransfer, RegistryActionUpdateDomain, RegistryCreate, RegistryPatchCredentialId, RegistryPatchCredentialpasswordId, RegistryPostAccessrights, RegistryPostCredential, RegistryPostCredentialpassword, RegistryServices, RegistryUpdate, Replica, ReplicaActionImage, ReplicaCreate, ReplicaPostAccessrights, ReplicaServices, Reservation, ReservationActionAssign, ReservationCreate, ReservationPostAccessrights, ReservationServices, ReservationUpdate, Service, ServiceBilling, ServiceBillingPrice, ServiceBillingReservations, Snapshot, SnapshotCreate, SnapshotPostAccessrights, SnapshotServices, SnapshotUpdate, User, UserCredential, UserCredentialCertificate, UserLimit, UserNetworkAcl, UserPasswordReset, UserPatchCredentialId, UserPatchCredentialcertificateId, UserPatchCredentialpasswordId, UserPostCredential, UserPostCredentialcertificate, UserPostCredentialpassword, UserServices, UserUpdate, Vault, VaultActionResize, VaultActionSnapshot, VaultCreate, VaultDelete, VaultPatchCredentialId, VaultPatchCredentialcertificateId, VaultPatchCredentialpasswordId, VaultPostAccessrights, VaultPostCredential, VaultPostCredentialcertificate, VaultPostCredentialpassword, VaultServices, VaultUpdate, Vm, VmActionFlavour, VmActionImage, VmActionPasswordReset, VmActionRename, VmCreate, VmCreateDisk, VmCreateNetadp, VmCreatePassword, VmData, VmDelete, VmPostAccessrights, VmPostHdd, VmPostNetadp, VmServices, VmSourceImage, VmUpdate, Vmhost, VmhostPostAccessrights, VmhostServices, Volume, VolumeCreate, VolumePostAccessrights, VolumeServices, VolumeUpdate, Website, WebsiteActionTransfer, WebsiteActionUpdateDomain, WebsiteCreate, WebsiteCreateCredential, WebsiteCreateSource, WebsitePatchCredentialId, WebsitePatchCredentialcertificateId, WebsitePatchCredentialpasswordId, WebsitePostAccessrights, WebsitePostCredential, WebsitePostCredentialcertificate, WebsitePostCredentialpassword, WebsitePostSnapshot, WebsiteServices, WebsiteUpdate, Zone, ZoneCreate, ZoneCreateSource, ZonePatchRecordsetRecordsetId, ZonePostAccessrights, ZonePostRecordset, ZonePostRecordsetRecord, ZoneRecordset, ZoneRecordset0, ZoneRecordset0Record, ZoneRecordsetRecord, ZoneRrsets, ZoneServices, ZoneUpdate, AgentApi, ContainerApi, DatabaseApi, DiskApi, FirewallApi, ImageApi, IpApi, IsoApi, JournalApi, NetadpApi, NetgwApi, NetworkApi, OrganisationApi, ProjectApi, RegistryApi, ReplicaApi, ReservationApi, ServiceApi, SnapshotApi, UserApi, VaultApi, VmApi, VmhostApi, VolumeApi, WebsiteApi, ZoneApi) {
  'use strict';

  /**
   * Client description for HyperOne.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var HyperoneClient = require('index'); // See note below*.
   * var xxxSvc = new HyperoneClient.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new HyperoneClient.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new HyperoneClient.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new HyperoneClient.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 0.0.3
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AccessrightsUserRole model constructor.
     * @property {module:model/AccessrightsUserRole}
     */
    AccessrightsUserRole: AccessrightsUserRole,
    /**
     * The Agent model constructor.
     * @property {module:model/Agent}
     */
    Agent: Agent,
    /**
     * The AgentActionTransfer model constructor.
     * @property {module:model/AgentActionTransfer}
     */
    AgentActionTransfer: AgentActionTransfer,
    /**
     * The AgentActionUpdateEnabledServices model constructor.
     * @property {module:model/AgentActionUpdateEnabledServices}
     */
    AgentActionUpdateEnabledServices: AgentActionUpdateEnabledServices,
    /**
     * The AgentCreate model constructor.
     * @property {module:model/AgentCreate}
     */
    AgentCreate: AgentCreate,
    /**
     * The AgentCreateCredential model constructor.
     * @property {module:model/AgentCreateCredential}
     */
    AgentCreateCredential: AgentCreateCredential,
    /**
     * The AgentCreateCredentialCertificate model constructor.
     * @property {module:model/AgentCreateCredentialCertificate}
     */
    AgentCreateCredentialCertificate: AgentCreateCredentialCertificate,
    /**
     * The AgentPatchCredentialId model constructor.
     * @property {module:model/AgentPatchCredentialId}
     */
    AgentPatchCredentialId: AgentPatchCredentialId,
    /**
     * The AgentPatchCredentialcertificateId model constructor.
     * @property {module:model/AgentPatchCredentialcertificateId}
     */
    AgentPatchCredentialcertificateId: AgentPatchCredentialcertificateId,
    /**
     * The AgentPostAccessrights model constructor.
     * @property {module:model/AgentPostAccessrights}
     */
    AgentPostAccessrights: AgentPostAccessrights,
    /**
     * The AgentPostCredential model constructor.
     * @property {module:model/AgentPostCredential}
     */
    AgentPostCredential: AgentPostCredential,
    /**
     * The AgentPostCredentialcertificate model constructor.
     * @property {module:model/AgentPostCredentialcertificate}
     */
    AgentPostCredentialcertificate: AgentPostCredentialcertificate,
    /**
     * The AgentResource model constructor.
     * @property {module:model/AgentResource}
     */
    AgentResource: AgentResource,
    /**
     * The AgentResourceEvent model constructor.
     * @property {module:model/AgentResourceEvent}
     */
    AgentResourceEvent: AgentResourceEvent,
    /**
     * The AgentServices model constructor.
     * @property {module:model/AgentServices}
     */
    AgentServices: AgentServices,
    /**
     * The AgentUpdate model constructor.
     * @property {module:model/AgentUpdate}
     */
    AgentUpdate: AgentUpdate,
    /**
     * The AuthToken model constructor.
     * @property {module:model/AuthToken}
     */
    AuthToken: AuthToken,
    /**
     * The AuthTokenAccess model constructor.
     * @property {module:model/AuthTokenAccess}
     */
    AuthTokenAccess: AuthTokenAccess,
    /**
     * The Billing model constructor.
     * @property {module:model/Billing}
     */
    Billing: Billing,
    /**
     * The BillingCharges model constructor.
     * @property {module:model/BillingCharges}
     */
    BillingCharges: BillingCharges,
    /**
     * The BillingResource model constructor.
     * @property {module:model/BillingResource}
     */
    BillingResource: BillingResource,
    /**
     * The BillingService model constructor.
     * @property {module:model/BillingService}
     */
    BillingService: BillingService,
    /**
     * The Container model constructor.
     * @property {module:model/Container}
     */
    Container: Container,
    /**
     * The ContainerCreate model constructor.
     * @property {module:model/ContainerCreate}
     */
    ContainerCreate: ContainerCreate,
    /**
     * The ContainerCreateRegistry model constructor.
     * @property {module:model/ContainerCreateRegistry}
     */
    ContainerCreateRegistry: ContainerCreateRegistry,
    /**
     * The ContainerExpose model constructor.
     * @property {module:model/ContainerExpose}
     */
    ContainerExpose: ContainerExpose,
    /**
     * The ContainerPostAccessrights model constructor.
     * @property {module:model/ContainerPostAccessrights}
     */
    ContainerPostAccessrights: ContainerPostAccessrights,
    /**
     * The ContainerServices model constructor.
     * @property {module:model/ContainerServices}
     */
    ContainerServices: ContainerServices,
    /**
     * The ContainerUpdate model constructor.
     * @property {module:model/ContainerUpdate}
     */
    ContainerUpdate: ContainerUpdate,
    /**
     * The ContainerVolumes model constructor.
     * @property {module:model/ContainerVolumes}
     */
    ContainerVolumes: ContainerVolumes,
    /**
     * The Credential model constructor.
     * @property {module:model/Credential}
     */
    Credential: Credential,
    /**
     * The Database model constructor.
     * @property {module:model/Database}
     */
    Database: Database,
    /**
     * The DatabaseActionTransfer model constructor.
     * @property {module:model/DatabaseActionTransfer}
     */
    DatabaseActionTransfer: DatabaseActionTransfer,
    /**
     * The DatabaseCreate model constructor.
     * @property {module:model/DatabaseCreate}
     */
    DatabaseCreate: DatabaseCreate,
    /**
     * The DatabasePatchCredentialId model constructor.
     * @property {module:model/DatabasePatchCredentialId}
     */
    DatabasePatchCredentialId: DatabasePatchCredentialId,
    /**
     * The DatabasePatchCredentialpasswordId model constructor.
     * @property {module:model/DatabasePatchCredentialpasswordId}
     */
    DatabasePatchCredentialpasswordId: DatabasePatchCredentialpasswordId,
    /**
     * The DatabasePostAccessrights model constructor.
     * @property {module:model/DatabasePostAccessrights}
     */
    DatabasePostAccessrights: DatabasePostAccessrights,
    /**
     * The DatabasePostCredential model constructor.
     * @property {module:model/DatabasePostCredential}
     */
    DatabasePostCredential: DatabasePostCredential,
    /**
     * The DatabasePostCredentialpassword model constructor.
     * @property {module:model/DatabasePostCredentialpassword}
     */
    DatabasePostCredentialpassword: DatabasePostCredentialpassword,
    /**
     * The DatabaseServices model constructor.
     * @property {module:model/DatabaseServices}
     */
    DatabaseServices: DatabaseServices,
    /**
     * The DatabaseUpdate model constructor.
     * @property {module:model/DatabaseUpdate}
     */
    DatabaseUpdate: DatabaseUpdate,
    /**
     * The Disk model constructor.
     * @property {module:model/Disk}
     */
    Disk: Disk,
    /**
     * The DiskActionClone model constructor.
     * @property {module:model/DiskActionClone}
     */
    DiskActionClone: DiskActionClone,
    /**
     * The DiskActionResize model constructor.
     * @property {module:model/DiskActionResize}
     */
    DiskActionResize: DiskActionResize,
    /**
     * The DiskActionTransfer model constructor.
     * @property {module:model/DiskActionTransfer}
     */
    DiskActionTransfer: DiskActionTransfer,
    /**
     * The DiskCreate model constructor.
     * @property {module:model/DiskCreate}
     */
    DiskCreate: DiskCreate,
    /**
     * The DiskMetadata model constructor.
     * @property {module:model/DiskMetadata}
     */
    DiskMetadata: DiskMetadata,
    /**
     * The DiskMetadataSource model constructor.
     * @property {module:model/DiskMetadataSource}
     */
    DiskMetadataSource: DiskMetadataSource,
    /**
     * The DiskPostAccessrights model constructor.
     * @property {module:model/DiskPostAccessrights}
     */
    DiskPostAccessrights: DiskPostAccessrights,
    /**
     * The DiskServices model constructor.
     * @property {module:model/DiskServices}
     */
    DiskServices: DiskServices,
    /**
     * The DiskUpdate model constructor.
     * @property {module:model/DiskUpdate}
     */
    DiskUpdate: DiskUpdate,
    /**
     * The Event model constructor.
     * @property {module:model/Event}
     */
    Event: Event,
    /**
     * The EventResource model constructor.
     * @property {module:model/EventResource}
     */
    EventResource: EventResource,
    /**
     * The Firewall model constructor.
     * @property {module:model/Firewall}
     */
    Firewall: Firewall,
    /**
     * The FirewallActionAttach model constructor.
     * @property {module:model/FirewallActionAttach}
     */
    FirewallActionAttach: FirewallActionAttach,
    /**
     * The FirewallActionTransfer model constructor.
     * @property {module:model/FirewallActionTransfer}
     */
    FirewallActionTransfer: FirewallActionTransfer,
    /**
     * The FirewallCreate model constructor.
     * @property {module:model/FirewallCreate}
     */
    FirewallCreate: FirewallCreate,
    /**
     * The FirewallCreateIngress model constructor.
     * @property {module:model/FirewallCreateIngress}
     */
    FirewallCreateIngress: FirewallCreateIngress,
    /**
     * The FirewallPostAccessrights model constructor.
     * @property {module:model/FirewallPostAccessrights}
     */
    FirewallPostAccessrights: FirewallPostAccessrights,
    /**
     * The FirewallPostEgress model constructor.
     * @property {module:model/FirewallPostEgress}
     */
    FirewallPostEgress: FirewallPostEgress,
    /**
     * The FirewallPostIngress model constructor.
     * @property {module:model/FirewallPostIngress}
     */
    FirewallPostIngress: FirewallPostIngress,
    /**
     * The FirewallServices model constructor.
     * @property {module:model/FirewallServices}
     */
    FirewallServices: FirewallServices,
    /**
     * The FirewallUpdate model constructor.
     * @property {module:model/FirewallUpdate}
     */
    FirewallUpdate: FirewallUpdate,
    /**
     * The Hdd model constructor.
     * @property {module:model/Hdd}
     */
    Hdd: Hdd,
    /**
     * The HddDisk model constructor.
     * @property {module:model/HddDisk}
     */
    HddDisk: HddDisk,
    /**
     * The Image model constructor.
     * @property {module:model/Image}
     */
    Image: Image,
    /**
     * The ImageActionTransfer model constructor.
     * @property {module:model/ImageActionTransfer}
     */
    ImageActionTransfer: ImageActionTransfer,
    /**
     * The ImageAttachedOn model constructor.
     * @property {module:model/ImageAttachedOn}
     */
    ImageAttachedOn: ImageAttachedOn,
    /**
     * The ImageCreate model constructor.
     * @property {module:model/ImageCreate}
     */
    ImageCreate: ImageCreate,
    /**
     * The ImageDisk model constructor.
     * @property {module:model/ImageDisk}
     */
    ImageDisk: ImageDisk,
    /**
     * The ImageDisks model constructor.
     * @property {module:model/ImageDisks}
     */
    ImageDisks: ImageDisks,
    /**
     * The ImagePostAccessrights model constructor.
     * @property {module:model/ImagePostAccessrights}
     */
    ImagePostAccessrights: ImagePostAccessrights,
    /**
     * The ImageServices model constructor.
     * @property {module:model/ImageServices}
     */
    ImageServices: ImageServices,
    /**
     * The ImageUpdate model constructor.
     * @property {module:model/ImageUpdate}
     */
    ImageUpdate: ImageUpdate,
    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200: InlineResponse200,
    /**
     * The InlineResponse2001 model constructor.
     * @property {module:model/InlineResponse2001}
     */
    InlineResponse2001: InlineResponse2001,
    /**
     * The InlineResponse2002 model constructor.
     * @property {module:model/InlineResponse2002}
     */
    InlineResponse2002: InlineResponse2002,
    /**
     * The InlineResponse2003 model constructor.
     * @property {module:model/InlineResponse2003}
     */
    InlineResponse2003: InlineResponse2003,
    /**
     * The InlineResponse2004 model constructor.
     * @property {module:model/InlineResponse2004}
     */
    InlineResponse2004: InlineResponse2004,
    /**
     * The InlineResponse2005 model constructor.
     * @property {module:model/InlineResponse2005}
     */
    InlineResponse2005: InlineResponse2005,
    /**
     * The InlineResponse400 model constructor.
     * @property {module:model/InlineResponse400}
     */
    InlineResponse400: InlineResponse400,
    /**
     * The Invoice model constructor.
     * @property {module:model/Invoice}
     */
    Invoice: Invoice,
    /**
     * The InvoiceArray model constructor.
     * @property {module:model/InvoiceArray}
     */
    InvoiceArray: InvoiceArray,
    /**
     * The InvoiceBuyer model constructor.
     * @property {module:model/InvoiceBuyer}
     */
    InvoiceBuyer: InvoiceBuyer,
    /**
     * The InvoiceBuyerAddress model constructor.
     * @property {module:model/InvoiceBuyerAddress}
     */
    InvoiceBuyerAddress: InvoiceBuyerAddress,
    /**
     * The InvoiceDuplicate model constructor.
     * @property {module:model/InvoiceDuplicate}
     */
    InvoiceDuplicate: InvoiceDuplicate,
    /**
     * The InvoiceItems model constructor.
     * @property {module:model/InvoiceItems}
     */
    InvoiceItems: InvoiceItems,
    /**
     * The InvoiceSeller model constructor.
     * @property {module:model/InvoiceSeller}
     */
    InvoiceSeller: InvoiceSeller,
    /**
     * The InvoiceSellerAddress model constructor.
     * @property {module:model/InvoiceSellerAddress}
     */
    InvoiceSellerAddress: InvoiceSellerAddress,
    /**
     * The Ip model constructor.
     * @property {module:model/Ip}
     */
    Ip: Ip,
    /**
     * The IpActionAssociate model constructor.
     * @property {module:model/IpActionAssociate}
     */
    IpActionAssociate: IpActionAssociate,
    /**
     * The IpActionTransfer model constructor.
     * @property {module:model/IpActionTransfer}
     */
    IpActionTransfer: IpActionTransfer,
    /**
     * The IpAssociated model constructor.
     * @property {module:model/IpAssociated}
     */
    IpAssociated: IpAssociated,
    /**
     * The IpCreate model constructor.
     * @property {module:model/IpCreate}
     */
    IpCreate: IpCreate,
    /**
     * The IpPostAccessrights model constructor.
     * @property {module:model/IpPostAccessrights}
     */
    IpPostAccessrights: IpPostAccessrights,
    /**
     * The IpServices model constructor.
     * @property {module:model/IpServices}
     */
    IpServices: IpServices,
    /**
     * The IpUpdate model constructor.
     * @property {module:model/IpUpdate}
     */
    IpUpdate: IpUpdate,
    /**
     * The Iso model constructor.
     * @property {module:model/Iso}
     */
    Iso: Iso,
    /**
     * The IsoActionTransfer model constructor.
     * @property {module:model/IsoActionTransfer}
     */
    IsoActionTransfer: IsoActionTransfer,
    /**
     * The IsoCreate model constructor.
     * @property {module:model/IsoCreate}
     */
    IsoCreate: IsoCreate,
    /**
     * The IsoPostAccessrights model constructor.
     * @property {module:model/IsoPostAccessrights}
     */
    IsoPostAccessrights: IsoPostAccessrights,
    /**
     * The IsoServices model constructor.
     * @property {module:model/IsoServices}
     */
    IsoServices: IsoServices,
    /**
     * The IsoUpdate model constructor.
     * @property {module:model/IsoUpdate}
     */
    IsoUpdate: IsoUpdate,
    /**
     * The Journal model constructor.
     * @property {module:model/Journal}
     */
    Journal: Journal,
    /**
     * The JournalActionTransfer model constructor.
     * @property {module:model/JournalActionTransfer}
     */
    JournalActionTransfer: JournalActionTransfer,
    /**
     * The JournalActionUpdateRetention model constructor.
     * @property {module:model/JournalActionUpdateRetention}
     */
    JournalActionUpdateRetention: JournalActionUpdateRetention,
    /**
     * The JournalCreate model constructor.
     * @property {module:model/JournalCreate}
     */
    JournalCreate: JournalCreate,
    /**
     * The JournalCreateCredential model constructor.
     * @property {module:model/JournalCreateCredential}
     */
    JournalCreateCredential: JournalCreateCredential,
    /**
     * The JournalPatchCredentialId model constructor.
     * @property {module:model/JournalPatchCredentialId}
     */
    JournalPatchCredentialId: JournalPatchCredentialId,
    /**
     * The JournalPatchCredentialpasswordId model constructor.
     * @property {module:model/JournalPatchCredentialpasswordId}
     */
    JournalPatchCredentialpasswordId: JournalPatchCredentialpasswordId,
    /**
     * The JournalPostAccessrights model constructor.
     * @property {module:model/JournalPostAccessrights}
     */
    JournalPostAccessrights: JournalPostAccessrights,
    /**
     * The JournalPostCredential model constructor.
     * @property {module:model/JournalPostCredential}
     */
    JournalPostCredential: JournalPostCredential,
    /**
     * The JournalPostCredentialpassword model constructor.
     * @property {module:model/JournalPostCredentialpassword}
     */
    JournalPostCredentialpassword: JournalPostCredentialpassword,
    /**
     * The JournalServices model constructor.
     * @property {module:model/JournalServices}
     */
    JournalServices: JournalServices,
    /**
     * The JournalUpdate model constructor.
     * @property {module:model/JournalUpdate}
     */
    JournalUpdate: JournalUpdate,
    /**
     * The Netadp model constructor.
     * @property {module:model/Netadp}
     */
    Netadp: Netadp,
    /**
     * The NetadpActionFirewallAdd model constructor.
     * @property {module:model/NetadpActionFirewallAdd}
     */
    NetadpActionFirewallAdd: NetadpActionFirewallAdd,
    /**
     * The NetadpAssigned model constructor.
     * @property {module:model/NetadpAssigned}
     */
    NetadpAssigned: NetadpAssigned,
    /**
     * The NetadpPostAccessrights model constructor.
     * @property {module:model/NetadpPostAccessrights}
     */
    NetadpPostAccessrights: NetadpPostAccessrights,
    /**
     * The NetadpServices model constructor.
     * @property {module:model/NetadpServices}
     */
    NetadpServices: NetadpServices,
    /**
     * The Netgw model constructor.
     * @property {module:model/Netgw}
     */
    Netgw: Netgw,
    /**
     * The NetgwActionAttach model constructor.
     * @property {module:model/NetgwActionAttach}
     */
    NetgwActionAttach: NetgwActionAttach,
    /**
     * The NetgwActionAttachPrivate model constructor.
     * @property {module:model/NetgwActionAttachPrivate}
     */
    NetgwActionAttachPrivate: NetgwActionAttachPrivate,
    /**
     * The NetgwCreate model constructor.
     * @property {module:model/NetgwCreate}
     */
    NetgwCreate: NetgwCreate,
    /**
     * The NetgwCreatePublic model constructor.
     * @property {module:model/NetgwCreatePublic}
     */
    NetgwCreatePublic: NetgwCreatePublic,
    /**
     * The NetgwPostAccessrights model constructor.
     * @property {module:model/NetgwPostAccessrights}
     */
    NetgwPostAccessrights: NetgwPostAccessrights,
    /**
     * The NetgwServices model constructor.
     * @property {module:model/NetgwServices}
     */
    NetgwServices: NetgwServices,
    /**
     * The NetgwUpdate model constructor.
     * @property {module:model/NetgwUpdate}
     */
    NetgwUpdate: NetgwUpdate,
    /**
     * The Network model constructor.
     * @property {module:model/Network}
     */
    Network: Network,
    /**
     * The NetworkActionFirewallAdd model constructor.
     * @property {module:model/NetworkActionFirewallAdd}
     */
    NetworkActionFirewallAdd: NetworkActionFirewallAdd,
    /**
     * The NetworkCreate model constructor.
     * @property {module:model/NetworkCreate}
     */
    NetworkCreate: NetworkCreate,
    /**
     * The NetworkDns model constructor.
     * @property {module:model/NetworkDns}
     */
    NetworkDns: NetworkDns,
    /**
     * The NetworkPostAccessrights model constructor.
     * @property {module:model/NetworkPostAccessrights}
     */
    NetworkPostAccessrights: NetworkPostAccessrights,
    /**
     * The NetworkPostIp model constructor.
     * @property {module:model/NetworkPostIp}
     */
    NetworkPostIp: NetworkPostIp,
    /**
     * The NetworkServices model constructor.
     * @property {module:model/NetworkServices}
     */
    NetworkServices: NetworkServices,
    /**
     * The NetworkUpdate model constructor.
     * @property {module:model/NetworkUpdate}
     */
    NetworkUpdate: NetworkUpdate,
    /**
     * The Organisation model constructor.
     * @property {module:model/Organisation}
     */
    Organisation: Organisation,
    /**
     * The OrganisationActionPaymentAssign model constructor.
     * @property {module:model/OrganisationActionPaymentAssign}
     */
    OrganisationActionPaymentAssign: OrganisationActionPaymentAssign,
    /**
     * The OrganisationActionTransferAccept model constructor.
     * @property {module:model/OrganisationActionTransferAccept}
     */
    OrganisationActionTransferAccept: OrganisationActionTransferAccept,
    /**
     * The OrganisationBilling model constructor.
     * @property {module:model/OrganisationBilling}
     */
    OrganisationBilling: OrganisationBilling,
    /**
     * The OrganisationCreate model constructor.
     * @property {module:model/OrganisationCreate}
     */
    OrganisationCreate: OrganisationCreate,
    /**
     * The OrganisationCreateAccessRights model constructor.
     * @property {module:model/OrganisationCreateAccessRights}
     */
    OrganisationCreateAccessRights: OrganisationCreateAccessRights,
    /**
     * The OrganisationCreateBilling model constructor.
     * @property {module:model/OrganisationCreateBilling}
     */
    OrganisationCreateBilling: OrganisationCreateBilling,
    /**
     * The OrganisationCreateBillingAddress model constructor.
     * @property {module:model/OrganisationCreateBillingAddress}
     */
    OrganisationCreateBillingAddress: OrganisationCreateBillingAddress,
    /**
     * The OrganisationLimit model constructor.
     * @property {module:model/OrganisationLimit}
     */
    OrganisationLimit: OrganisationLimit,
    /**
     * The OrganisationLimitOrganisation model constructor.
     * @property {module:model/OrganisationLimitOrganisation}
     */
    OrganisationLimitOrganisation: OrganisationLimitOrganisation,
    /**
     * The OrganisationPostAccessrights model constructor.
     * @property {module:model/OrganisationPostAccessrights}
     */
    OrganisationPostAccessrights: OrganisationPostAccessrights,
    /**
     * The OrganisationTransfer model constructor.
     * @property {module:model/OrganisationTransfer}
     */
    OrganisationTransfer: OrganisationTransfer,
    /**
     * The OrganisationUpdate model constructor.
     * @property {module:model/OrganisationUpdate}
     */
    OrganisationUpdate: OrganisationUpdate,
    /**
     * The OrganisationUpdateBilling model constructor.
     * @property {module:model/OrganisationUpdateBilling}
     */
    OrganisationUpdateBilling: OrganisationUpdateBilling,
    /**
     * The OrganisationUpdateBillingAddress model constructor.
     * @property {module:model/OrganisationUpdateBillingAddress}
     */
    OrganisationUpdateBillingAddress: OrganisationUpdateBillingAddress,
    /**
     * The Payment model constructor.
     * @property {module:model/Payment}
     */
    Payment: Payment,
    /**
     * The Proforma model constructor.
     * @property {module:model/Proforma}
     */
    Proforma: Proforma,
    /**
     * The ProformaSeller model constructor.
     * @property {module:model/ProformaSeller}
     */
    ProformaSeller: ProformaSeller,
    /**
     * The Project model constructor.
     * @property {module:model/Project}
     */
    Project: Project,
    /**
     * The ProjectAccessRights model constructor.
     * @property {module:model/ProjectAccessRights}
     */
    ProjectAccessRights: ProjectAccessRights,
    /**
     * The ProjectBilling model constructor.
     * @property {module:model/ProjectBilling}
     */
    ProjectBilling: ProjectBilling,
    /**
     * The ProjectCompliance model constructor.
     * @property {module:model/ProjectCompliance}
     */
    ProjectCompliance: ProjectCompliance,
    /**
     * The ProjectCreate model constructor.
     * @property {module:model/ProjectCreate}
     */
    ProjectCreate: ProjectCreate,
    /**
     * The ProjectCreateAccessRights model constructor.
     * @property {module:model/ProjectCreateAccessRights}
     */
    ProjectCreateAccessRights: ProjectCreateAccessRights,
    /**
     * The ProjectLimit model constructor.
     * @property {module:model/ProjectLimit}
     */
    ProjectLimit: ProjectLimit,
    /**
     * The ProjectLimitAgent model constructor.
     * @property {module:model/ProjectLimitAgent}
     */
    ProjectLimitAgent: ProjectLimitAgent,
    /**
     * The ProjectLimitContainer model constructor.
     * @property {module:model/ProjectLimitContainer}
     */
    ProjectLimitContainer: ProjectLimitContainer,
    /**
     * The ProjectLimitDisk model constructor.
     * @property {module:model/ProjectLimitDisk}
     */
    ProjectLimitDisk: ProjectLimitDisk,
    /**
     * The ProjectLimitNetwork model constructor.
     * @property {module:model/ProjectLimitNetwork}
     */
    ProjectLimitNetwork: ProjectLimitNetwork,
    /**
     * The ProjectLimitRegistry model constructor.
     * @property {module:model/ProjectLimitRegistry}
     */
    ProjectLimitRegistry: ProjectLimitRegistry,
    /**
     * The ProjectLimitReservation model constructor.
     * @property {module:model/ProjectLimitReservation}
     */
    ProjectLimitReservation: ProjectLimitReservation,
    /**
     * The ProjectLimitSnapshot model constructor.
     * @property {module:model/ProjectLimitSnapshot}
     */
    ProjectLimitSnapshot: ProjectLimitSnapshot,
    /**
     * The ProjectLimitVault model constructor.
     * @property {module:model/ProjectLimitVault}
     */
    ProjectLimitVault: ProjectLimitVault,
    /**
     * The ProjectLimitVm model constructor.
     * @property {module:model/ProjectLimitVm}
     */
    ProjectLimitVm: ProjectLimitVm,
    /**
     * The ProjectLimitVolume model constructor.
     * @property {module:model/ProjectLimitVolume}
     */
    ProjectLimitVolume: ProjectLimitVolume,
    /**
     * The ProjectPatchCredentialStoreId model constructor.
     * @property {module:model/ProjectPatchCredentialStoreId}
     */
    ProjectPatchCredentialStoreId: ProjectPatchCredentialStoreId,
    /**
     * The ProjectPatchCredentialStorecertificateId model constructor.
     * @property {module:model/ProjectPatchCredentialStorecertificateId}
     */
    ProjectPatchCredentialStorecertificateId: ProjectPatchCredentialStorecertificateId,
    /**
     * The ProjectPostAccessrights model constructor.
     * @property {module:model/ProjectPostAccessrights}
     */
    ProjectPostAccessrights: ProjectPostAccessrights,
    /**
     * The ProjectPostCredentialStore model constructor.
     * @property {module:model/ProjectPostCredentialStore}
     */
    ProjectPostCredentialStore: ProjectPostCredentialStore,
    /**
     * The ProjectPostCredentialStorecertificate model constructor.
     * @property {module:model/ProjectPostCredentialStorecertificate}
     */
    ProjectPostCredentialStorecertificate: ProjectPostCredentialStorecertificate,
    /**
     * The ProjectRoles model constructor.
     * @property {module:model/ProjectRoles}
     */
    ProjectRoles: ProjectRoles,
    /**
     * The ProjectServices model constructor.
     * @property {module:model/ProjectServices}
     */
    ProjectServices: ProjectServices,
    /**
     * The ProjectThreshold model constructor.
     * @property {module:model/ProjectThreshold}
     */
    ProjectThreshold: ProjectThreshold,
    /**
     * The ProjectThresholdCredits model constructor.
     * @property {module:model/ProjectThresholdCredits}
     */
    ProjectThresholdCredits: ProjectThresholdCredits,
    /**
     * The ProjectTransfer model constructor.
     * @property {module:model/ProjectTransfer}
     */
    ProjectTransfer: ProjectTransfer,
    /**
     * The ProjectUpdate model constructor.
     * @property {module:model/ProjectUpdate}
     */
    ProjectUpdate: ProjectUpdate,
    /**
     * The Registry model constructor.
     * @property {module:model/Registry}
     */
    Registry: Registry,
    /**
     * The RegistryActionTransfer model constructor.
     * @property {module:model/RegistryActionTransfer}
     */
    RegistryActionTransfer: RegistryActionTransfer,
    /**
     * The RegistryActionUpdateDomain model constructor.
     * @property {module:model/RegistryActionUpdateDomain}
     */
    RegistryActionUpdateDomain: RegistryActionUpdateDomain,
    /**
     * The RegistryCreate model constructor.
     * @property {module:model/RegistryCreate}
     */
    RegistryCreate: RegistryCreate,
    /**
     * The RegistryPatchCredentialId model constructor.
     * @property {module:model/RegistryPatchCredentialId}
     */
    RegistryPatchCredentialId: RegistryPatchCredentialId,
    /**
     * The RegistryPatchCredentialpasswordId model constructor.
     * @property {module:model/RegistryPatchCredentialpasswordId}
     */
    RegistryPatchCredentialpasswordId: RegistryPatchCredentialpasswordId,
    /**
     * The RegistryPostAccessrights model constructor.
     * @property {module:model/RegistryPostAccessrights}
     */
    RegistryPostAccessrights: RegistryPostAccessrights,
    /**
     * The RegistryPostCredential model constructor.
     * @property {module:model/RegistryPostCredential}
     */
    RegistryPostCredential: RegistryPostCredential,
    /**
     * The RegistryPostCredentialpassword model constructor.
     * @property {module:model/RegistryPostCredentialpassword}
     */
    RegistryPostCredentialpassword: RegistryPostCredentialpassword,
    /**
     * The RegistryServices model constructor.
     * @property {module:model/RegistryServices}
     */
    RegistryServices: RegistryServices,
    /**
     * The RegistryUpdate model constructor.
     * @property {module:model/RegistryUpdate}
     */
    RegistryUpdate: RegistryUpdate,
    /**
     * The Replica model constructor.
     * @property {module:model/Replica}
     */
    Replica: Replica,
    /**
     * The ReplicaActionImage model constructor.
     * @property {module:model/ReplicaActionImage}
     */
    ReplicaActionImage: ReplicaActionImage,
    /**
     * The ReplicaCreate model constructor.
     * @property {module:model/ReplicaCreate}
     */
    ReplicaCreate: ReplicaCreate,
    /**
     * The ReplicaPostAccessrights model constructor.
     * @property {module:model/ReplicaPostAccessrights}
     */
    ReplicaPostAccessrights: ReplicaPostAccessrights,
    /**
     * The ReplicaServices model constructor.
     * @property {module:model/ReplicaServices}
     */
    ReplicaServices: ReplicaServices,
    /**
     * The Reservation model constructor.
     * @property {module:model/Reservation}
     */
    Reservation: Reservation,
    /**
     * The ReservationActionAssign model constructor.
     * @property {module:model/ReservationActionAssign}
     */
    ReservationActionAssign: ReservationActionAssign,
    /**
     * The ReservationCreate model constructor.
     * @property {module:model/ReservationCreate}
     */
    ReservationCreate: ReservationCreate,
    /**
     * The ReservationPostAccessrights model constructor.
     * @property {module:model/ReservationPostAccessrights}
     */
    ReservationPostAccessrights: ReservationPostAccessrights,
    /**
     * The ReservationServices model constructor.
     * @property {module:model/ReservationServices}
     */
    ReservationServices: ReservationServices,
    /**
     * The ReservationUpdate model constructor.
     * @property {module:model/ReservationUpdate}
     */
    ReservationUpdate: ReservationUpdate,
    /**
     * The Service model constructor.
     * @property {module:model/Service}
     */
    Service: Service,
    /**
     * The ServiceBilling model constructor.
     * @property {module:model/ServiceBilling}
     */
    ServiceBilling: ServiceBilling,
    /**
     * The ServiceBillingPrice model constructor.
     * @property {module:model/ServiceBillingPrice}
     */
    ServiceBillingPrice: ServiceBillingPrice,
    /**
     * The ServiceBillingReservations model constructor.
     * @property {module:model/ServiceBillingReservations}
     */
    ServiceBillingReservations: ServiceBillingReservations,
    /**
     * The Snapshot model constructor.
     * @property {module:model/Snapshot}
     */
    Snapshot: Snapshot,
    /**
     * The SnapshotCreate model constructor.
     * @property {module:model/SnapshotCreate}
     */
    SnapshotCreate: SnapshotCreate,
    /**
     * The SnapshotPostAccessrights model constructor.
     * @property {module:model/SnapshotPostAccessrights}
     */
    SnapshotPostAccessrights: SnapshotPostAccessrights,
    /**
     * The SnapshotServices model constructor.
     * @property {module:model/SnapshotServices}
     */
    SnapshotServices: SnapshotServices,
    /**
     * The SnapshotUpdate model constructor.
     * @property {module:model/SnapshotUpdate}
     */
    SnapshotUpdate: SnapshotUpdate,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The UserCredential model constructor.
     * @property {module:model/UserCredential}
     */
    UserCredential: UserCredential,
    /**
     * The UserCredentialCertificate model constructor.
     * @property {module:model/UserCredentialCertificate}
     */
    UserCredentialCertificate: UserCredentialCertificate,
    /**
     * The UserLimit model constructor.
     * @property {module:model/UserLimit}
     */
    UserLimit: UserLimit,
    /**
     * The UserNetworkAcl model constructor.
     * @property {module:model/UserNetworkAcl}
     */
    UserNetworkAcl: UserNetworkAcl,
    /**
     * The UserPasswordReset model constructor.
     * @property {module:model/UserPasswordReset}
     */
    UserPasswordReset: UserPasswordReset,
    /**
     * The UserPatchCredentialId model constructor.
     * @property {module:model/UserPatchCredentialId}
     */
    UserPatchCredentialId: UserPatchCredentialId,
    /**
     * The UserPatchCredentialcertificateId model constructor.
     * @property {module:model/UserPatchCredentialcertificateId}
     */
    UserPatchCredentialcertificateId: UserPatchCredentialcertificateId,
    /**
     * The UserPatchCredentialpasswordId model constructor.
     * @property {module:model/UserPatchCredentialpasswordId}
     */
    UserPatchCredentialpasswordId: UserPatchCredentialpasswordId,
    /**
     * The UserPostCredential model constructor.
     * @property {module:model/UserPostCredential}
     */
    UserPostCredential: UserPostCredential,
    /**
     * The UserPostCredentialcertificate model constructor.
     * @property {module:model/UserPostCredentialcertificate}
     */
    UserPostCredentialcertificate: UserPostCredentialcertificate,
    /**
     * The UserPostCredentialpassword model constructor.
     * @property {module:model/UserPostCredentialpassword}
     */
    UserPostCredentialpassword: UserPostCredentialpassword,
    /**
     * The UserServices model constructor.
     * @property {module:model/UserServices}
     */
    UserServices: UserServices,
    /**
     * The UserUpdate model constructor.
     * @property {module:model/UserUpdate}
     */
    UserUpdate: UserUpdate,
    /**
     * The Vault model constructor.
     * @property {module:model/Vault}
     */
    Vault: Vault,
    /**
     * The VaultActionResize model constructor.
     * @property {module:model/VaultActionResize}
     */
    VaultActionResize: VaultActionResize,
    /**
     * The VaultActionSnapshot model constructor.
     * @property {module:model/VaultActionSnapshot}
     */
    VaultActionSnapshot: VaultActionSnapshot,
    /**
     * The VaultCreate model constructor.
     * @property {module:model/VaultCreate}
     */
    VaultCreate: VaultCreate,
    /**
     * The VaultDelete model constructor.
     * @property {module:model/VaultDelete}
     */
    VaultDelete: VaultDelete,
    /**
     * The VaultPatchCredentialId model constructor.
     * @property {module:model/VaultPatchCredentialId}
     */
    VaultPatchCredentialId: VaultPatchCredentialId,
    /**
     * The VaultPatchCredentialcertificateId model constructor.
     * @property {module:model/VaultPatchCredentialcertificateId}
     */
    VaultPatchCredentialcertificateId: VaultPatchCredentialcertificateId,
    /**
     * The VaultPatchCredentialpasswordId model constructor.
     * @property {module:model/VaultPatchCredentialpasswordId}
     */
    VaultPatchCredentialpasswordId: VaultPatchCredentialpasswordId,
    /**
     * The VaultPostAccessrights model constructor.
     * @property {module:model/VaultPostAccessrights}
     */
    VaultPostAccessrights: VaultPostAccessrights,
    /**
     * The VaultPostCredential model constructor.
     * @property {module:model/VaultPostCredential}
     */
    VaultPostCredential: VaultPostCredential,
    /**
     * The VaultPostCredentialcertificate model constructor.
     * @property {module:model/VaultPostCredentialcertificate}
     */
    VaultPostCredentialcertificate: VaultPostCredentialcertificate,
    /**
     * The VaultPostCredentialpassword model constructor.
     * @property {module:model/VaultPostCredentialpassword}
     */
    VaultPostCredentialpassword: VaultPostCredentialpassword,
    /**
     * The VaultServices model constructor.
     * @property {module:model/VaultServices}
     */
    VaultServices: VaultServices,
    /**
     * The VaultUpdate model constructor.
     * @property {module:model/VaultUpdate}
     */
    VaultUpdate: VaultUpdate,
    /**
     * The Vm model constructor.
     * @property {module:model/Vm}
     */
    Vm: Vm,
    /**
     * The VmActionFlavour model constructor.
     * @property {module:model/VmActionFlavour}
     */
    VmActionFlavour: VmActionFlavour,
    /**
     * The VmActionImage model constructor.
     * @property {module:model/VmActionImage}
     */
    VmActionImage: VmActionImage,
    /**
     * The VmActionPasswordReset model constructor.
     * @property {module:model/VmActionPasswordReset}
     */
    VmActionPasswordReset: VmActionPasswordReset,
    /**
     * The VmActionRename model constructor.
     * @property {module:model/VmActionRename}
     */
    VmActionRename: VmActionRename,
    /**
     * The VmCreate model constructor.
     * @property {module:model/VmCreate}
     */
    VmCreate: VmCreate,
    /**
     * The VmCreateDisk model constructor.
     * @property {module:model/VmCreateDisk}
     */
    VmCreateDisk: VmCreateDisk,
    /**
     * The VmCreateNetadp model constructor.
     * @property {module:model/VmCreateNetadp}
     */
    VmCreateNetadp: VmCreateNetadp,
    /**
     * The VmCreatePassword model constructor.
     * @property {module:model/VmCreatePassword}
     */
    VmCreatePassword: VmCreatePassword,
    /**
     * The VmData model constructor.
     * @property {module:model/VmData}
     */
    VmData: VmData,
    /**
     * The VmDelete model constructor.
     * @property {module:model/VmDelete}
     */
    VmDelete: VmDelete,
    /**
     * The VmPostAccessrights model constructor.
     * @property {module:model/VmPostAccessrights}
     */
    VmPostAccessrights: VmPostAccessrights,
    /**
     * The VmPostHdd model constructor.
     * @property {module:model/VmPostHdd}
     */
    VmPostHdd: VmPostHdd,
    /**
     * The VmPostNetadp model constructor.
     * @property {module:model/VmPostNetadp}
     */
    VmPostNetadp: VmPostNetadp,
    /**
     * The VmServices model constructor.
     * @property {module:model/VmServices}
     */
    VmServices: VmServices,
    /**
     * The VmSourceImage model constructor.
     * @property {module:model/VmSourceImage}
     */
    VmSourceImage: VmSourceImage,
    /**
     * The VmUpdate model constructor.
     * @property {module:model/VmUpdate}
     */
    VmUpdate: VmUpdate,
    /**
     * The Vmhost model constructor.
     * @property {module:model/Vmhost}
     */
    Vmhost: Vmhost,
    /**
     * The VmhostPostAccessrights model constructor.
     * @property {module:model/VmhostPostAccessrights}
     */
    VmhostPostAccessrights: VmhostPostAccessrights,
    /**
     * The VmhostServices model constructor.
     * @property {module:model/VmhostServices}
     */
    VmhostServices: VmhostServices,
    /**
     * The Volume model constructor.
     * @property {module:model/Volume}
     */
    Volume: Volume,
    /**
     * The VolumeCreate model constructor.
     * @property {module:model/VolumeCreate}
     */
    VolumeCreate: VolumeCreate,
    /**
     * The VolumePostAccessrights model constructor.
     * @property {module:model/VolumePostAccessrights}
     */
    VolumePostAccessrights: VolumePostAccessrights,
    /**
     * The VolumeServices model constructor.
     * @property {module:model/VolumeServices}
     */
    VolumeServices: VolumeServices,
    /**
     * The VolumeUpdate model constructor.
     * @property {module:model/VolumeUpdate}
     */
    VolumeUpdate: VolumeUpdate,
    /**
     * The Website model constructor.
     * @property {module:model/Website}
     */
    Website: Website,
    /**
     * The WebsiteActionTransfer model constructor.
     * @property {module:model/WebsiteActionTransfer}
     */
    WebsiteActionTransfer: WebsiteActionTransfer,
    /**
     * The WebsiteActionUpdateDomain model constructor.
     * @property {module:model/WebsiteActionUpdateDomain}
     */
    WebsiteActionUpdateDomain: WebsiteActionUpdateDomain,
    /**
     * The WebsiteCreate model constructor.
     * @property {module:model/WebsiteCreate}
     */
    WebsiteCreate: WebsiteCreate,
    /**
     * The WebsiteCreateCredential model constructor.
     * @property {module:model/WebsiteCreateCredential}
     */
    WebsiteCreateCredential: WebsiteCreateCredential,
    /**
     * The WebsiteCreateSource model constructor.
     * @property {module:model/WebsiteCreateSource}
     */
    WebsiteCreateSource: WebsiteCreateSource,
    /**
     * The WebsitePatchCredentialId model constructor.
     * @property {module:model/WebsitePatchCredentialId}
     */
    WebsitePatchCredentialId: WebsitePatchCredentialId,
    /**
     * The WebsitePatchCredentialcertificateId model constructor.
     * @property {module:model/WebsitePatchCredentialcertificateId}
     */
    WebsitePatchCredentialcertificateId: WebsitePatchCredentialcertificateId,
    /**
     * The WebsitePatchCredentialpasswordId model constructor.
     * @property {module:model/WebsitePatchCredentialpasswordId}
     */
    WebsitePatchCredentialpasswordId: WebsitePatchCredentialpasswordId,
    /**
     * The WebsitePostAccessrights model constructor.
     * @property {module:model/WebsitePostAccessrights}
     */
    WebsitePostAccessrights: WebsitePostAccessrights,
    /**
     * The WebsitePostCredential model constructor.
     * @property {module:model/WebsitePostCredential}
     */
    WebsitePostCredential: WebsitePostCredential,
    /**
     * The WebsitePostCredentialcertificate model constructor.
     * @property {module:model/WebsitePostCredentialcertificate}
     */
    WebsitePostCredentialcertificate: WebsitePostCredentialcertificate,
    /**
     * The WebsitePostCredentialpassword model constructor.
     * @property {module:model/WebsitePostCredentialpassword}
     */
    WebsitePostCredentialpassword: WebsitePostCredentialpassword,
    /**
     * The WebsitePostSnapshot model constructor.
     * @property {module:model/WebsitePostSnapshot}
     */
    WebsitePostSnapshot: WebsitePostSnapshot,
    /**
     * The WebsiteServices model constructor.
     * @property {module:model/WebsiteServices}
     */
    WebsiteServices: WebsiteServices,
    /**
     * The WebsiteUpdate model constructor.
     * @property {module:model/WebsiteUpdate}
     */
    WebsiteUpdate: WebsiteUpdate,
    /**
     * The Zone model constructor.
     * @property {module:model/Zone}
     */
    Zone: Zone,
    /**
     * The ZoneCreate model constructor.
     * @property {module:model/ZoneCreate}
     */
    ZoneCreate: ZoneCreate,
    /**
     * The ZoneCreateSource model constructor.
     * @property {module:model/ZoneCreateSource}
     */
    ZoneCreateSource: ZoneCreateSource,
    /**
     * The ZonePatchRecordsetRecordsetId model constructor.
     * @property {module:model/ZonePatchRecordsetRecordsetId}
     */
    ZonePatchRecordsetRecordsetId: ZonePatchRecordsetRecordsetId,
    /**
     * The ZonePostAccessrights model constructor.
     * @property {module:model/ZonePostAccessrights}
     */
    ZonePostAccessrights: ZonePostAccessrights,
    /**
     * The ZonePostRecordset model constructor.
     * @property {module:model/ZonePostRecordset}
     */
    ZonePostRecordset: ZonePostRecordset,
    /**
     * The ZonePostRecordsetRecord model constructor.
     * @property {module:model/ZonePostRecordsetRecord}
     */
    ZonePostRecordsetRecord: ZonePostRecordsetRecord,
    /**
     * The ZoneRecordset model constructor.
     * @property {module:model/ZoneRecordset}
     */
    ZoneRecordset: ZoneRecordset,
    /**
     * The ZoneRecordset0 model constructor.
     * @property {module:model/ZoneRecordset0}
     */
    ZoneRecordset0: ZoneRecordset0,
    /**
     * The ZoneRecordset0Record model constructor.
     * @property {module:model/ZoneRecordset0Record}
     */
    ZoneRecordset0Record: ZoneRecordset0Record,
    /**
     * The ZoneRecordsetRecord model constructor.
     * @property {module:model/ZoneRecordsetRecord}
     */
    ZoneRecordsetRecord: ZoneRecordsetRecord,
    /**
     * The ZoneRrsets model constructor.
     * @property {module:model/ZoneRrsets}
     */
    ZoneRrsets: ZoneRrsets,
    /**
     * The ZoneServices model constructor.
     * @property {module:model/ZoneServices}
     */
    ZoneServices: ZoneServices,
    /**
     * The ZoneUpdate model constructor.
     * @property {module:model/ZoneUpdate}
     */
    ZoneUpdate: ZoneUpdate,
    /**
     * The AgentApi service constructor.
     * @property {module:h1-client/AgentApi}
     */
    AgentApi: AgentApi,
    /**
     * The ContainerApi service constructor.
     * @property {module:h1-client/ContainerApi}
     */
    ContainerApi: ContainerApi,
    /**
     * The DatabaseApi service constructor.
     * @property {module:h1-client/DatabaseApi}
     */
    DatabaseApi: DatabaseApi,
    /**
     * The DiskApi service constructor.
     * @property {module:h1-client/DiskApi}
     */
    DiskApi: DiskApi,
    /**
     * The FirewallApi service constructor.
     * @property {module:h1-client/FirewallApi}
     */
    FirewallApi: FirewallApi,
    /**
     * The ImageApi service constructor.
     * @property {module:h1-client/ImageApi}
     */
    ImageApi: ImageApi,
    /**
     * The IpApi service constructor.
     * @property {module:h1-client/IpApi}
     */
    IpApi: IpApi,
    /**
     * The IsoApi service constructor.
     * @property {module:h1-client/IsoApi}
     */
    IsoApi: IsoApi,
    /**
     * The JournalApi service constructor.
     * @property {module:h1-client/JournalApi}
     */
    JournalApi: JournalApi,
    /**
     * The NetadpApi service constructor.
     * @property {module:h1-client/NetadpApi}
     */
    NetadpApi: NetadpApi,
    /**
     * The NetgwApi service constructor.
     * @property {module:h1-client/NetgwApi}
     */
    NetgwApi: NetgwApi,
    /**
     * The NetworkApi service constructor.
     * @property {module:h1-client/NetworkApi}
     */
    NetworkApi: NetworkApi,
    /**
     * The OrganisationApi service constructor.
     * @property {module:h1-client/OrganisationApi}
     */
    OrganisationApi: OrganisationApi,
    /**
     * The ProjectApi service constructor.
     * @property {module:h1-client/ProjectApi}
     */
    ProjectApi: ProjectApi,
    /**
     * The RegistryApi service constructor.
     * @property {module:h1-client/RegistryApi}
     */
    RegistryApi: RegistryApi,
    /**
     * The ReplicaApi service constructor.
     * @property {module:h1-client/ReplicaApi}
     */
    ReplicaApi: ReplicaApi,
    /**
     * The ReservationApi service constructor.
     * @property {module:h1-client/ReservationApi}
     */
    ReservationApi: ReservationApi,
    /**
     * The ServiceApi service constructor.
     * @property {module:h1-client/ServiceApi}
     */
    ServiceApi: ServiceApi,
    /**
     * The SnapshotApi service constructor.
     * @property {module:h1-client/SnapshotApi}
     */
    SnapshotApi: SnapshotApi,
    /**
     * The UserApi service constructor.
     * @property {module:h1-client/UserApi}
     */
    UserApi: UserApi,
    /**
     * The VaultApi service constructor.
     * @property {module:h1-client/VaultApi}
     */
    VaultApi: VaultApi,
    /**
     * The VmApi service constructor.
     * @property {module:h1-client/VmApi}
     */
    VmApi: VmApi,
    /**
     * The VmhostApi service constructor.
     * @property {module:h1-client/VmhostApi}
     */
    VmhostApi: VmhostApi,
    /**
     * The VolumeApi service constructor.
     * @property {module:h1-client/VolumeApi}
     */
    VolumeApi: VolumeApi,
    /**
     * The WebsiteApi service constructor.
     * @property {module:h1-client/WebsiteApi}
     */
    WebsiteApi: WebsiteApi,
    /**
     * The ZoneApi service constructor.
     * @property {module:h1-client/ZoneApi}
     */
    ZoneApi: ZoneApi
  };

  return exports;
}));
