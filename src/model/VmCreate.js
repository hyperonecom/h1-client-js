/**
 * HyperOne API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VmCreateDisk from './VmCreateDisk';
import VmCreateNetadp from './VmCreateNetadp';
import VmCreatePassword from './VmCreatePassword';

/**
 * The VmCreate model module.
 * @module model/VmCreate
 * @version 0.0.3
 */
class VmCreate {
    /**
     * Constructs a new <code>VmCreate</code>.
     * @alias module:model/VmCreate
     * @param service {String} 
     */
    constructor(service) { 
        
        VmCreate.initialize(this, service);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, service) { 
        obj['service'] = service;
    }

    /**
     * Constructs a <code>VmCreate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VmCreate} obj Optional instance to populate.
     * @return {module:model/VmCreate} The populated <code>VmCreate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VmCreate();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('image')) {
                obj['image'] = ApiClient.convertToType(data['image'], 'String');
            }
            if (data.hasOwnProperty('iso')) {
                obj['iso'] = ApiClient.convertToType(data['iso'], 'String');
            }
            if (data.hasOwnProperty('service')) {
                obj['service'] = ApiClient.convertToType(data['service'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = VmCreatePassword.constructFromObject(data['password']);
            }
            if (data.hasOwnProperty('sshKeys')) {
                obj['sshKeys'] = ApiClient.convertToType(data['sshKeys'], ['String']);
            }
            if (data.hasOwnProperty('userMetadata')) {
                obj['userMetadata'] = ApiClient.convertToType(data['userMetadata'], 'String');
            }
            if (data.hasOwnProperty('disk')) {
                obj['disk'] = ApiClient.convertToType(data['disk'], [VmCreateDisk]);
            }
            if (data.hasOwnProperty('netadp')) {
                obj['netadp'] = ApiClient.convertToType(data['netadp'], [VmCreateNetadp]);
            }
            if (data.hasOwnProperty('boot')) {
                obj['boot'] = ApiClient.convertToType(data['boot'], 'Boolean');
            }
            if (data.hasOwnProperty('cloud')) {
                obj['cloud'] = ApiClient.convertToType(data['cloud'], 'String');
            }
            if (data.hasOwnProperty('tag')) {
                obj['tag'] = ApiClient.convertToType(data['tag'], {'String': 'String'});
            }
        }
        return obj;
    }


}

/**
 * @member {String} name
 */
VmCreate.prototype['name'] = undefined;

/**
 * @member {String} image
 */
VmCreate.prototype['image'] = undefined;

/**
 * @member {String} iso
 */
VmCreate.prototype['iso'] = undefined;

/**
 * @member {String} service
 */
VmCreate.prototype['service'] = undefined;

/**
 * @member {String} username
 */
VmCreate.prototype['username'] = undefined;

/**
 * @member {module:model/VmCreatePassword} password
 */
VmCreate.prototype['password'] = undefined;

/**
 * - user credential (by id or name) - project credential (by id or name) - raw openssh public key (starting with `ssh-rsa/ssh-ed25519`) - defaults to user keys
 * @member {Array.<String>} sshKeys
 */
VmCreate.prototype['sshKeys'] = undefined;

/**
 * @member {String} userMetadata
 */
VmCreate.prototype['userMetadata'] = undefined;

/**
 * @member {Array.<module:model/VmCreateDisk>} disk
 */
VmCreate.prototype['disk'] = undefined;

/**
 * @member {Array.<module:model/VmCreateNetadp>} netadp
 */
VmCreate.prototype['netadp'] = undefined;

/**
 * @member {Boolean} boot
 */
VmCreate.prototype['boot'] = undefined;

/**
 * @member {String} cloud
 */
VmCreate.prototype['cloud'] = undefined;

/**
 * @member {Object.<String, String>} tag
 */
VmCreate.prototype['tag'] = undefined;






export default VmCreate;

