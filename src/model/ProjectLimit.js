/**
 * HyperOne API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProjectLimitAgent from './ProjectLimitAgent';
import ProjectLimitContainer from './ProjectLimitContainer';
import ProjectLimitDisk from './ProjectLimitDisk';
import ProjectLimitNetwork from './ProjectLimitNetwork';
import ProjectLimitRegistry from './ProjectLimitRegistry';
import ProjectLimitReservation from './ProjectLimitReservation';
import ProjectLimitSnapshot from './ProjectLimitSnapshot';
import ProjectLimitVault from './ProjectLimitVault';
import ProjectLimitVm from './ProjectLimitVm';
import ProjectLimitVolume from './ProjectLimitVolume';

/**
 * The ProjectLimit model module.
 * @module model/ProjectLimit
 * @version 0.0.3
 */
class ProjectLimit {
    /**
     * Constructs a new <code>ProjectLimit</code>.
     * @alias module:model/ProjectLimit
     */
    constructor() { 
        
        ProjectLimit.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProjectLimit</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProjectLimit} obj Optional instance to populate.
     * @return {module:model/ProjectLimit} The populated <code>ProjectLimit</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProjectLimit();

            if (data.hasOwnProperty('agent')) {
                obj['agent'] = ProjectLimitAgent.constructFromObject(data['agent']);
            }
            if (data.hasOwnProperty('container')) {
                obj['container'] = ProjectLimitContainer.constructFromObject(data['container']);
            }
            if (data.hasOwnProperty('database')) {
                obj['database'] = ProjectLimitContainer.constructFromObject(data['database']);
            }
            if (data.hasOwnProperty('journal')) {
                obj['journal'] = ProjectLimitContainer.constructFromObject(data['journal']);
            }
            if (data.hasOwnProperty('registry')) {
                obj['registry'] = ProjectLimitRegistry.constructFromObject(data['registry']);
            }
            if (data.hasOwnProperty('volume')) {
                obj['volume'] = ProjectLimitVolume.constructFromObject(data['volume']);
            }
            if (data.hasOwnProperty('website')) {
                obj['website'] = ProjectLimitContainer.constructFromObject(data['website']);
            }
            if (data.hasOwnProperty('zone')) {
                obj['zone'] = ProjectLimitContainer.constructFromObject(data['zone']);
            }
            if (data.hasOwnProperty('disk')) {
                obj['disk'] = ProjectLimitDisk.constructFromObject(data['disk']);
            }
            if (data.hasOwnProperty('firewall')) {
                obj['firewall'] = ProjectLimitContainer.constructFromObject(data['firewall']);
            }
            if (data.hasOwnProperty('image')) {
                obj['image'] = ProjectLimitContainer.constructFromObject(data['image']);
            }
            if (data.hasOwnProperty('ip')) {
                obj['ip'] = ProjectLimitContainer.constructFromObject(data['ip']);
            }
            if (data.hasOwnProperty('iso')) {
                obj['iso'] = ProjectLimitRegistry.constructFromObject(data['iso']);
            }
            if (data.hasOwnProperty('netadp')) {
                obj['netadp'] = ApiClient.convertToType(data['netadp'], 'String');
            }
            if (data.hasOwnProperty('netgw')) {
                obj['netgw'] = ProjectLimitContainer.constructFromObject(data['netgw']);
            }
            if (data.hasOwnProperty('network')) {
                obj['network'] = ProjectLimitNetwork.constructFromObject(data['network']);
            }
            if (data.hasOwnProperty('replica')) {
                obj['replica'] = ApiClient.convertToType(data['replica'], 'String');
            }
            if (data.hasOwnProperty('snapshot')) {
                obj['snapshot'] = ProjectLimitSnapshot.constructFromObject(data['snapshot']);
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], 'String');
            }
            if (data.hasOwnProperty('vault')) {
                obj['vault'] = ProjectLimitVault.constructFromObject(data['vault']);
            }
            if (data.hasOwnProperty('vm')) {
                obj['vm'] = ProjectLimitVm.constructFromObject(data['vm']);
            }
            if (data.hasOwnProperty('reservation')) {
                obj['reservation'] = ProjectLimitReservation.constructFromObject(data['reservation']);
            }
            if (data.hasOwnProperty('vmhost')) {
                obj['vmhost'] = ApiClient.convertToType(data['vmhost'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/ProjectLimitAgent} agent
 */
ProjectLimit.prototype['agent'] = undefined;

/**
 * @member {module:model/ProjectLimitContainer} container
 */
ProjectLimit.prototype['container'] = undefined;

/**
 * @member {module:model/ProjectLimitContainer} database
 */
ProjectLimit.prototype['database'] = undefined;

/**
 * @member {module:model/ProjectLimitContainer} journal
 */
ProjectLimit.prototype['journal'] = undefined;

/**
 * @member {module:model/ProjectLimitRegistry} registry
 */
ProjectLimit.prototype['registry'] = undefined;

/**
 * @member {module:model/ProjectLimitVolume} volume
 */
ProjectLimit.prototype['volume'] = undefined;

/**
 * @member {module:model/ProjectLimitContainer} website
 */
ProjectLimit.prototype['website'] = undefined;

/**
 * @member {module:model/ProjectLimitContainer} zone
 */
ProjectLimit.prototype['zone'] = undefined;

/**
 * @member {module:model/ProjectLimitDisk} disk
 */
ProjectLimit.prototype['disk'] = undefined;

/**
 * @member {module:model/ProjectLimitContainer} firewall
 */
ProjectLimit.prototype['firewall'] = undefined;

/**
 * @member {module:model/ProjectLimitContainer} image
 */
ProjectLimit.prototype['image'] = undefined;

/**
 * @member {module:model/ProjectLimitContainer} ip
 */
ProjectLimit.prototype['ip'] = undefined;

/**
 * @member {module:model/ProjectLimitRegistry} iso
 */
ProjectLimit.prototype['iso'] = undefined;

/**
 * @member {String} netadp
 */
ProjectLimit.prototype['netadp'] = undefined;

/**
 * @member {module:model/ProjectLimitContainer} netgw
 */
ProjectLimit.prototype['netgw'] = undefined;

/**
 * @member {module:model/ProjectLimitNetwork} network
 */
ProjectLimit.prototype['network'] = undefined;

/**
 * @member {String} replica
 */
ProjectLimit.prototype['replica'] = undefined;

/**
 * @member {module:model/ProjectLimitSnapshot} snapshot
 */
ProjectLimit.prototype['snapshot'] = undefined;

/**
 * @member {String} user
 */
ProjectLimit.prototype['user'] = undefined;

/**
 * @member {module:model/ProjectLimitVault} vault
 */
ProjectLimit.prototype['vault'] = undefined;

/**
 * @member {module:model/ProjectLimitVm} vm
 */
ProjectLimit.prototype['vm'] = undefined;

/**
 * @member {module:model/ProjectLimitReservation} reservation
 */
ProjectLimit.prototype['reservation'] = undefined;

/**
 * @member {String} vmhost
 */
ProjectLimit.prototype['vmhost'] = undefined;






export default ProjectLimit;

