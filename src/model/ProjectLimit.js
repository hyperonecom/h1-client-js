/**
 * HyperOne API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.0.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.HyperOneApi) {
      root.HyperOneApi = {};
    }
    root.HyperOneApi.ProjectLimit = factory(root.HyperOneApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';



  /**
   * The ProjectLimit model module.
   * @module model/ProjectLimit
   * @version 0.0.2
   */

  /**
   * Constructs a new <code>ProjectLimit</code>.
   * @alias module:model/ProjectLimit
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>ProjectLimit</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ProjectLimit} obj Optional instance to populate.
   * @return {module:model/ProjectLimit} The populated <code>ProjectLimit</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('vm')) {
        obj['vm'] = Object.constructFromObject(data['vm']);
      }
      if (data.hasOwnProperty('disk')) {
        obj['disk'] = Object.constructFromObject(data['disk']);
      }
      if (data.hasOwnProperty('iso')) {
        obj['iso'] = Object.constructFromObject(data['iso']);
      }
      if (data.hasOwnProperty('network')) {
        obj['network'] = Object.constructFromObject(data['network']);
      }
      if (data.hasOwnProperty('image')) {
        obj['image'] = Object.constructFromObject(data['image']);
      }
      if (data.hasOwnProperty('ip')) {
        obj['ip'] = Object.constructFromObject(data['ip']);
      }
      if (data.hasOwnProperty('firewall')) {
        obj['firewall'] = Object.constructFromObject(data['firewall']);
      }
      if (data.hasOwnProperty('netgw')) {
        obj['netgw'] = Object.constructFromObject(data['netgw']);
      }
      if (data.hasOwnProperty('vault')) {
        obj['vault'] = Object.constructFromObject(data['vault']);
      }
      if (data.hasOwnProperty('snapshot')) {
        obj['snapshot'] = Object.constructFromObject(data['snapshot']);
      }
      if (data.hasOwnProperty('domain')) {
        obj['domain'] = Object.constructFromObject(data['domain']);
      }
      if (data.hasOwnProperty('logArchive')) {
        obj['logArchive'] = Object.constructFromObject(data['logArchive']);
      }
      if (data.hasOwnProperty('reservation')) {
        obj['reservation'] = Object.constructFromObject(data['reservation']);
      }
      if (data.hasOwnProperty('container')) {
        obj['container'] = Object.constructFromObject(data['container']);
      }
      if (data.hasOwnProperty('volume')) {
        obj['volume'] = Object.constructFromObject(data['volume']);
      }
      if (data.hasOwnProperty('agent')) {
        obj['agent'] = Object.constructFromObject(data['agent']);
      }
      if (data.hasOwnProperty('website')) {
        obj['website'] = Object.constructFromObject(data['website']);
      }
    }
    return obj;
  }

  /**
   * @member {Object} vm
   */
  exports.prototype['vm'] = undefined;
  /**
   * @member {Object} disk
   */
  exports.prototype['disk'] = undefined;
  /**
   * @member {Object} iso
   */
  exports.prototype['iso'] = undefined;
  /**
   * @member {Object} network
   */
  exports.prototype['network'] = undefined;
  /**
   * @member {Object} image
   */
  exports.prototype['image'] = undefined;
  /**
   * @member {Object} ip
   */
  exports.prototype['ip'] = undefined;
  /**
   * @member {Object} firewall
   */
  exports.prototype['firewall'] = undefined;
  /**
   * @member {Object} netgw
   */
  exports.prototype['netgw'] = undefined;
  /**
   * @member {Object} vault
   */
  exports.prototype['vault'] = undefined;
  /**
   * @member {Object} snapshot
   */
  exports.prototype['snapshot'] = undefined;
  /**
   * @member {Object} domain
   */
  exports.prototype['domain'] = undefined;
  /**
   * @member {Object} logArchive
   */
  exports.prototype['logArchive'] = undefined;
  /**
   * @member {Object} reservation
   */
  exports.prototype['reservation'] = undefined;
  /**
   * @member {Object} container
   */
  exports.prototype['container'] = undefined;
  /**
   * @member {Object} volume
   */
  exports.prototype['volume'] = undefined;
  /**
   * @member {Object} agent
   */
  exports.prototype['agent'] = undefined;
  /**
   * @member {Object} website
   */
  exports.prototype['website'] = undefined;



  return exports;
}));


