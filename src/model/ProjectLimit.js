/**
 * HyperOne API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.2.3-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ProjectLimitAgent', 'model/ProjectLimitContainer', 'model/ProjectLimitDisk', 'model/ProjectLimitNetwork', 'model/ProjectLimitRegistry', 'model/ProjectLimitReservation', 'model/ProjectLimitSnapshot', 'model/ProjectLimitVault', 'model/ProjectLimitVm', 'model/ProjectLimitVolume'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ProjectLimitAgent'), require('./ProjectLimitContainer'), require('./ProjectLimitDisk'), require('./ProjectLimitNetwork'), require('./ProjectLimitRegistry'), require('./ProjectLimitReservation'), require('./ProjectLimitSnapshot'), require('./ProjectLimitVault'), require('./ProjectLimitVm'), require('./ProjectLimitVolume'));
  } else {
    // Browser globals (root is window)
    if (!root.HyperoneClient) {
      root.HyperoneClient = {};
    }
    root.HyperoneClient.ProjectLimit = factory(root.HyperoneClient.ApiClient, root.HyperoneClient.ProjectLimitAgent, root.HyperoneClient.ProjectLimitContainer, root.HyperoneClient.ProjectLimitDisk, root.HyperoneClient.ProjectLimitNetwork, root.HyperoneClient.ProjectLimitRegistry, root.HyperoneClient.ProjectLimitReservation, root.HyperoneClient.ProjectLimitSnapshot, root.HyperoneClient.ProjectLimitVault, root.HyperoneClient.ProjectLimitVm, root.HyperoneClient.ProjectLimitVolume);
  }
}(this, function(ApiClient, ProjectLimitAgent, ProjectLimitContainer, ProjectLimitDisk, ProjectLimitNetwork, ProjectLimitRegistry, ProjectLimitReservation, ProjectLimitSnapshot, ProjectLimitVault, ProjectLimitVm, ProjectLimitVolume) {
  'use strict';



  /**
   * The ProjectLimit model module.
   * @module model/ProjectLimit
   * @version 0.0.3
   */

  /**
   * Constructs a new <code>ProjectLimit</code>.
   * @alias module:model/ProjectLimit
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>ProjectLimit</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ProjectLimit} obj Optional instance to populate.
   * @return {module:model/ProjectLimit} The populated <code>ProjectLimit</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('agent')) {
        obj['agent'] = ProjectLimitAgent.constructFromObject(data['agent']);
      }
      if (data.hasOwnProperty('container')) {
        obj['container'] = ProjectLimitContainer.constructFromObject(data['container']);
      }
      if (data.hasOwnProperty('database')) {
        obj['database'] = ProjectLimitContainer.constructFromObject(data['database']);
      }
      if (data.hasOwnProperty('journal')) {
        obj['journal'] = ProjectLimitContainer.constructFromObject(data['journal']);
      }
      if (data.hasOwnProperty('registry')) {
        obj['registry'] = ProjectLimitRegistry.constructFromObject(data['registry']);
      }
      if (data.hasOwnProperty('volume')) {
        obj['volume'] = ProjectLimitVolume.constructFromObject(data['volume']);
      }
      if (data.hasOwnProperty('website')) {
        obj['website'] = ProjectLimitContainer.constructFromObject(data['website']);
      }
      if (data.hasOwnProperty('zone')) {
        obj['zone'] = ProjectLimitContainer.constructFromObject(data['zone']);
      }
      if (data.hasOwnProperty('disk')) {
        obj['disk'] = ProjectLimitDisk.constructFromObject(data['disk']);
      }
      if (data.hasOwnProperty('firewall')) {
        obj['firewall'] = ProjectLimitContainer.constructFromObject(data['firewall']);
      }
      if (data.hasOwnProperty('image')) {
        obj['image'] = ProjectLimitContainer.constructFromObject(data['image']);
      }
      if (data.hasOwnProperty('ip')) {
        obj['ip'] = ProjectLimitContainer.constructFromObject(data['ip']);
      }
      if (data.hasOwnProperty('iso')) {
        obj['iso'] = ProjectLimitRegistry.constructFromObject(data['iso']);
      }
      if (data.hasOwnProperty('netadp')) {
        obj['netadp'] = ApiClient.convertToType(data['netadp'], 'String');
      }
      if (data.hasOwnProperty('netgw')) {
        obj['netgw'] = ProjectLimitContainer.constructFromObject(data['netgw']);
      }
      if (data.hasOwnProperty('network')) {
        obj['network'] = ProjectLimitNetwork.constructFromObject(data['network']);
      }
      if (data.hasOwnProperty('replica')) {
        obj['replica'] = ApiClient.convertToType(data['replica'], 'String');
      }
      if (data.hasOwnProperty('snapshot')) {
        obj['snapshot'] = ProjectLimitSnapshot.constructFromObject(data['snapshot']);
      }
      if (data.hasOwnProperty('user')) {
        obj['user'] = ApiClient.convertToType(data['user'], 'String');
      }
      if (data.hasOwnProperty('vault')) {
        obj['vault'] = ProjectLimitVault.constructFromObject(data['vault']);
      }
      if (data.hasOwnProperty('vm')) {
        obj['vm'] = ProjectLimitVm.constructFromObject(data['vm']);
      }
      if (data.hasOwnProperty('reservation')) {
        obj['reservation'] = ProjectLimitReservation.constructFromObject(data['reservation']);
      }
      if (data.hasOwnProperty('vmhost')) {
        obj['vmhost'] = ApiClient.convertToType(data['vmhost'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {module:model/ProjectLimitAgent} agent
   */
  exports.prototype['agent'] = undefined;
  /**
   * @member {module:model/ProjectLimitContainer} container
   */
  exports.prototype['container'] = undefined;
  /**
   * @member {module:model/ProjectLimitContainer} database
   */
  exports.prototype['database'] = undefined;
  /**
   * @member {module:model/ProjectLimitContainer} journal
   */
  exports.prototype['journal'] = undefined;
  /**
   * @member {module:model/ProjectLimitRegistry} registry
   */
  exports.prototype['registry'] = undefined;
  /**
   * @member {module:model/ProjectLimitVolume} volume
   */
  exports.prototype['volume'] = undefined;
  /**
   * @member {module:model/ProjectLimitContainer} website
   */
  exports.prototype['website'] = undefined;
  /**
   * @member {module:model/ProjectLimitContainer} zone
   */
  exports.prototype['zone'] = undefined;
  /**
   * @member {module:model/ProjectLimitDisk} disk
   */
  exports.prototype['disk'] = undefined;
  /**
   * @member {module:model/ProjectLimitContainer} firewall
   */
  exports.prototype['firewall'] = undefined;
  /**
   * @member {module:model/ProjectLimitContainer} image
   */
  exports.prototype['image'] = undefined;
  /**
   * @member {module:model/ProjectLimitContainer} ip
   */
  exports.prototype['ip'] = undefined;
  /**
   * @member {module:model/ProjectLimitRegistry} iso
   */
  exports.prototype['iso'] = undefined;
  /**
   * @member {String} netadp
   */
  exports.prototype['netadp'] = undefined;
  /**
   * @member {module:model/ProjectLimitContainer} netgw
   */
  exports.prototype['netgw'] = undefined;
  /**
   * @member {module:model/ProjectLimitNetwork} network
   */
  exports.prototype['network'] = undefined;
  /**
   * @member {String} replica
   */
  exports.prototype['replica'] = undefined;
  /**
   * @member {module:model/ProjectLimitSnapshot} snapshot
   */
  exports.prototype['snapshot'] = undefined;
  /**
   * @member {String} user
   */
  exports.prototype['user'] = undefined;
  /**
   * @member {module:model/ProjectLimitVault} vault
   */
  exports.prototype['vault'] = undefined;
  /**
   * @member {module:model/ProjectLimitVm} vm
   */
  exports.prototype['vm'] = undefined;
  /**
   * @member {module:model/ProjectLimitReservation} reservation
   */
  exports.prototype['reservation'] = undefined;
  /**
   * @member {String} vmhost
   */
  exports.prototype['vmhost'] = undefined;



  return exports;
}));


