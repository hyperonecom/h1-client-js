/**
 * HyperOne API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Event from './Event';
import OrganisationBilling from './OrganisationBilling';
import OrganisationLimit from './OrganisationLimit';
import OrganisationTransfer from './OrganisationTransfer';
import ProjectAccessRights from './ProjectAccessRights';
import ProjectRoles from './ProjectRoles';

/**
 * The Organisation model module.
 * @module model/Organisation
 * @version 0.0.3
 */
class Organisation {
    /**
     * Constructs a new <code>Organisation</code>.
     * @alias module:model/Organisation
     */
    constructor() { 
        
        Organisation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Organisation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Organisation} obj Optional instance to populate.
     * @return {module:model/Organisation} The populated <code>Organisation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Organisation();

            if (data.hasOwnProperty('_id')) {
                obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('services')) {
                obj['services'] = ApiClient.convertToType(data['services'], 'String');
            }
            if (data.hasOwnProperty('flavour')) {
                obj['flavour'] = ApiClient.convertToType(data['flavour'], 'String');
            }
            if (data.hasOwnProperty('modifiedOn')) {
                obj['modifiedOn'] = ApiClient.convertToType(data['modifiedOn'], 'Date');
            }
            if (data.hasOwnProperty('modifiedBy')) {
                obj['modifiedBy'] = ApiClient.convertToType(data['modifiedBy'], 'String');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
            }
            if (data.hasOwnProperty('createdOn')) {
                obj['createdOn'] = ApiClient.convertToType(data['createdOn'], 'Date');
            }
            if (data.hasOwnProperty('accessRights')) {
                obj['accessRights'] = ApiClient.convertToType(data['accessRights'], [ProjectAccessRights]);
            }
            if (data.hasOwnProperty('processing')) {
                obj['processing'] = ApiClient.convertToType(data['processing'], 'Boolean');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Boolean');
            }
            if (data.hasOwnProperty('queue')) {
                obj['queue'] = ApiClient.convertToType(data['queue'], [Event]);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('tag')) {
                obj['tag'] = ApiClient.convertToType(data['tag'], {'String': 'String'});
            }
            if (data.hasOwnProperty('project')) {
                obj['project'] = ApiClient.convertToType(data['project'], 'String');
            }
            if (data.hasOwnProperty('billing')) {
                obj['billing'] = OrganisationBilling.constructFromObject(data['billing']);
            }
            if (data.hasOwnProperty('verified')) {
                obj['verified'] = ApiClient.convertToType(data['verified'], 'Number');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = OrganisationLimit.constructFromObject(data['limit']);
            }
            if (data.hasOwnProperty('roles')) {
                obj['roles'] = ApiClient.convertToType(data['roles'], [ProjectRoles]);
            }
            if (data.hasOwnProperty('transfer')) {
                obj['transfer'] = OrganisationTransfer.constructFromObject(data['transfer']);
            }
            if (data.hasOwnProperty('bankAccount')) {
                obj['bankAccount'] = ApiClient.convertToType(data['bankAccount'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} _id
 */
Organisation.prototype['_id'] = undefined;

/**
 * @member {String} id
 */
Organisation.prototype['id'] = undefined;

/**
 * @member {String} name
 */
Organisation.prototype['name'] = undefined;

/**
 * @member {String} services
 */
Organisation.prototype['services'] = undefined;

/**
 * @member {String} flavour
 */
Organisation.prototype['flavour'] = undefined;

/**
 * @member {Date} modifiedOn
 */
Organisation.prototype['modifiedOn'] = undefined;

/**
 * @member {String} modifiedBy
 */
Organisation.prototype['modifiedBy'] = undefined;

/**
 * @member {String} createdBy
 */
Organisation.prototype['createdBy'] = undefined;

/**
 * @member {Date} createdOn
 */
Organisation.prototype['createdOn'] = undefined;

/**
 * @member {Array.<module:model/ProjectAccessRights>} accessRights
 */
Organisation.prototype['accessRights'] = undefined;

/**
 * @member {Boolean} processing
 */
Organisation.prototype['processing'] = undefined;

/**
 * @member {Boolean} created
 */
Organisation.prototype['created'] = undefined;

/**
 * @member {Array.<module:model/Event>} queue
 */
Organisation.prototype['queue'] = undefined;

/**
 * @member {module:model/Organisation.StateEnum} state
 */
Organisation.prototype['state'] = undefined;

/**
 * @member {Object.<String, String>} tag
 */
Organisation.prototype['tag'] = undefined;

/**
 * @member {String} project
 */
Organisation.prototype['project'] = undefined;

/**
 * @member {module:model/OrganisationBilling} billing
 */
Organisation.prototype['billing'] = undefined;

/**
 * @member {Number} verified
 */
Organisation.prototype['verified'] = undefined;

/**
 * @member {module:model/OrganisationLimit} limit
 */
Organisation.prototype['limit'] = undefined;

/**
 * @member {Array.<module:model/ProjectRoles>} roles
 */
Organisation.prototype['roles'] = undefined;

/**
 * @member {module:model/OrganisationTransfer} transfer
 */
Organisation.prototype['transfer'] = undefined;

/**
 * @member {String} bankAccount
 */
Organisation.prototype['bankAccount'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
Organisation['StateEnum'] = {

    /**
     * value: "Active"
     * @const
     */
    "Active": "Active",

    /**
     * value: "Inactive"
     * @const
     */
    "Inactive": "Inactive",

    /**
     * value: "Limited"
     * @const
     */
    "Limited": "Limited"
};



export default Organisation;

