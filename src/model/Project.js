/**
 * HyperOne API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Event from './Event';
import ProjectAccessRights from './ProjectAccessRights';
import ProjectBilling from './ProjectBilling';
import ProjectCompliance from './ProjectCompliance';
import ProjectLimit from './ProjectLimit';
import ProjectRoles from './ProjectRoles';
import ProjectServices from './ProjectServices';
import ProjectThreshold from './ProjectThreshold';
import ProjectTransfer from './ProjectTransfer';
import UserNetworkAcl from './UserNetworkAcl';

/**
 * The Project model module.
 * @module model/Project
 * @version 0.0.3
 */
class Project {
    /**
     * Constructs a new <code>Project</code>.
     * @alias module:model/Project
     */
    constructor() { 
        
        Project.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Project</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Project} obj Optional instance to populate.
     * @return {module:model/Project} The populated <code>Project</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Project();

            if (data.hasOwnProperty('_id')) {
                obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('services')) {
                obj['services'] = ApiClient.convertToType(data['services'], [ProjectServices]);
            }
            if (data.hasOwnProperty('flavour')) {
                obj['flavour'] = ApiClient.convertToType(data['flavour'], 'String');
            }
            if (data.hasOwnProperty('modifiedOn')) {
                obj['modifiedOn'] = ApiClient.convertToType(data['modifiedOn'], 'Date');
            }
            if (data.hasOwnProperty('modifiedBy')) {
                obj['modifiedBy'] = ApiClient.convertToType(data['modifiedBy'], 'String');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
            }
            if (data.hasOwnProperty('createdOn')) {
                obj['createdOn'] = ApiClient.convertToType(data['createdOn'], 'Date');
            }
            if (data.hasOwnProperty('accessRights')) {
                obj['accessRights'] = ApiClient.convertToType(data['accessRights'], [ProjectAccessRights]);
            }
            if (data.hasOwnProperty('processing')) {
                obj['processing'] = ApiClient.convertToType(data['processing'], 'Boolean');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Boolean');
            }
            if (data.hasOwnProperty('queue')) {
                obj['queue'] = ApiClient.convertToType(data['queue'], [Event]);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('tag')) {
                obj['tag'] = ApiClient.convertToType(data['tag'], {'String': 'String'});
            }
            if (data.hasOwnProperty('project')) {
                obj['project'] = ApiClient.convertToType(data['project'], 'String');
            }
            if (data.hasOwnProperty('bankAccount')) {
                obj['bankAccount'] = ApiClient.convertToType(data['bankAccount'], 'String');
            }
            if (data.hasOwnProperty('organisation')) {
                obj['organisation'] = ApiClient.convertToType(data['organisation'], 'String');
            }
            if (data.hasOwnProperty('billing')) {
                obj['billing'] = ProjectBilling.constructFromObject(data['billing']);
            }
            if (data.hasOwnProperty('verified')) {
                obj['verified'] = ApiClient.convertToType(data['verified'], 'String');
            }
            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ProjectLimit.constructFromObject(data['limit']);
            }
            if (data.hasOwnProperty('threshold')) {
                obj['threshold'] = ProjectThreshold.constructFromObject(data['threshold']);
            }
            if (data.hasOwnProperty('roles')) {
                obj['roles'] = ApiClient.convertToType(data['roles'], [ProjectRoles]);
            }
            if (data.hasOwnProperty('networkAcl')) {
                obj['networkAcl'] = ApiClient.convertToType(data['networkAcl'], [UserNetworkAcl]);
            }
            if (data.hasOwnProperty('compliance')) {
                obj['compliance'] = ProjectCompliance.constructFromObject(data['compliance']);
            }
            if (data.hasOwnProperty('transfer')) {
                obj['transfer'] = ProjectTransfer.constructFromObject(data['transfer']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} _id
 */
Project.prototype['_id'] = undefined;

/**
 * @member {String} id
 */
Project.prototype['id'] = undefined;

/**
 * @member {String} name
 */
Project.prototype['name'] = undefined;

/**
 * @member {Array.<module:model/ProjectServices>} services
 */
Project.prototype['services'] = undefined;

/**
 * @member {String} flavour
 */
Project.prototype['flavour'] = undefined;

/**
 * @member {Date} modifiedOn
 */
Project.prototype['modifiedOn'] = undefined;

/**
 * @member {String} modifiedBy
 */
Project.prototype['modifiedBy'] = undefined;

/**
 * @member {String} createdBy
 */
Project.prototype['createdBy'] = undefined;

/**
 * @member {Date} createdOn
 */
Project.prototype['createdOn'] = undefined;

/**
 * @member {Array.<module:model/ProjectAccessRights>} accessRights
 */
Project.prototype['accessRights'] = undefined;

/**
 * @member {Boolean} processing
 */
Project.prototype['processing'] = undefined;

/**
 * @member {Boolean} created
 */
Project.prototype['created'] = undefined;

/**
 * @member {Array.<module:model/Event>} queue
 */
Project.prototype['queue'] = undefined;

/**
 * @member {module:model/Project.StateEnum} state
 */
Project.prototype['state'] = undefined;

/**
 * @member {Object.<String, String>} tag
 */
Project.prototype['tag'] = undefined;

/**
 * @member {String} project
 */
Project.prototype['project'] = undefined;

/**
 * @member {String} bankAccount
 */
Project.prototype['bankAccount'] = undefined;

/**
 * @member {String} organisation
 */
Project.prototype['organisation'] = undefined;

/**
 * @member {module:model/ProjectBilling} billing
 */
Project.prototype['billing'] = undefined;

/**
 * @member {String} verified
 */
Project.prototype['verified'] = undefined;

/**
 * @member {Boolean} active
 * @default true
 */
Project.prototype['active'] = true;

/**
 * @member {module:model/ProjectLimit} limit
 */
Project.prototype['limit'] = undefined;

/**
 * @member {module:model/ProjectThreshold} threshold
 */
Project.prototype['threshold'] = undefined;

/**
 * @member {Array.<module:model/ProjectRoles>} roles
 */
Project.prototype['roles'] = undefined;

/**
 * @member {Array.<module:model/UserNetworkAcl>} networkAcl
 */
Project.prototype['networkAcl'] = undefined;

/**
 * @member {module:model/ProjectCompliance} compliance
 */
Project.prototype['compliance'] = undefined;

/**
 * @member {module:model/ProjectTransfer} transfer
 */
Project.prototype['transfer'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
Project['StateEnum'] = {

    /**
     * value: "Active"
     * @const
     */
    "Active": "Active",

    /**
     * value: "Inactive"
     * @const
     */
    "Inactive": "Inactive",

    /**
     * value: "Limited"
     * @const
     */
    "Limited": "Limited"
};



export default Project;

