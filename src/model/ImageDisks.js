/**
 * HyperOne API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ImageAttachedOn from './ImageAttachedOn';
import ImageDisk from './ImageDisk';

/**
 * The ImageDisks model module.
 * @module model/ImageDisks
 * @version 0.0.2
 */
class ImageDisks {
    /**
     * Constructs a new <code>ImageDisks</code>.
     * @alias module:model/ImageDisks
     */
    constructor() { 
        
        ImageDisks.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImageDisks</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImageDisks} obj Optional instance to populate.
     * @return {module:model/ImageDisks} The populated <code>ImageDisks</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImageDisks();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('fileSize')) {
                obj['fileSize'] = ApiClient.convertToType(data['fileSize'], 'Number');
            }
            if (data.hasOwnProperty('attachedOn')) {
                obj['attachedOn'] = ImageAttachedOn.constructFromObject(data['attachedOn']);
            }
            if (data.hasOwnProperty('downloadUrl')) {
                obj['downloadUrl'] = ApiClient.convertToType(data['downloadUrl'], 'String');
            }
            if (data.hasOwnProperty('disk')) {
                obj['disk'] = ImageDisk.constructFromObject(data['disk']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} type
 */
ImageDisks.prototype['type'] = undefined;

/**
 * @member {Number} size
 */
ImageDisks.prototype['size'] = undefined;

/**
 * @member {Number} fileSize
 */
ImageDisks.prototype['fileSize'] = undefined;

/**
 * @member {module:model/ImageAttachedOn} attachedOn
 */
ImageDisks.prototype['attachedOn'] = undefined;

/**
 * @member {String} downloadUrl
 */
ImageDisks.prototype['downloadUrl'] = undefined;

/**
 * @member {module:model/ImageDisk} disk
 */
ImageDisks.prototype['disk'] = undefined;






export default ImageDisks;

