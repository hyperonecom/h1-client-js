/**
 * HyperOne API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InvoiceArray from './InvoiceArray';
import InvoiceBuyer from './InvoiceBuyer';
import InvoiceDuplicate from './InvoiceDuplicate';
import InvoiceItems from './InvoiceItems';
import InvoiceSeller from './InvoiceSeller';

/**
 * The Invoice model module.
 * @module model/Invoice
 * @version 0.0.3
 */
class Invoice {
    /**
     * Constructs a new <code>Invoice</code>.
     * @alias module:model/Invoice
     */
    constructor() { 
        
        Invoice.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Invoice</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Invoice} obj Optional instance to populate.
     * @return {module:model/Invoice} The populated <code>Invoice</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Invoice();

            if (data.hasOwnProperty('additionalInfo')) {
                obj['additionalInfo'] = ApiClient.convertToType(data['additionalInfo'], 'String');
            }
            if (data.hasOwnProperty('corrections')) {
                obj['corrections'] = ApiClient.convertToType(data['corrections'], ['String']);
            }
            if (data.hasOwnProperty('invoiceInfo')) {
                obj['invoiceInfo'] = ApiClient.convertToType(data['invoiceInfo'], 'String');
            }
            if (data.hasOwnProperty('invoiceNo')) {
                obj['invoiceNo'] = ApiClient.convertToType(data['invoiceNo'], 'String');
            }
            if (data.hasOwnProperty('issueDate')) {
                obj['issueDate'] = ApiClient.convertToType(data['issueDate'], 'Date');
            }
            if (data.hasOwnProperty('payments')) {
                obj['payments'] = ApiClient.convertToType(data['payments'], ['String']);
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('seller')) {
                obj['seller'] = InvoiceSeller.constructFromObject(data['seller']);
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [InvoiceItems]);
            }
            if (data.hasOwnProperty('buyer')) {
                obj['buyer'] = InvoiceBuyer.constructFromObject(data['buyer']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('vat')) {
                obj['vat'] = ApiClient.convertToType(data['vat'], 'String');
            }
            if (data.hasOwnProperty('_id')) {
                obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('summary')) {
                obj['summary'] = ApiClient.convertToType(data['summary'], 'String');
            }
            if (data.hasOwnProperty('project')) {
                obj['project'] = ApiClient.convertToType(data['project'], 'String');
            }
            if (data.hasOwnProperty('organisation')) {
                obj['organisation'] = ApiClient.convertToType(data['organisation'], 'String');
            }
            if (data.hasOwnProperty('duplicate')) {
                obj['duplicate'] = InvoiceDuplicate.constructFromObject(data['duplicate']);
            }
            if (data.hasOwnProperty('__array__')) {
                obj['__array__'] = InvoiceArray.constructFromObject(data['__array__']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} additionalInfo
 */
Invoice.prototype['additionalInfo'] = undefined;

/**
 * @member {Array.<String>} corrections
 */
Invoice.prototype['corrections'] = undefined;

/**
 * @member {String} invoiceInfo
 */
Invoice.prototype['invoiceInfo'] = undefined;

/**
 * @member {String} invoiceNo
 */
Invoice.prototype['invoiceNo'] = undefined;

/**
 * @member {Date} issueDate
 */
Invoice.prototype['issueDate'] = undefined;

/**
 * @member {Array.<String>} payments
 */
Invoice.prototype['payments'] = undefined;

/**
 * @member {String} currency
 */
Invoice.prototype['currency'] = undefined;

/**
 * @member {module:model/InvoiceSeller} seller
 */
Invoice.prototype['seller'] = undefined;

/**
 * @member {Array.<module:model/InvoiceItems>} items
 */
Invoice.prototype['items'] = undefined;

/**
 * @member {module:model/InvoiceBuyer} buyer
 */
Invoice.prototype['buyer'] = undefined;

/**
 * @member {module:model/Invoice.TypeEnum} type
 * @default 'vat'
 */
Invoice.prototype['type'] = 'vat';

/**
 * @member {String} vat
 */
Invoice.prototype['vat'] = undefined;

/**
 * @member {String} _id
 */
Invoice.prototype['_id'] = undefined;

/**
 * @member {String} id
 */
Invoice.prototype['id'] = undefined;

/**
 * @member {String} summary
 */
Invoice.prototype['summary'] = undefined;

/**
 * @member {String} project
 */
Invoice.prototype['project'] = undefined;

/**
 * @member {String} organisation
 */
Invoice.prototype['organisation'] = undefined;

/**
 * @member {module:model/InvoiceDuplicate} duplicate
 */
Invoice.prototype['duplicate'] = undefined;

/**
 * @member {module:model/InvoiceArray} __array__
 */
Invoice.prototype['__array__'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
Invoice['TypeEnum'] = {

    /**
     * value: "vat"
     * @const
     */
    "vat": "vat",

    /**
     * value: "correction"
     * @const
     */
    "correction": "correction"
};



export default Invoice;

