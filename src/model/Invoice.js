/**
 * HyperOne API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.2.3-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/InvoiceArray', 'model/InvoiceBuyer', 'model/InvoiceDuplicate', 'model/InvoiceItems', 'model/InvoiceSeller'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./InvoiceArray'), require('./InvoiceBuyer'), require('./InvoiceDuplicate'), require('./InvoiceItems'), require('./InvoiceSeller'));
  } else {
    // Browser globals (root is window)
    if (!root.HyperoneClient) {
      root.HyperoneClient = {};
    }
    root.HyperoneClient.Invoice = factory(root.HyperoneClient.ApiClient, root.HyperoneClient.InvoiceArray, root.HyperoneClient.InvoiceBuyer, root.HyperoneClient.InvoiceDuplicate, root.HyperoneClient.InvoiceItems, root.HyperoneClient.InvoiceSeller);
  }
}(this, function(ApiClient, InvoiceArray, InvoiceBuyer, InvoiceDuplicate, InvoiceItems, InvoiceSeller) {
  'use strict';



  /**
   * The Invoice model module.
   * @module model/Invoice
   * @version 0.0.3
   */

  /**
   * Constructs a new <code>Invoice</code>.
   * @alias module:model/Invoice
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>Invoice</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Invoice} obj Optional instance to populate.
   * @return {module:model/Invoice} The populated <code>Invoice</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('additionalInfo')) {
        obj['additionalInfo'] = ApiClient.convertToType(data['additionalInfo'], 'String');
      }
      if (data.hasOwnProperty('corrections')) {
        obj['corrections'] = ApiClient.convertToType(data['corrections'], ['String']);
      }
      if (data.hasOwnProperty('invoiceInfo')) {
        obj['invoiceInfo'] = ApiClient.convertToType(data['invoiceInfo'], 'String');
      }
      if (data.hasOwnProperty('invoiceNo')) {
        obj['invoiceNo'] = ApiClient.convertToType(data['invoiceNo'], 'String');
      }
      if (data.hasOwnProperty('issueDate')) {
        obj['issueDate'] = ApiClient.convertToType(data['issueDate'], 'Date');
      }
      if (data.hasOwnProperty('payments')) {
        obj['payments'] = ApiClient.convertToType(data['payments'], ['String']);
      }
      if (data.hasOwnProperty('currency')) {
        obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
      }
      if (data.hasOwnProperty('seller')) {
        obj['seller'] = InvoiceSeller.constructFromObject(data['seller']);
      }
      if (data.hasOwnProperty('items')) {
        obj['items'] = ApiClient.convertToType(data['items'], [InvoiceItems]);
      }
      if (data.hasOwnProperty('buyer')) {
        obj['buyer'] = InvoiceBuyer.constructFromObject(data['buyer']);
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('vat')) {
        obj['vat'] = ApiClient.convertToType(data['vat'], 'String');
      }
      if (data.hasOwnProperty('_id')) {
        obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('summary')) {
        obj['summary'] = ApiClient.convertToType(data['summary'], 'String');
      }
      if (data.hasOwnProperty('project')) {
        obj['project'] = ApiClient.convertToType(data['project'], 'String');
      }
      if (data.hasOwnProperty('organisation')) {
        obj['organisation'] = ApiClient.convertToType(data['organisation'], 'String');
      }
      if (data.hasOwnProperty('duplicate')) {
        obj['duplicate'] = InvoiceDuplicate.constructFromObject(data['duplicate']);
      }
      if (data.hasOwnProperty('__array__')) {
        obj['__array__'] = InvoiceArray.constructFromObject(data['__array__']);
      }
    }
    return obj;
  }

  /**
   * @member {String} additionalInfo
   */
  exports.prototype['additionalInfo'] = undefined;
  /**
   * @member {Array.<String>} corrections
   */
  exports.prototype['corrections'] = undefined;
  /**
   * @member {String} invoiceInfo
   */
  exports.prototype['invoiceInfo'] = undefined;
  /**
   * @member {String} invoiceNo
   */
  exports.prototype['invoiceNo'] = undefined;
  /**
   * @member {Date} issueDate
   */
  exports.prototype['issueDate'] = undefined;
  /**
   * @member {Array.<String>} payments
   */
  exports.prototype['payments'] = undefined;
  /**
   * @member {String} currency
   */
  exports.prototype['currency'] = undefined;
  /**
   * @member {module:model/InvoiceSeller} seller
   */
  exports.prototype['seller'] = undefined;
  /**
   * @member {Array.<module:model/InvoiceItems>} items
   */
  exports.prototype['items'] = undefined;
  /**
   * @member {module:model/InvoiceBuyer} buyer
   */
  exports.prototype['buyer'] = undefined;
  /**
   * @member {module:model/Invoice.TypeEnum} type
   * @default 'vat'
   */
  exports.prototype['type'] = 'vat';
  /**
   * @member {String} vat
   */
  exports.prototype['vat'] = undefined;
  /**
   * @member {String} _id
   */
  exports.prototype['_id'] = undefined;
  /**
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {String} summary
   */
  exports.prototype['summary'] = undefined;
  /**
   * @member {String} project
   */
  exports.prototype['project'] = undefined;
  /**
   * @member {String} organisation
   */
  exports.prototype['organisation'] = undefined;
  /**
   * @member {module:model/InvoiceDuplicate} duplicate
   */
  exports.prototype['duplicate'] = undefined;
  /**
   * @member {module:model/InvoiceArray} __array__
   */
  exports.prototype['__array__'] = undefined;


  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "vat"
     * @const
     */
    "vat": "vat",
    /**
     * value: "correction"
     * @const
     */
    "correction": "correction"  };


  return exports;
}));


