/**
 * HyperOne API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Event from './Event';

/**
 * The Payment model module.
 * @module model/Payment
 * @version 0.0.2
 */
class Payment {
    /**
     * Constructs a new <code>Payment</code>.
     * @alias module:model/Payment
     */
    constructor() { 
        
        Payment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Payment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Payment} obj Optional instance to populate.
     * @return {module:model/Payment} The populated <code>Payment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Payment();

            if (data.hasOwnProperty('_id')) {
                obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('services')) {
                obj['services'] = ApiClient.convertToType(data['services'], 'String');
            }
            if (data.hasOwnProperty('flavour')) {
                obj['flavour'] = ApiClient.convertToType(data['flavour'], 'String');
            }
            if (data.hasOwnProperty('modifiedOn')) {
                obj['modifiedOn'] = ApiClient.convertToType(data['modifiedOn'], 'Date');
            }
            if (data.hasOwnProperty('modifiedBy')) {
                obj['modifiedBy'] = ApiClient.convertToType(data['modifiedBy'], 'String');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
            }
            if (data.hasOwnProperty('createdOn')) {
                obj['createdOn'] = ApiClient.convertToType(data['createdOn'], 'Date');
            }
            if (data.hasOwnProperty('accessRights')) {
                obj['accessRights'] = ApiClient.convertToType(data['accessRights'], 'String');
            }
            if (data.hasOwnProperty('processing')) {
                obj['processing'] = ApiClient.convertToType(data['processing'], 'String');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Boolean');
            }
            if (data.hasOwnProperty('queue')) {
                obj['queue'] = ApiClient.convertToType(data['queue'], [Event]);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('tag')) {
                obj['tag'] = ApiClient.convertToType(data['tag'], Object);
            }
            if (data.hasOwnProperty('project')) {
                obj['project'] = ApiClient.convertToType(data['project'], 'String');
            }
            if (data.hasOwnProperty('creditsFree')) {
                obj['creditsFree'] = ApiClient.convertToType(data['creditsFree'], 'Number');
            }
            if (data.hasOwnProperty('credits')) {
                obj['credits'] = ApiClient.convertToType(data['credits'], 'Number');
            }
            if (data.hasOwnProperty('channel')) {
                obj['channel'] = ApiClient.convertToType(data['channel'], 'String');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} _id
 */
Payment.prototype['_id'] = undefined;

/**
 * @member {String} name
 */
Payment.prototype['name'] = undefined;

/**
 * @member {String} services
 */
Payment.prototype['services'] = undefined;

/**
 * @member {String} flavour
 */
Payment.prototype['flavour'] = undefined;

/**
 * @member {Date} modifiedOn
 */
Payment.prototype['modifiedOn'] = undefined;

/**
 * @member {String} modifiedBy
 */
Payment.prototype['modifiedBy'] = undefined;

/**
 * @member {String} createdBy
 */
Payment.prototype['createdBy'] = undefined;

/**
 * @member {Date} createdOn
 */
Payment.prototype['createdOn'] = undefined;

/**
 * @member {String} accessRights
 */
Payment.prototype['accessRights'] = undefined;

/**
 * @member {String} processing
 */
Payment.prototype['processing'] = undefined;

/**
 * @member {Boolean} created
 */
Payment.prototype['created'] = undefined;

/**
 * @member {Array.<module:model/Event>} queue
 */
Payment.prototype['queue'] = undefined;

/**
 * @member {String} state
 */
Payment.prototype['state'] = undefined;

/**
 * @member {Object} tag
 */
Payment.prototype['tag'] = undefined;

/**
 * @member {String} project
 */
Payment.prototype['project'] = undefined;

/**
 * @member {Number} creditsFree
 */
Payment.prototype['creditsFree'] = undefined;

/**
 * @member {Number} credits
 */
Payment.prototype['credits'] = undefined;

/**
 * @member {module:model/Payment.ChannelEnum} channel
 */
Payment.prototype['channel'] = undefined;

/**
 * @member {Number} amount
 */
Payment.prototype['amount'] = undefined;

/**
 * @member {module:model/Payment.TypeEnum} type
 */
Payment.prototype['type'] = undefined;





/**
 * Allowed values for the <code>channel</code> property.
 * @enum {String}
 * @readonly
 */
Payment['ChannelEnum'] = {

    /**
     * value: "bank"
     * @const
     */
    "bank": "bank",

    /**
     * value: "dotpay"
     * @const
     */
    "dotpay": "dotpay",

    /**
     * value: "promo"
     * @const
     */
    "promo": "promo",

    /**
     * value: "paypal"
     * @const
     */
    "paypal": "paypal",

    /**
     * value: "ecard"
     * @const
     */
    "ecard": "ecard",

    /**
     * value: "przelewy24"
     * @const
     */
    "przelewy24": "przelewy24"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
Payment['TypeEnum'] = {

    /**
     * value: "bonus"
     * @const
     */
    "bonus": "bonus",

    /**
     * value: "refund"
     * @const
     */
    "refund": "refund",

    /**
     * value: "money"
     * @const
     */
    "money": "money"
};



export default Payment;

