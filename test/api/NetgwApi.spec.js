/**
 * HyperOne API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.0.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HyperOneApi);
  }
}(this, function(expect, HyperOneApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HyperOneApi.NetgwApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NetgwApi', function() {
    describe('netgwActionAttach', function() {
      it('should call netgwActionAttach successfully', function(done) {
        //uncomment below and update the code to test netgwActionAttach
        //instance.netgwActionAttach(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netgwActionDetach', function() {
      it('should call netgwActionDetach successfully', function(done) {
        //uncomment below and update the code to test netgwActionDetach
        //instance.netgwActionDetach(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netgwCreate', function() {
      it('should call netgwCreate successfully', function(done) {
        //uncomment below and update the code to test netgwCreate
        //instance.netgwCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netgwDelete', function() {
      it('should call netgwDelete successfully', function(done) {
        //uncomment below and update the code to test netgwDelete
        //instance.netgwDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netgwDeleteAccessrightsIdentity', function() {
      it('should call netgwDeleteAccessrightsIdentity successfully', function(done) {
        //uncomment below and update the code to test netgwDeleteAccessrightsIdentity
        //instance.netgwDeleteAccessrightsIdentity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netgwDeleteTagKey', function() {
      it('should call netgwDeleteTagKey successfully', function(done) {
        //uncomment below and update the code to test netgwDeleteTagKey
        //instance.netgwDeleteTagKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netgwGetServicesServiceId', function() {
      it('should call netgwGetServicesServiceId successfully', function(done) {
        //uncomment below and update the code to test netgwGetServicesServiceId
        //instance.netgwGetServicesServiceId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netgwGetTag', function() {
      it('should call netgwGetTag successfully', function(done) {
        //uncomment below and update the code to test netgwGetTag
        //instance.netgwGetTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netgwList', function() {
      it('should call netgwList successfully', function(done) {
        //uncomment below and update the code to test netgwList
        //instance.netgwList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netgwListAccessrights', function() {
      it('should call netgwListAccessrights successfully', function(done) {
        //uncomment below and update the code to test netgwListAccessrights
        //instance.netgwListAccessrights(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netgwListQueue', function() {
      it('should call netgwListQueue successfully', function(done) {
        //uncomment below and update the code to test netgwListQueue
        //instance.netgwListQueue(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netgwListServices', function() {
      it('should call netgwListServices successfully', function(done) {
        //uncomment below and update the code to test netgwListServices
        //instance.netgwListServices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netgwPatchTag', function() {
      it('should call netgwPatchTag successfully', function(done) {
        //uncomment below and update the code to test netgwPatchTag
        //instance.netgwPatchTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netgwPostAccessrights', function() {
      it('should call netgwPostAccessrights successfully', function(done) {
        //uncomment below and update the code to test netgwPostAccessrights
        //instance.netgwPostAccessrights(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netgwShow', function() {
      it('should call netgwShow successfully', function(done) {
        //uncomment below and update the code to test netgwShow
        //instance.netgwShow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netgwUpdate', function() {
      it('should call netgwUpdate successfully', function(done) {
        //uncomment below and update the code to test netgwUpdate
        //instance.netgwUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
