/**
 * HyperOne API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HyperoneClient);
  }
}(this, function(expect, HyperoneClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HyperoneClient.SnapshotApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SnapshotApi', function() {
    describe('snapshotCreate', function() {
      it('should call snapshotCreate successfully', function(done) {
        //uncomment below and update the code to test snapshotCreate
        //instance.snapshotCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snapshotDelete', function() {
      it('should call snapshotDelete successfully', function(done) {
        //uncomment below and update the code to test snapshotDelete
        //instance.snapshotDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snapshotDeleteAccessrightsIdentity', function() {
      it('should call snapshotDeleteAccessrightsIdentity successfully', function(done) {
        //uncomment below and update the code to test snapshotDeleteAccessrightsIdentity
        //instance.snapshotDeleteAccessrightsIdentity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snapshotDeleteTagKey', function() {
      it('should call snapshotDeleteTagKey successfully', function(done) {
        //uncomment below and update the code to test snapshotDeleteTagKey
        //instance.snapshotDeleteTagKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snapshotGetServicesServiceId', function() {
      it('should call snapshotGetServicesServiceId successfully', function(done) {
        //uncomment below and update the code to test snapshotGetServicesServiceId
        //instance.snapshotGetServicesServiceId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snapshotGetTag', function() {
      it('should call snapshotGetTag successfully', function(done) {
        //uncomment below and update the code to test snapshotGetTag
        //instance.snapshotGetTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snapshotList', function() {
      it('should call snapshotList successfully', function(done) {
        //uncomment below and update the code to test snapshotList
        //instance.snapshotList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snapshotListAccessrights', function() {
      it('should call snapshotListAccessrights successfully', function(done) {
        //uncomment below and update the code to test snapshotListAccessrights
        //instance.snapshotListAccessrights(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snapshotListQueue', function() {
      it('should call snapshotListQueue successfully', function(done) {
        //uncomment below and update the code to test snapshotListQueue
        //instance.snapshotListQueue(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snapshotListServices', function() {
      it('should call snapshotListServices successfully', function(done) {
        //uncomment below and update the code to test snapshotListServices
        //instance.snapshotListServices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snapshotPatchTag', function() {
      it('should call snapshotPatchTag successfully', function(done) {
        //uncomment below and update the code to test snapshotPatchTag
        //instance.snapshotPatchTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snapshotPostAccessrights', function() {
      it('should call snapshotPostAccessrights successfully', function(done) {
        //uncomment below and update the code to test snapshotPostAccessrights
        //instance.snapshotPostAccessrights(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snapshotPutTag', function() {
      it('should call snapshotPutTag successfully', function(done) {
        //uncomment below and update the code to test snapshotPutTag
        //instance.snapshotPutTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snapshotShow', function() {
      it('should call snapshotShow successfully', function(done) {
        //uncomment below and update the code to test snapshotShow
        //instance.snapshotShow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snapshotUpdate', function() {
      it('should call snapshotUpdate successfully', function(done) {
        //uncomment below and update the code to test snapshotUpdate
        //instance.snapshotUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
