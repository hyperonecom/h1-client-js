/**
 * HyperOne API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HyperoneClient);
  }
}(this, function(expect, HyperoneClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HyperoneClient.UserApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UserApi', function() {
    describe('userDeleteCredentialId', function() {
      it('should call userDeleteCredentialId successfully', function(done) {
        //uncomment below and update the code to test userDeleteCredentialId
        //instance.userDeleteCredentialId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userDeleteCredentialauthtokenId', function() {
      it('should call userDeleteCredentialauthtokenId successfully', function(done) {
        //uncomment below and update the code to test userDeleteCredentialauthtokenId
        //instance.userDeleteCredentialauthtokenId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userDeleteCredentialcertificateId', function() {
      it('should call userDeleteCredentialcertificateId successfully', function(done) {
        //uncomment below and update the code to test userDeleteCredentialcertificateId
        //instance.userDeleteCredentialcertificateId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userDeleteCredentialpasswordId', function() {
      it('should call userDeleteCredentialpasswordId successfully', function(done) {
        //uncomment below and update the code to test userDeleteCredentialpasswordId
        //instance.userDeleteCredentialpasswordId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userDeleteTagKey', function() {
      it('should call userDeleteTagKey successfully', function(done) {
        //uncomment below and update the code to test userDeleteTagKey
        //instance.userDeleteTagKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userGetCredentialId', function() {
      it('should call userGetCredentialId successfully', function(done) {
        //uncomment below and update the code to test userGetCredentialId
        //instance.userGetCredentialId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userGetCredentialauthtokenId', function() {
      it('should call userGetCredentialauthtokenId successfully', function(done) {
        //uncomment below and update the code to test userGetCredentialauthtokenId
        //instance.userGetCredentialauthtokenId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userGetCredentialcertificateId', function() {
      it('should call userGetCredentialcertificateId successfully', function(done) {
        //uncomment below and update the code to test userGetCredentialcertificateId
        //instance.userGetCredentialcertificateId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userGetCredentialpasswordId', function() {
      it('should call userGetCredentialpasswordId successfully', function(done) {
        //uncomment below and update the code to test userGetCredentialpasswordId
        //instance.userGetCredentialpasswordId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userGetServicesServiceId', function() {
      it('should call userGetServicesServiceId successfully', function(done) {
        //uncomment below and update the code to test userGetServicesServiceId
        //instance.userGetServicesServiceId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userGetTag', function() {
      it('should call userGetTag successfully', function(done) {
        //uncomment below and update the code to test userGetTag
        //instance.userGetTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userListCredential', function() {
      it('should call userListCredential successfully', function(done) {
        //uncomment below and update the code to test userListCredential
        //instance.userListCredential(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userListCredentialauthtoken', function() {
      it('should call userListCredentialauthtoken successfully', function(done) {
        //uncomment below and update the code to test userListCredentialauthtoken
        //instance.userListCredentialauthtoken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userListCredentialcertificate', function() {
      it('should call userListCredentialcertificate successfully', function(done) {
        //uncomment below and update the code to test userListCredentialcertificate
        //instance.userListCredentialcertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userListCredentialpassword', function() {
      it('should call userListCredentialpassword successfully', function(done) {
        //uncomment below and update the code to test userListCredentialpassword
        //instance.userListCredentialpassword(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userListInvitation', function() {
      it('should call userListInvitation successfully', function(done) {
        //uncomment below and update the code to test userListInvitation
        //instance.userListInvitation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userListServices', function() {
      it('should call userListServices successfully', function(done) {
        //uncomment below and update the code to test userListServices
        //instance.userListServices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPatchCredentialId', function() {
      it('should call userPatchCredentialId successfully', function(done) {
        //uncomment below and update the code to test userPatchCredentialId
        //instance.userPatchCredentialId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPatchCredentialcertificateId', function() {
      it('should call userPatchCredentialcertificateId successfully', function(done) {
        //uncomment below and update the code to test userPatchCredentialcertificateId
        //instance.userPatchCredentialcertificateId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPatchCredentialpasswordId', function() {
      it('should call userPatchCredentialpasswordId successfully', function(done) {
        //uncomment below and update the code to test userPatchCredentialpasswordId
        //instance.userPatchCredentialpasswordId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPatchTag', function() {
      it('should call userPatchTag successfully', function(done) {
        //uncomment below and update the code to test userPatchTag
        //instance.userPatchTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPostCredential', function() {
      it('should call userPostCredential successfully', function(done) {
        //uncomment below and update the code to test userPostCredential
        //instance.userPostCredential(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPostCredentialcertificate', function() {
      it('should call userPostCredentialcertificate successfully', function(done) {
        //uncomment below and update the code to test userPostCredentialcertificate
        //instance.userPostCredentialcertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPostCredentialpassword', function() {
      it('should call userPostCredentialpassword successfully', function(done) {
        //uncomment below and update the code to test userPostCredentialpassword
        //instance.userPostCredentialpassword(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPostInvitationInvitationIdaccept', function() {
      it('should call userPostInvitationInvitationIdaccept successfully', function(done) {
        //uncomment below and update the code to test userPostInvitationInvitationIdaccept
        //instance.userPostInvitationInvitationIdaccept(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPostInvitationInvitationIddecline', function() {
      it('should call userPostInvitationInvitationIddecline successfully', function(done) {
        //uncomment below and update the code to test userPostInvitationInvitationIddecline
        //instance.userPostInvitationInvitationIddecline(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPutTag', function() {
      it('should call userPutTag successfully', function(done) {
        //uncomment below and update the code to test userPutTag
        //instance.userPutTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userShow', function() {
      it('should call userShow successfully', function(done) {
        //uncomment below and update the code to test userShow
        //instance.userShow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userUpdate', function() {
      it('should call userUpdate successfully', function(done) {
        //uncomment below and update the code to test userUpdate
        //instance.userUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
