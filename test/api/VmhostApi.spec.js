/**
 * HyperOne API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HyperoneClient);
  }
}(this, function(expect, HyperoneClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HyperoneClient.VmhostApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('VmhostApi', function() {
    describe('vmhostDeleteAccessrightsIdentity', function() {
      it('should call vmhostDeleteAccessrightsIdentity successfully', function(done) {
        //uncomment below and update the code to test vmhostDeleteAccessrightsIdentity
        //instance.vmhostDeleteAccessrightsIdentity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vmhostDeleteTagKey', function() {
      it('should call vmhostDeleteTagKey successfully', function(done) {
        //uncomment below and update the code to test vmhostDeleteTagKey
        //instance.vmhostDeleteTagKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vmhostGetServicesServiceId', function() {
      it('should call vmhostGetServicesServiceId successfully', function(done) {
        //uncomment below and update the code to test vmhostGetServicesServiceId
        //instance.vmhostGetServicesServiceId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vmhostGetTag', function() {
      it('should call vmhostGetTag successfully', function(done) {
        //uncomment below and update the code to test vmhostGetTag
        //instance.vmhostGetTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vmhostList', function() {
      it('should call vmhostList successfully', function(done) {
        //uncomment below and update the code to test vmhostList
        //instance.vmhostList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vmhostListAccessrights', function() {
      it('should call vmhostListAccessrights successfully', function(done) {
        //uncomment below and update the code to test vmhostListAccessrights
        //instance.vmhostListAccessrights(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vmhostListQueue', function() {
      it('should call vmhostListQueue successfully', function(done) {
        //uncomment below and update the code to test vmhostListQueue
        //instance.vmhostListQueue(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vmhostListServices', function() {
      it('should call vmhostListServices successfully', function(done) {
        //uncomment below and update the code to test vmhostListServices
        //instance.vmhostListServices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vmhostPatchTag', function() {
      it('should call vmhostPatchTag successfully', function(done) {
        //uncomment below and update the code to test vmhostPatchTag
        //instance.vmhostPatchTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vmhostPostAccessrights', function() {
      it('should call vmhostPostAccessrights successfully', function(done) {
        //uncomment below and update the code to test vmhostPostAccessrights
        //instance.vmhostPostAccessrights(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vmhostPutTag', function() {
      it('should call vmhostPutTag successfully', function(done) {
        //uncomment below and update the code to test vmhostPutTag
        //instance.vmhostPutTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vmhostShow', function() {
      it('should call vmhostShow successfully', function(done) {
        //uncomment below and update the code to test vmhostShow
        //instance.vmhostShow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
