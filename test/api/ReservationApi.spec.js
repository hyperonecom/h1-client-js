/**
 * HyperOne API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.0.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HyperOneApi);
  }
}(this, function(expect, HyperOneApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HyperOneApi.ReservationApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ReservationApi', function() {
    describe('reservationActionAssign', function() {
      it('should call reservationActionAssign successfully', function(done) {
        //uncomment below and update the code to test reservationActionAssign
        //instance.reservationActionAssign(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reservationActionExtend', function() {
      it('should call reservationActionExtend successfully', function(done) {
        //uncomment below and update the code to test reservationActionExtend
        //instance.reservationActionExtend(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reservationActionUnassign', function() {
      it('should call reservationActionUnassign successfully', function(done) {
        //uncomment below and update the code to test reservationActionUnassign
        //instance.reservationActionUnassign(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reservationCreate', function() {
      it('should call reservationCreate successfully', function(done) {
        //uncomment below and update the code to test reservationCreate
        //instance.reservationCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reservationDelete', function() {
      it('should call reservationDelete successfully', function(done) {
        //uncomment below and update the code to test reservationDelete
        //instance.reservationDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reservationDeleteAccessrightsIdentity', function() {
      it('should call reservationDeleteAccessrightsIdentity successfully', function(done) {
        //uncomment below and update the code to test reservationDeleteAccessrightsIdentity
        //instance.reservationDeleteAccessrightsIdentity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reservationDeleteTagKey', function() {
      it('should call reservationDeleteTagKey successfully', function(done) {
        //uncomment below and update the code to test reservationDeleteTagKey
        //instance.reservationDeleteTagKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reservationGetServicesServiceId', function() {
      it('should call reservationGetServicesServiceId successfully', function(done) {
        //uncomment below and update the code to test reservationGetServicesServiceId
        //instance.reservationGetServicesServiceId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reservationGetTag', function() {
      it('should call reservationGetTag successfully', function(done) {
        //uncomment below and update the code to test reservationGetTag
        //instance.reservationGetTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reservationList', function() {
      it('should call reservationList successfully', function(done) {
        //uncomment below and update the code to test reservationList
        //instance.reservationList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reservationListAccessrights', function() {
      it('should call reservationListAccessrights successfully', function(done) {
        //uncomment below and update the code to test reservationListAccessrights
        //instance.reservationListAccessrights(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reservationListQueue', function() {
      it('should call reservationListQueue successfully', function(done) {
        //uncomment below and update the code to test reservationListQueue
        //instance.reservationListQueue(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reservationListServices', function() {
      it('should call reservationListServices successfully', function(done) {
        //uncomment below and update the code to test reservationListServices
        //instance.reservationListServices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reservationPatchTag', function() {
      it('should call reservationPatchTag successfully', function(done) {
        //uncomment below and update the code to test reservationPatchTag
        //instance.reservationPatchTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reservationPostAccessrights', function() {
      it('should call reservationPostAccessrights successfully', function(done) {
        //uncomment below and update the code to test reservationPostAccessrights
        //instance.reservationPostAccessrights(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reservationShow', function() {
      it('should call reservationShow successfully', function(done) {
        //uncomment below and update the code to test reservationShow
        //instance.reservationShow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reservationUpdate', function() {
      it('should call reservationUpdate successfully', function(done) {
        //uncomment below and update the code to test reservationUpdate
        //instance.reservationUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
