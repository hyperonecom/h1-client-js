/**
 * HyperOne API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HyperoneClient);
  }
}(this, function(expect, HyperoneClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HyperoneClient.NetadpApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NetadpApi', function() {
    describe('netadpActionFirewallAdd', function() {
      it('should call netadpActionFirewallAdd successfully', function(done) {
        //uncomment below and update the code to test netadpActionFirewallAdd
        //instance.netadpActionFirewallAdd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netadpActionFirewallRemove', function() {
      it('should call netadpActionFirewallRemove successfully', function(done) {
        //uncomment below and update the code to test netadpActionFirewallRemove
        //instance.netadpActionFirewallRemove(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netadpDeleteAccessrightsIdentity', function() {
      it('should call netadpDeleteAccessrightsIdentity successfully', function(done) {
        //uncomment below and update the code to test netadpDeleteAccessrightsIdentity
        //instance.netadpDeleteAccessrightsIdentity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netadpDeleteTagKey', function() {
      it('should call netadpDeleteTagKey successfully', function(done) {
        //uncomment below and update the code to test netadpDeleteTagKey
        //instance.netadpDeleteTagKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netadpGetServicesServiceId', function() {
      it('should call netadpGetServicesServiceId successfully', function(done) {
        //uncomment below and update the code to test netadpGetServicesServiceId
        //instance.netadpGetServicesServiceId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netadpGetTag', function() {
      it('should call netadpGetTag successfully', function(done) {
        //uncomment below and update the code to test netadpGetTag
        //instance.netadpGetTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netadpList', function() {
      it('should call netadpList successfully', function(done) {
        //uncomment below and update the code to test netadpList
        //instance.netadpList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netadpListAccessrights', function() {
      it('should call netadpListAccessrights successfully', function(done) {
        //uncomment below and update the code to test netadpListAccessrights
        //instance.netadpListAccessrights(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netadpListQueue', function() {
      it('should call netadpListQueue successfully', function(done) {
        //uncomment below and update the code to test netadpListQueue
        //instance.netadpListQueue(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netadpListServices', function() {
      it('should call netadpListServices successfully', function(done) {
        //uncomment below and update the code to test netadpListServices
        //instance.netadpListServices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netadpPatchTag', function() {
      it('should call netadpPatchTag successfully', function(done) {
        //uncomment below and update the code to test netadpPatchTag
        //instance.netadpPatchTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netadpPostAccessrights', function() {
      it('should call netadpPostAccessrights successfully', function(done) {
        //uncomment below and update the code to test netadpPostAccessrights
        //instance.netadpPostAccessrights(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netadpPutTag', function() {
      it('should call netadpPutTag successfully', function(done) {
        //uncomment below and update the code to test netadpPutTag
        //instance.netadpPutTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('netadpShow', function() {
      it('should call netadpShow successfully', function(done) {
        //uncomment below and update the code to test netadpShow
        //instance.netadpShow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
